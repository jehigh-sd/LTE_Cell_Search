-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\ltehdlDownlinkSyncDemod\LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_SSS_Dot_Product.vhd
-- Created: 2022-05-23 17:26:44
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_SSS_Dot_Product
-- Source Path: ltehdlDownlinkSyncDemod/Sync Signal Search/SSS Searcher/Max Likelihood SSS/SSS_Dot_Product
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
LIBRARY work_ltehdlDownlinkSyncDemod;
USE work.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ltehdlDownlinkSyncDemod_pac.ALL;

ENTITY LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_SSS_Dot_Product IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        validIn                           :   IN    std_logic;
        seqIn                             :   IN    std_logic_vector(1 DOWNTO 0);  -- sfix2
        seqNumIn                          :   IN    std_logic_vector(9 DOWNTO 0);  -- ufix10
        accStart                          :   IN    std_logic;
        accEnd                            :   IN    std_logic;
        correlation                       :   OUT   std_logic_vector(35 DOWNTO 0);  -- sfix36_En26
        threshold                         :   OUT   std_logic_vector(35 DOWNTO 0);  -- sfix36_En26
        validOut                          :   OUT   std_logic;
        seqNumOut                         :   OUT   std_logic_vector(9 DOWNTO 0)  -- ufix10
        );
END LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_SSS_Dot_Product;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_SSS_Dot_Product IS

  -- Component Declarations
  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_0
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          dataIn_im                       :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          dataOut                         :   OUT   std_logic_vector(35 DOWNTO 0)  -- sfix36_En26
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_1
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataOut                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En30
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter_block
    PORT( x                               :   IN    std_logic_vector(35 DOWNTO 0);  -- sfix36_En26
          y                               :   OUT   std_logic_vector(35 DOWNTO 0)  -- sfix36_En26
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_0
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_0(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_1
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_1(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter_block
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter_block(rtl);

  -- Signals
  SIGNAL accEndReg                        : std_logic;
  SIGNAL stateControl                     : std_logic;
  SIGNAL delayMatch14_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_1                   : std_logic;
  SIGNAL enb_gated                        : std_logic;
  SIGNAL Delay26_out1                     : std_logic;
  SIGNAL stateControl_2                   : std_logic;
  SIGNAL delayMatch15_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_3                   : std_logic;
  SIGNAL enb_gated_1                      : std_logic;
  SIGNAL Delay31_out1                     : std_logic;
  SIGNAL stateControl_4                   : std_logic;
  SIGNAL delayMatch16_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_5                   : std_logic;
  SIGNAL enb_gated_2                      : std_logic;
  SIGNAL Delay39_out1                     : std_logic;
  SIGNAL stateControl_6                   : std_logic;
  SIGNAL delayMatch17_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_7                   : std_logic;
  SIGNAL enb_gated_3                      : std_logic;
  SIGNAL Delay4_out1                      : std_logic;
  SIGNAL stateControl_8                   : std_logic;
  SIGNAL delayMatch18_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_9                   : std_logic;
  SIGNAL enb_gated_4                      : std_logic;
  SIGNAL Delay15_out1                     : std_logic;
  SIGNAL stateControl_10                  : std_logic;
  SIGNAL delayMatch19_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_11                  : std_logic;
  SIGNAL enb_gated_5                      : std_logic;
  SIGNAL Delay17_out1                     : std_logic;
  SIGNAL stateControl_12                  : std_logic;
  SIGNAL delayMatch20_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_13                  : std_logic;
  SIGNAL enb_gated_6                      : std_logic;
  SIGNAL Delay2_reg                       : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL stateControl_14                  : std_logic;
  SIGNAL delayMatch9_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_15                  : std_logic;
  SIGNAL enb_gated_7                      : std_logic;
  SIGNAL Delay22_out1                     : std_logic;
  SIGNAL stateControl_16                  : std_logic;
  SIGNAL delayMatch10_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_17                  : std_logic;
  SIGNAL enb_gated_8                      : std_logic;
  SIGNAL Delay28_out1                     : std_logic;
  SIGNAL stateControl_18                  : std_logic;
  SIGNAL delayMatch11_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_19                  : std_logic;
  SIGNAL enb_gated_9                      : std_logic;
  SIGNAL Delay36_out1                     : std_logic;
  SIGNAL stateControl_20                  : std_logic;
  SIGNAL delayMatch12_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_21                  : std_logic;
  SIGNAL enb_gated_10                     : std_logic;
  SIGNAL accEnReg                         : std_logic;
  SIGNAL stateControl_22                  : std_logic;
  SIGNAL delayMatch5_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_23                  : std_logic;
  SIGNAL enb_gated_11                     : std_logic;
  SIGNAL Delay25_out1                     : std_logic;
  SIGNAL stateControl_24                  : std_logic;
  SIGNAL delayMatch6_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_25                  : std_logic;
  SIGNAL enb_gated_12                     : std_logic;
  SIGNAL Delay30_out1                     : std_logic;
  SIGNAL stateControl_26                  : std_logic;
  SIGNAL delayMatch7_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_27                  : std_logic;
  SIGNAL enb_gated_13                     : std_logic;
  SIGNAL Delay38_out1                     : std_logic;
  SIGNAL stateControl_28                  : std_logic;
  SIGNAL delayMatch8_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_29                  : std_logic;
  SIGNAL enb_gated_14                     : std_logic;
  SIGNAL accStartReg                      : std_logic;
  SIGNAL seqIn_signed                     : signed(1 DOWNTO 0);  -- sfix2
  SIGNAL stateControl_30                  : std_logic;
  SIGNAL delayMatch1_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_31                  : std_logic;
  SIGNAL enb_gated_15                     : std_logic;
  SIGNAL Delay23_out1                     : signed(1 DOWNTO 0);  -- sfix2
  SIGNAL Compare_To_Zero1_out1            : std_logic;
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL stateControl_32                  : std_logic;
  SIGNAL delayMatch_reg                   : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_33                  : std_logic;
  SIGNAL enb_gated_16                     : std_logic;
  SIGNAL Delay24_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay24_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Gain_cast                        : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Gain_cast_1                      : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Gain_cast_2                      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Gain_cast_3                      : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Gain_cast_4                      : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Gain_cast_5                      : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Gain_out1_re                     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Gain_out1_im                     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL real1_out1_re                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL real1_out1_im                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL stateControl_34                  : std_logic;
  SIGNAL delayMatch2_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_35                  : std_logic;
  SIGNAL enb_gated_17                     : std_logic;
  SIGNAL Delay29_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay29_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Gain1_out1_re                    : signed(31 DOWNTO 0);  -- sfix32_En32
  SIGNAL Gain1_out1_im                    : signed(31 DOWNTO 0);  -- sfix32_En32
  SIGNAL stateControl_36                  : std_logic;
  SIGNAL delayMatch3_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_37                  : std_logic;
  SIGNAL enb_gated_18                     : std_logic;
  SIGNAL Delay37_out1_re                  : signed(31 DOWNTO 0);  -- sfix32_En32
  SIGNAL Delay37_out1_im                  : signed(31 DOWNTO 0);  -- sfix32_En32
  SIGNAL Data_Type_Conversion4_out1_re    : signed(15 DOWNTO 0);  -- sfix16_En17
  SIGNAL Data_Type_Conversion4_out1_im    : signed(15 DOWNTO 0);  -- sfix16_En17
  SIGNAL stateControl_39                  : std_logic;
  SIGNAL delayMatch4_reg                  : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_40                  : std_logic;
  SIGNAL enb_gated_19                     : std_logic;
  SIGNAL Delay1_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En17
  SIGNAL Delay1_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En17
  SIGNAL acc_dataIn_re                    : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL acc_dataIn_im                    : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL acc_re                           : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL acc_im                           : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Add_out1_re                      : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Add_out1_im                      : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Switch_out1_re                   : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Switch_out1_im                   : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Accumulator_ectrl_re             : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Accumulator_ectrl_im             : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL acc_re_1                         : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL acc_im_1                         : signed(21 DOWNTO 0);  -- sfix22_En17
  SIGNAL Data_Type_Conversion1_out1_re    : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL Data_Type_Conversion1_out1_im    : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL stateControl_41                  : std_logic;
  SIGNAL delayMatch13_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_42                  : std_logic;
  SIGNAL enb_gated_20                     : std_logic;
  SIGNAL Delay16_out1_re                  : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL Delay16_out1_im                  : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL Magnitude_Squared_0_out1         : std_logic_vector(35 DOWNTO 0);  -- ufix36
  SIGNAL Magnitude_Squared_0_out1_signed  : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL Delay10_out1                     : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL Delay10_ectrl                    : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL stateControl_43                  : std_logic;
  SIGNAL delayMatch25_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_44                  : std_logic;
  SIGNAL enb_gated_21                     : std_logic;
  SIGNAL Delay33_out1                     : signed(1 DOWNTO 0);  -- sfix2
  SIGNAL Delay33_out1_is_not0             : std_logic;
  SIGNAL seqNumIn_unsigned                : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL stateControl_45                  : std_logic;
  SIGNAL delayMatch24_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_46                  : std_logic;
  SIGNAL enb_gated_22                     : std_logic;
  SIGNAL Delay27_out1                     : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL stateControl_47                  : std_logic;
  SIGNAL delayMatch26_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_48                  : std_logic;
  SIGNAL enb_gated_23                     : std_logic;
  SIGNAL Delay34_out1                     : std_logic;
  SIGNAL calculateEnergy                  : std_logic;
  SIGNAL stateControl_49                  : std_logic;
  SIGNAL delayMatch27_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_50                  : std_logic;
  SIGNAL enb_gated_24                     : std_logic;
  SIGNAL Delay41_out1                     : std_logic;
  SIGNAL stateControl_51                  : std_logic;
  SIGNAL delayMatch28_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_52                  : std_logic;
  SIGNAL enb_gated_25                     : std_logic;
  SIGNAL Delay13_out1                     : std_logic;
  SIGNAL stateControl_53                  : std_logic;
  SIGNAL delayMatch30_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_54                  : std_logic;
  SIGNAL enb_gated_26                     : std_logic;
  SIGNAL Delay14_reg                      : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL Delay14_out1                     : std_logic;
  SIGNAL stateControl_55                  : std_logic;
  SIGNAL delayMatch29_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_56                  : std_logic;
  SIGNAL enb_gated_27                     : std_logic;
  SIGNAL Delay19_reg                      : std_logic_vector(0 TO 3);  -- ufix1 [4]
  SIGNAL Delay19_out1                     : std_logic;
  SIGNAL stateControl_57                  : std_logic;
  SIGNAL delayMatch21_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_58                  : std_logic;
  SIGNAL enb_gated_28                     : std_logic;
  SIGNAL Delay32_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay32_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Gain2_out1_re                    : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL Gain2_out1_im                    : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL stateControl_59                  : std_logic;
  SIGNAL delayMatch22_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_60                  : std_logic;
  SIGNAL enb_gated_29                     : std_logic;
  SIGNAL Delay40_out1_re                  : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL Delay40_out1_im                  : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL Data_Type_Conversion5_out1_re    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Data_Type_Conversion5_out1_im    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL stateControl_61                  : std_logic;
  SIGNAL delayMatch23_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_62                  : std_logic;
  SIGNAL enb_gated_30                     : std_logic;
  SIGNAL Delay11_out1_re                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay11_out1_im                  : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Magnitude_Squared_1_out1         : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Magnitude_Squared_1_out1_signed  : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL acc_dataIn                       : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL acc                              : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL Add1_out1                        : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL Switch1_out1                     : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL Accumulator1_ectrl               : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL acc_1                            : signed(37 DOWNTO 0);  -- sfix38_En30
  SIGNAL Data_Type_Conversion3_out1       : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL stateControl_63                  : std_logic;
  SIGNAL delayMatch31_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_64                  : std_logic;
  SIGNAL enb_gated_31                     : std_logic;
  SIGNAL Delay18_out1                     : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL y                                : std_logic_vector(35 DOWNTO 0);  -- ufix36
  SIGNAL y_signed                         : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL Delay12_out1                     : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL Delay12_ectrl                    : signed(35 DOWNTO 0);  -- sfix36_En26
  SIGNAL stateControl_65                  : std_logic;
  SIGNAL delayMatch32_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_66                  : std_logic;
  SIGNAL enb_gated_32                     : std_logic;
  SIGNAL Delay20_out1                     : std_logic;
  SIGNAL stateControl_67                  : std_logic;
  SIGNAL delayMatch33_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_68                  : std_logic;
  SIGNAL enb_gated_33                     : std_logic;
  SIGNAL Delay35_out1                     : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL stateControl_69                  : std_logic;
  SIGNAL delayMatch34_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_70                  : std_logic;
  SIGNAL enb_gated_34                     : std_logic;
  SIGNAL Delay42_out1                     : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL stateControl_71                  : std_logic;
  SIGNAL delayMatch35_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_72                  : std_logic;
  SIGNAL enb_gated_35                     : std_logic;
  SIGNAL Delay3_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL stateControl_73                  : std_logic;
  SIGNAL delayMatch36_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_74                  : std_logic;
  SIGNAL enb_gated_36                     : std_logic;
  SIGNAL Delay7_reg                       : vector_of_unsigned10(0 TO 3);  -- ufix10 [4]
  SIGNAL Delay7_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL stateControl_75                  : std_logic;
  SIGNAL delayMatch37_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_76                  : std_logic;
  SIGNAL enb_gated_37                     : std_logic;
  SIGNAL Delay8_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL stateControl_77                  : std_logic;
  SIGNAL delayMatch38_reg                 : std_logic_vector(0 TO 41);  -- ufix1 [42]
  SIGNAL stateControl_78                  : std_logic;
  SIGNAL enb_gated_38                     : std_logic;
  SIGNAL Delay9_out1                      : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Delay21_out1                     : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Delay21_ectrl                    : unsigned(9 DOWNTO 0);  -- ufix10

BEGIN
  -- SSS Threshold Scaling
  -- 
  -- Apply gain of sqrt(SSSThresholdScalingfactor) before squaring the signal to avoid the need for a wide multiplier.
  -- 
  -- SSS Normalization Factor
  -- 
  -- Magnitude squared
  -- Reduce the correlation result to 18 bits, keeping the MSBs.
  -- This facilitates efficient resource utilization on Xilinx and Intel FPGAs.
  -- 
  -- Multiply dataIn by seqIn:
  -- since seqIn is always either -1 or 1, use a gain of -1 and a switch to invert dataIn when seqIn = -1.
  -- 
  -- SSS correlation accumulator:
  -- The SSS consists of 62 complex values therefore
  -- 6 bits of headroom are required in the accumulator.
  -- 
  -- Only compute signal energy the first time, since the data is repeated 336 times.

  u_Magnitude_Squared_0 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_0
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => std_logic_vector(Delay16_out1_re),  -- sfix18_En13
              dataIn_im => std_logic_vector(Delay16_out1_im),  -- sfix18_En13
              dataOut => Magnitude_Squared_0_out1  -- sfix36_En26
              );

  u_Magnitude_Squared_1 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Magnitude_Squared_1
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => std_logic_vector(Delay11_out1_re),  -- sfix16_En15
              dataIn_im => std_logic_vector(Delay11_out1_im),  -- sfix16_En15
              dataOut => Magnitude_Squared_1_out1  -- sfix32_En30
              );

  u_ThresholdLimiter : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter_block
    PORT MAP( x => std_logic_vector(Delay18_out1),  -- sfix36_En26
              y => y  -- sfix36_En26
              );

  accEndReg <= accEnd;

  stateControl <= '1';

  delayMatch14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch14_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch14_reg(0) <= stateControl;
        delayMatch14_reg(1 TO 41) <= delayMatch14_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch14_process;

  stateControl_1 <= delayMatch14_reg(41);

  enb_gated <= stateControl_1 AND enb;

  Delay26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay26_out1 <= '0';
      ELSIF enb_gated = '1' THEN
        Delay26_out1 <= accEndReg;
      END IF;
    END IF;
  END PROCESS Delay26_process;


  stateControl_2 <= '1';

  delayMatch15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch15_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch15_reg(0) <= stateControl_2;
        delayMatch15_reg(1 TO 41) <= delayMatch15_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch15_process;

  stateControl_3 <= delayMatch15_reg(41);

  enb_gated_1 <= stateControl_3 AND enb;

  Delay31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay31_out1 <= '0';
      ELSIF enb_gated_1 = '1' THEN
        Delay31_out1 <= Delay26_out1;
      END IF;
    END IF;
  END PROCESS Delay31_process;


  stateControl_4 <= '1';

  delayMatch16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch16_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch16_reg(0) <= stateControl_4;
        delayMatch16_reg(1 TO 41) <= delayMatch16_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch16_process;

  stateControl_5 <= delayMatch16_reg(41);

  enb_gated_2 <= stateControl_5 AND enb;

  Delay39_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay39_out1 <= '0';
      ELSIF enb_gated_2 = '1' THEN
        Delay39_out1 <= Delay31_out1;
      END IF;
    END IF;
  END PROCESS Delay39_process;


  stateControl_6 <= '1';

  delayMatch17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch17_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch17_reg(0) <= stateControl_6;
        delayMatch17_reg(1 TO 41) <= delayMatch17_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch17_process;

  stateControl_7 <= delayMatch17_reg(41);

  enb_gated_3 <= stateControl_7 AND enb;

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb_gated_3 = '1' THEN
        Delay4_out1 <= Delay39_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  stateControl_8 <= '1';

  delayMatch18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch18_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch18_reg(0) <= stateControl_8;
        delayMatch18_reg(1 TO 41) <= delayMatch18_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch18_process;

  stateControl_9 <= delayMatch18_reg(41);

  enb_gated_4 <= stateControl_9 AND enb;

  Delay15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay15_out1 <= '0';
      ELSIF enb_gated_4 = '1' THEN
        Delay15_out1 <= Delay4_out1;
      END IF;
    END IF;
  END PROCESS Delay15_process;


  stateControl_10 <= '1';

  delayMatch19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch19_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch19_reg(0) <= stateControl_10;
        delayMatch19_reg(1 TO 41) <= delayMatch19_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch19_process;

  stateControl_11 <= delayMatch19_reg(41);

  enb_gated_5 <= stateControl_11 AND enb;

  Delay17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay17_out1 <= '0';
      ELSIF enb_gated_5 = '1' THEN
        Delay17_out1 <= Delay15_out1;
      END IF;
    END IF;
  END PROCESS Delay17_process;


  stateControl_12 <= '1';

  delayMatch20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch20_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch20_reg(0) <= stateControl_12;
        delayMatch20_reg(1 TO 41) <= delayMatch20_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch20_process;

  stateControl_13 <= delayMatch20_reg(41);

  enb_gated_6 <= stateControl_13 AND enb;

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_reg <= (OTHERS => '0');
      ELSIF enb_gated_6 = '1' THEN
        Delay2_reg(0) <= Delay17_out1;
        Delay2_reg(1 TO 3) <= Delay2_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS Delay2_process;

  Delay2_out1 <= Delay2_reg(3);

  stateControl_14 <= '1';

  delayMatch9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch9_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch9_reg(0) <= stateControl_14;
        delayMatch9_reg(1 TO 41) <= delayMatch9_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch9_process;

  stateControl_15 <= delayMatch9_reg(41);

  enb_gated_7 <= stateControl_15 AND enb;

  Delay22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay22_out1 <= '0';
      ELSIF enb_gated_7 = '1' THEN
        Delay22_out1 <= validIn;
      END IF;
    END IF;
  END PROCESS Delay22_process;


  stateControl_16 <= '1';

  delayMatch10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch10_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch10_reg(0) <= stateControl_16;
        delayMatch10_reg(1 TO 41) <= delayMatch10_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch10_process;

  stateControl_17 <= delayMatch10_reg(41);

  enb_gated_8 <= stateControl_17 AND enb;

  Delay28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay28_out1 <= '0';
      ELSIF enb_gated_8 = '1' THEN
        Delay28_out1 <= Delay22_out1;
      END IF;
    END IF;
  END PROCESS Delay28_process;


  stateControl_18 <= '1';

  delayMatch11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch11_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch11_reg(0) <= stateControl_18;
        delayMatch11_reg(1 TO 41) <= delayMatch11_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch11_process;

  stateControl_19 <= delayMatch11_reg(41);

  enb_gated_9 <= stateControl_19 AND enb;

  Delay36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay36_out1 <= '0';
      ELSIF enb_gated_9 = '1' THEN
        Delay36_out1 <= Delay28_out1;
      END IF;
    END IF;
  END PROCESS Delay36_process;


  stateControl_20 <= '1';

  delayMatch12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch12_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch12_reg(0) <= stateControl_20;
        delayMatch12_reg(1 TO 41) <= delayMatch12_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch12_process;

  stateControl_21 <= delayMatch12_reg(41);

  enb_gated_10 <= stateControl_21 AND enb;

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        accEnReg <= '0';
      ELSIF enb_gated_10 = '1' THEN
        accEnReg <= Delay36_out1;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  stateControl_22 <= '1';

  delayMatch5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch5_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch5_reg(0) <= stateControl_22;
        delayMatch5_reg(1 TO 41) <= delayMatch5_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch5_process;

  stateControl_23 <= delayMatch5_reg(41);

  enb_gated_11 <= stateControl_23 AND enb;

  Delay25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay25_out1 <= '0';
      ELSIF enb_gated_11 = '1' THEN
        Delay25_out1 <= accStart;
      END IF;
    END IF;
  END PROCESS Delay25_process;


  stateControl_24 <= '1';

  delayMatch6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch6_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch6_reg(0) <= stateControl_24;
        delayMatch6_reg(1 TO 41) <= delayMatch6_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch6_process;

  stateControl_25 <= delayMatch6_reg(41);

  enb_gated_12 <= stateControl_25 AND enb;

  Delay30_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay30_out1 <= '0';
      ELSIF enb_gated_12 = '1' THEN
        Delay30_out1 <= Delay25_out1;
      END IF;
    END IF;
  END PROCESS Delay30_process;


  stateControl_26 <= '1';

  delayMatch7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch7_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch7_reg(0) <= stateControl_26;
        delayMatch7_reg(1 TO 41) <= delayMatch7_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch7_process;

  stateControl_27 <= delayMatch7_reg(41);

  enb_gated_13 <= stateControl_27 AND enb;

  Delay38_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay38_out1 <= '0';
      ELSIF enb_gated_13 = '1' THEN
        Delay38_out1 <= Delay30_out1;
      END IF;
    END IF;
  END PROCESS Delay38_process;


  stateControl_28 <= '1';

  delayMatch8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch8_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch8_reg(0) <= stateControl_28;
        delayMatch8_reg(1 TO 41) <= delayMatch8_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch8_process;

  stateControl_29 <= delayMatch8_reg(41);

  enb_gated_14 <= stateControl_29 AND enb;

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        accStartReg <= '0';
      ELSIF enb_gated_14 = '1' THEN
        accStartReg <= Delay38_out1;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  seqIn_signed <= signed(seqIn);

  stateControl_30 <= '1';

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch1_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch1_reg(0) <= stateControl_30;
        delayMatch1_reg(1 TO 41) <= delayMatch1_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  stateControl_31 <= delayMatch1_reg(41);

  enb_gated_15 <= stateControl_31 AND enb;

  Delay23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay23_out1 <= to_signed(16#0#, 2);
      ELSIF enb_gated_15 = '1' THEN
        Delay23_out1 <= seqIn_signed;
      END IF;
    END IF;
  END PROCESS Delay23_process;


  
  Compare_To_Zero1_out1 <= '1' WHEN Delay23_out1 < to_signed(16#0#, 2) ELSE
      '0';

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  stateControl_32 <= '1';

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch_reg(0) <= stateControl_32;
        delayMatch_reg(1 TO 41) <= delayMatch_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  stateControl_33 <= delayMatch_reg(41);

  enb_gated_16 <= stateControl_33 AND enb;

  Delay24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay24_out1_re <= to_signed(16#0000#, 16);
        Delay24_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb_gated_16 = '1' THEN
        Delay24_out1_re <= dataIn_re_signed;
        Delay24_out1_im <= dataIn_im_signed;
      END IF;
    END IF;
  END PROCESS Delay24_process;


  Gain_cast <= resize(Delay24_out1_re, 17);
  Gain_cast_1 <=  - (Gain_cast);
  Gain_cast_2 <= Gain_cast_1 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Gain_out1_re <= Gain_cast_2(30 DOWNTO 15);
  Gain_cast_3 <= resize(Delay24_out1_im, 17);
  Gain_cast_4 <=  - (Gain_cast_3);
  Gain_cast_5 <= Gain_cast_4 & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0';
  Gain_out1_im <= Gain_cast_5(30 DOWNTO 15);

  
  real1_out1_re <= Delay24_out1_re WHEN Compare_To_Zero1_out1 = '0' ELSE
      Gain_out1_re;
  
  real1_out1_im <= Delay24_out1_im WHEN Compare_To_Zero1_out1 = '0' ELSE
      Gain_out1_im;

  stateControl_34 <= '1';

  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch2_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch2_reg(0) <= stateControl_34;
        delayMatch2_reg(1 TO 41) <= delayMatch2_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch2_process;

  stateControl_35 <= delayMatch2_reg(41);

  enb_gated_17 <= stateControl_35 AND enb;

  Delay29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay29_out1_re <= to_signed(16#0000#, 16);
        Delay29_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb_gated_17 = '1' THEN
        Delay29_out1_re <= real1_out1_re;
        Delay29_out1_im <= real1_out1_im;
      END IF;
    END IF;
  END PROCESS Delay29_process;


  Gain1_out1_re <= to_signed(16#4106#, 16) * Delay29_out1_re;
  Gain1_out1_im <= to_signed(16#4106#, 16) * Delay29_out1_im;

  stateControl_36 <= '1';

  delayMatch3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch3_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch3_reg(0) <= stateControl_36;
        delayMatch3_reg(1 TO 41) <= delayMatch3_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch3_process;

  stateControl_37 <= delayMatch3_reg(41);

  enb_gated_18 <= stateControl_37 AND enb;

  Delay37_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay37_out1_re <= to_signed(0, 32);
        Delay37_out1_im <= to_signed(0, 32);
      ELSIF enb_gated_18 = '1' THEN
        Delay37_out1_re <= Gain1_out1_re;
        Delay37_out1_im <= Gain1_out1_im;
      END IF;
    END IF;
  END PROCESS Delay37_process;


  Data_Type_Conversion4_out1_re <= Delay37_out1_re(30 DOWNTO 15) + ('0' & (Delay37_out1_re(14) AND (( NOT Delay37_out1_re(31)) OR (Delay37_out1_re(13) OR Delay37_out1_re(12) OR Delay37_out1_re(11) OR Delay37_out1_re(10) OR Delay37_out1_re(9) OR Delay37_out1_re(8) OR Delay37_out1_re(7) OR Delay37_out1_re(6) OR Delay37_out1_re(5) OR Delay37_out1_re(4) OR Delay37_out1_re(3) OR Delay37_out1_re(2) OR Delay37_out1_re(1) OR Delay37_out1_re(0)))));
  Data_Type_Conversion4_out1_im <= Delay37_out1_im(30 DOWNTO 15) + ('0' & (Delay37_out1_im(14) AND (( NOT Delay37_out1_im(31)) OR (Delay37_out1_im(13) OR Delay37_out1_im(12) OR Delay37_out1_im(11) OR Delay37_out1_im(10) OR Delay37_out1_im(9) OR Delay37_out1_im(8) OR Delay37_out1_im(7) OR Delay37_out1_im(6) OR Delay37_out1_im(5) OR Delay37_out1_im(4) OR Delay37_out1_im(3) OR Delay37_out1_im(2) OR Delay37_out1_im(1) OR Delay37_out1_im(0)))));

  stateControl_39 <= '1';

  delayMatch4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch4_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch4_reg(0) <= stateControl_39;
        delayMatch4_reg(1 TO 41) <= delayMatch4_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch4_process;

  stateControl_40 <= delayMatch4_reg(41);

  enb_gated_19 <= stateControl_40 AND enb;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1_re <= to_signed(16#0000#, 16);
        Delay1_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb_gated_19 = '1' THEN
        Delay1_out1_re <= Data_Type_Conversion4_out1_re;
        Delay1_out1_im <= Data_Type_Conversion4_out1_im;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  acc_dataIn_re <= resize(Delay1_out1_re, 22);
  acc_dataIn_im <= resize(Delay1_out1_im, 22);

  Add_out1_re <= acc_dataIn_re + acc_re;
  Add_out1_im <= acc_dataIn_im + acc_im;

  
  Switch_out1_re <= Add_out1_re WHEN accStartReg = '0' ELSE
      acc_dataIn_re;
  
  Switch_out1_im <= Add_out1_im WHEN accStartReg = '0' ELSE
      acc_dataIn_im;

  
  Accumulator_ectrl_re <= acc_re WHEN accEnReg = '0' ELSE
      Switch_out1_re;
  
  Accumulator_ectrl_im <= acc_im WHEN accEnReg = '0' ELSE
      Switch_out1_im;

  Accumulator_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        acc_re <= to_signed(16#000000#, 22);
        acc_im <= to_signed(16#000000#, 22);
      ELSIF enb = '1' THEN
        acc_re <= Accumulator_ectrl_re;
        acc_im <= Accumulator_ectrl_im;
      END IF;
    END IF;
  END PROCESS Accumulator_lowered_process;


  acc_re_1 <= acc_re;

  acc_im_1 <= acc_im;

  Data_Type_Conversion1_out1_re <= acc_re_1(21 DOWNTO 4) + ('0' & (acc_re_1(3) AND (( NOT acc_re_1(21)) OR (acc_re_1(2) OR acc_re_1(1) OR acc_re_1(0)))));
  Data_Type_Conversion1_out1_im <= acc_im_1(21 DOWNTO 4) + ('0' & (acc_im_1(3) AND (( NOT acc_im_1(21)) OR (acc_im_1(2) OR acc_im_1(1) OR acc_im_1(0)))));

  stateControl_41 <= '1';

  delayMatch13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch13_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch13_reg(0) <= stateControl_41;
        delayMatch13_reg(1 TO 41) <= delayMatch13_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch13_process;

  stateControl_42 <= delayMatch13_reg(41);

  enb_gated_20 <= stateControl_42 AND enb;

  Delay16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay16_out1_re <= to_signed(16#00000#, 18);
        Delay16_out1_im <= to_signed(16#00000#, 18);
      ELSIF enb_gated_20 = '1' THEN
        Delay16_out1_re <= Data_Type_Conversion1_out1_re;
        Delay16_out1_im <= Data_Type_Conversion1_out1_im;
      END IF;
    END IF;
  END PROCESS Delay16_process;


  Magnitude_Squared_0_out1_signed <= signed(Magnitude_Squared_0_out1);

  
  Delay10_ectrl <= Delay10_out1 WHEN Delay2_out1 = '0' ELSE
      Magnitude_Squared_0_out1_signed;

  Delay10_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay10_out1 <= to_signed(0, 36);
      ELSIF enb = '1' THEN
        Delay10_out1 <= Delay10_ectrl;
      END IF;
    END IF;
  END PROCESS Delay10_lowered_process;


  correlation <= std_logic_vector(Delay10_out1);

  stateControl_43 <= '1';

  delayMatch25_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch25_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch25_reg(0) <= stateControl_43;
        delayMatch25_reg(1 TO 41) <= delayMatch25_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch25_process;

  stateControl_44 <= delayMatch25_reg(41);

  enb_gated_21 <= stateControl_44 AND enb;

  Delay33_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay33_out1 <= to_signed(16#0#, 2);
      ELSIF enb_gated_21 = '1' THEN
        Delay33_out1 <= Delay23_out1;
      END IF;
    END IF;
  END PROCESS Delay33_process;


  
  Delay33_out1_is_not0 <= '1' WHEN Delay33_out1 /= to_signed(16#0#, 2) ELSE
      '0';

  seqNumIn_unsigned <= unsigned(seqNumIn);

  stateControl_45 <= '1';

  delayMatch24_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch24_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch24_reg(0) <= stateControl_45;
        delayMatch24_reg(1 TO 41) <= delayMatch24_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch24_process;

  stateControl_46 <= delayMatch24_reg(41);

  enb_gated_22 <= stateControl_46 AND enb;

  Delay27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay27_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb_gated_22 = '1' THEN
        Delay27_out1 <= seqNumIn_unsigned;
      END IF;
    END IF;
  END PROCESS Delay27_process;


  
  Compare_To_Constant_out1 <= '1' WHEN Delay27_out1 < to_unsigned(16#003#, 10) ELSE
      '0';

  stateControl_47 <= '1';

  delayMatch26_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch26_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch26_reg(0) <= stateControl_47;
        delayMatch26_reg(1 TO 41) <= delayMatch26_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch26_process;

  stateControl_48 <= delayMatch26_reg(41);

  enb_gated_23 <= stateControl_48 AND enb;

  Delay34_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay34_out1 <= '0';
      ELSIF enb_gated_23 = '1' THEN
        Delay34_out1 <= Compare_To_Constant_out1;
      END IF;
    END IF;
  END PROCESS Delay34_process;


  calculateEnergy <= Delay33_out1_is_not0 AND Delay34_out1;

  stateControl_49 <= '1';

  delayMatch27_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch27_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch27_reg(0) <= stateControl_49;
        delayMatch27_reg(1 TO 41) <= delayMatch27_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch27_process;

  stateControl_50 <= delayMatch27_reg(41);

  enb_gated_24 <= stateControl_50 AND enb;

  Delay41_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay41_out1 <= '0';
      ELSIF enb_gated_24 = '1' THEN
        Delay41_out1 <= calculateEnergy;
      END IF;
    END IF;
  END PROCESS Delay41_process;


  stateControl_51 <= '1';

  delayMatch28_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch28_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch28_reg(0) <= stateControl_51;
        delayMatch28_reg(1 TO 41) <= delayMatch28_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch28_process;

  stateControl_52 <= delayMatch28_reg(41);

  enb_gated_25 <= stateControl_52 AND enb;

  Delay13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_out1 <= '0';
      ELSIF enb_gated_25 = '1' THEN
        Delay13_out1 <= Delay41_out1;
      END IF;
    END IF;
  END PROCESS Delay13_process;


  stateControl_53 <= '1';

  delayMatch30_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch30_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch30_reg(0) <= stateControl_53;
        delayMatch30_reg(1 TO 41) <= delayMatch30_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch30_process;

  stateControl_54 <= delayMatch30_reg(41);

  enb_gated_26 <= stateControl_54 AND enb;

  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay14_reg <= (OTHERS => '0');
      ELSIF enb_gated_26 = '1' THEN
        Delay14_reg(0) <= Delay13_out1;
        Delay14_reg(1 TO 3) <= Delay14_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS Delay14_process;

  Delay14_out1 <= Delay14_reg(3);

  stateControl_55 <= '1';

  delayMatch29_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch29_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch29_reg(0) <= stateControl_55;
        delayMatch29_reg(1 TO 41) <= delayMatch29_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch29_process;

  stateControl_56 <= delayMatch29_reg(41);

  enb_gated_27 <= stateControl_56 AND enb;

  Delay19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay19_reg <= (OTHERS => '0');
      ELSIF enb_gated_27 = '1' THEN
        Delay19_reg(0) <= accStartReg;
        Delay19_reg(1 TO 3) <= Delay19_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS Delay19_process;

  Delay19_out1 <= Delay19_reg(3);

  stateControl_57 <= '1';

  delayMatch21_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch21_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch21_reg(0) <= stateControl_57;
        delayMatch21_reg(1 TO 41) <= delayMatch21_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch21_process;

  stateControl_58 <= delayMatch21_reg(41);

  enb_gated_28 <= stateControl_58 AND enb;

  Delay32_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay32_out1_re <= to_signed(16#0000#, 16);
        Delay32_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb_gated_28 = '1' THEN
        Delay32_out1_re <= Delay24_out1_re;
        Delay32_out1_im <= Delay24_out1_im;
      END IF;
    END IF;
  END PROCESS Delay32_process;


  Gain2_out1_re <= to_signed(16#7A88#, 16) * Delay32_out1_re;
  Gain2_out1_im <= to_signed(16#7A88#, 16) * Delay32_out1_im;

  stateControl_59 <= '1';

  delayMatch22_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch22_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch22_reg(0) <= stateControl_59;
        delayMatch22_reg(1 TO 41) <= delayMatch22_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch22_process;

  stateControl_60 <= delayMatch22_reg(41);

  enb_gated_29 <= stateControl_60 AND enb;

  Delay40_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay40_out1_re <= to_signed(0, 32);
        Delay40_out1_im <= to_signed(0, 32);
      ELSIF enb_gated_29 = '1' THEN
        Delay40_out1_re <= Gain2_out1_re;
        Delay40_out1_im <= Gain2_out1_im;
      END IF;
    END IF;
  END PROCESS Delay40_process;


  Data_Type_Conversion5_out1_re <= Delay40_out1_re(31 DOWNTO 16) + ('0' & (Delay40_out1_re(15) AND (( NOT Delay40_out1_re(31)) OR (Delay40_out1_re(14) OR Delay40_out1_re(13) OR Delay40_out1_re(12) OR Delay40_out1_re(11) OR Delay40_out1_re(10) OR Delay40_out1_re(9) OR Delay40_out1_re(8) OR Delay40_out1_re(7) OR Delay40_out1_re(6) OR Delay40_out1_re(5) OR Delay40_out1_re(4) OR Delay40_out1_re(3) OR Delay40_out1_re(2) OR Delay40_out1_re(1) OR Delay40_out1_re(0)))));
  Data_Type_Conversion5_out1_im <= Delay40_out1_im(31 DOWNTO 16) + ('0' & (Delay40_out1_im(15) AND (( NOT Delay40_out1_im(31)) OR (Delay40_out1_im(14) OR Delay40_out1_im(13) OR Delay40_out1_im(12) OR Delay40_out1_im(11) OR Delay40_out1_im(10) OR Delay40_out1_im(9) OR Delay40_out1_im(8) OR Delay40_out1_im(7) OR Delay40_out1_im(6) OR Delay40_out1_im(5) OR Delay40_out1_im(4) OR Delay40_out1_im(3) OR Delay40_out1_im(2) OR Delay40_out1_im(1) OR Delay40_out1_im(0)))));

  stateControl_61 <= '1';

  delayMatch23_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch23_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch23_reg(0) <= stateControl_61;
        delayMatch23_reg(1 TO 41) <= delayMatch23_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch23_process;

  stateControl_62 <= delayMatch23_reg(41);

  enb_gated_30 <= stateControl_62 AND enb;

  Delay11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay11_out1_re <= to_signed(16#0000#, 16);
        Delay11_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb_gated_30 = '1' THEN
        Delay11_out1_re <= Data_Type_Conversion5_out1_re;
        Delay11_out1_im <= Data_Type_Conversion5_out1_im;
      END IF;
    END IF;
  END PROCESS Delay11_process;


  Magnitude_Squared_1_out1_signed <= signed(Magnitude_Squared_1_out1);

  acc_dataIn <= resize(Magnitude_Squared_1_out1_signed, 38);

  Add1_out1 <= acc_dataIn + acc;

  
  Switch1_out1 <= Add1_out1 WHEN Delay19_out1 = '0' ELSE
      acc_dataIn;

  
  Accumulator1_ectrl <= acc WHEN Delay14_out1 = '0' ELSE
      Switch1_out1;

  Accumulator1_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        acc <= to_signed(0, 38);
      ELSIF enb = '1' THEN
        acc <= Accumulator1_ectrl;
      END IF;
    END IF;
  END PROCESS Accumulator1_lowered_process;


  acc_1 <= acc;

  Data_Type_Conversion3_out1 <= (resize(acc_1(37 DOWNTO 4), 36)) + ('0' & (acc_1(3) AND (( NOT acc_1(37)) OR (acc_1(2) OR acc_1(1) OR acc_1(0)))));

  stateControl_63 <= '1';

  delayMatch31_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch31_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch31_reg(0) <= stateControl_63;
        delayMatch31_reg(1 TO 41) <= delayMatch31_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch31_process;

  stateControl_64 <= delayMatch31_reg(41);

  enb_gated_31 <= stateControl_64 AND enb;

  Delay18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay18_out1 <= to_signed(0, 36);
      ELSIF enb_gated_31 = '1' THEN
        Delay18_out1 <= Data_Type_Conversion3_out1;
      END IF;
    END IF;
  END PROCESS Delay18_process;


  y_signed <= signed(y);

  
  Delay12_ectrl <= Delay12_out1 WHEN Delay2_out1 = '0' ELSE
      y_signed;

  Delay12_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay12_out1 <= to_signed(0, 36);
      ELSIF enb = '1' THEN
        Delay12_out1 <= Delay12_ectrl;
      END IF;
    END IF;
  END PROCESS Delay12_lowered_process;


  threshold <= std_logic_vector(Delay12_out1);

  stateControl_65 <= '1';

  delayMatch32_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch32_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch32_reg(0) <= stateControl_65;
        delayMatch32_reg(1 TO 41) <= delayMatch32_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch32_process;

  stateControl_66 <= delayMatch32_reg(41);

  enb_gated_32 <= stateControl_66 AND enb;

  Delay20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay20_out1 <= '0';
      ELSIF enb_gated_32 = '1' THEN
        Delay20_out1 <= Delay2_out1;
      END IF;
    END IF;
  END PROCESS Delay20_process;


  stateControl_67 <= '1';

  delayMatch33_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch33_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch33_reg(0) <= stateControl_67;
        delayMatch33_reg(1 TO 41) <= delayMatch33_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch33_process;

  stateControl_68 <= delayMatch33_reg(41);

  enb_gated_33 <= stateControl_68 AND enb;

  Delay35_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay35_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb_gated_33 = '1' THEN
        Delay35_out1 <= Delay27_out1;
      END IF;
    END IF;
  END PROCESS Delay35_process;


  stateControl_69 <= '1';

  delayMatch34_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch34_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch34_reg(0) <= stateControl_69;
        delayMatch34_reg(1 TO 41) <= delayMatch34_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch34_process;

  stateControl_70 <= delayMatch34_reg(41);

  enb_gated_34 <= stateControl_70 AND enb;

  Delay42_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay42_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb_gated_34 = '1' THEN
        Delay42_out1 <= Delay35_out1;
      END IF;
    END IF;
  END PROCESS Delay42_process;


  stateControl_71 <= '1';

  delayMatch35_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch35_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch35_reg(0) <= stateControl_71;
        delayMatch35_reg(1 TO 41) <= delayMatch35_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch35_process;

  stateControl_72 <= delayMatch35_reg(41);

  enb_gated_35 <= stateControl_72 AND enb;

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay3_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb_gated_35 = '1' THEN
        Delay3_out1 <= Delay42_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  stateControl_73 <= '1';

  delayMatch36_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch36_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch36_reg(0) <= stateControl_73;
        delayMatch36_reg(1 TO 41) <= delayMatch36_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch36_process;

  stateControl_74 <= delayMatch36_reg(41);

  enb_gated_36 <= stateControl_74 AND enb;

  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay7_reg <= (OTHERS => to_unsigned(16#000#, 10));
      ELSIF enb_gated_36 = '1' THEN
        Delay7_reg(0) <= Delay3_out1;
        Delay7_reg(1 TO 3) <= Delay7_reg(0 TO 2);
      END IF;
    END IF;
  END PROCESS Delay7_process;

  Delay7_out1 <= Delay7_reg(3);

  stateControl_75 <= '1';

  delayMatch37_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch37_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch37_reg(0) <= stateControl_75;
        delayMatch37_reg(1 TO 41) <= delayMatch37_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch37_process;

  stateControl_76 <= delayMatch37_reg(41);

  enb_gated_37 <= stateControl_76 AND enb;

  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay8_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb_gated_37 = '1' THEN
        Delay8_out1 <= Delay7_out1;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  stateControl_77 <= '1';

  delayMatch38_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch38_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch38_reg(0) <= stateControl_77;
        delayMatch38_reg(1 TO 41) <= delayMatch38_reg(0 TO 40);
      END IF;
    END IF;
  END PROCESS delayMatch38_process;

  stateControl_78 <= delayMatch38_reg(41);

  enb_gated_38 <= stateControl_78 AND enb;

  Delay9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay9_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb_gated_38 = '1' THEN
        Delay9_out1 <= Delay8_out1;
      END IF;
    END IF;
  END PROCESS Delay9_process;


  
  Delay21_ectrl <= Delay21_out1 WHEN Delay2_out1 = '0' ELSE
      Delay9_out1;

  Delay21_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay21_out1 <= to_unsigned(16#000#, 10);
      ELSIF enb = '1' THEN
        Delay21_out1 <= Delay21_ectrl;
      END IF;
    END IF;
  END PROCESS Delay21_lowered_process;


  seqNumOut <= std_logic_vector(Delay21_out1);

  validOut <= Delay20_out1;

END rtl;

