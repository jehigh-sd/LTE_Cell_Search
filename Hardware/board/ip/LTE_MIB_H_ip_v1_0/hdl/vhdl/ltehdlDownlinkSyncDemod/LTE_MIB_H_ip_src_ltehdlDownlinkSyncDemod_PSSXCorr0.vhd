-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\ltehdlDownlinkSyncDemod\LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0.vhd
-- Created: 2022-05-23 17:26:44
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0
-- Source Path: ltehdlDownlinkSyncDemod/Sync Signal Search/PSS Searcher/Correlators/PSSXCorr0
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
LIBRARY work_ltehdlDownlinkSyncDemod;

ENTITY LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0 IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        dataOut_im                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
        );
END LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0 IS

  -- Component Declarations
  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D_block
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(28 DOWNTO 0)  -- ufix29
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(16 DOWNTO 0);  -- ufix17
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(28 DOWNTO 0)  -- ufix29
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(28 DOWNTO 0)  -- ufix29
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D_block
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D_block(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D(rtl);

  -- Signals
  SIGNAL C_D_out1                         : std_logic_vector(28 DOWNTO 0);  -- ufix29
  SIGNAL C_D_out1_signed                  : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Sum2_sub_cast                    : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Sum2_sub_cast_1                  : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL Sum2_out1                        : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL C_out1                           : std_logic_vector(28 DOWNTO 0);  -- ufix29
  SIGNAL C_out1_signed                    : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL Sum3_sub_cast                    : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Sum3_sub_cast_1                  : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Sum3_out1                        : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL C_D_out1_1                       : std_logic_vector(28 DOWNTO 0);  -- ufix29
  SIGNAL C_D_out1_signed_1                : signed(28 DOWNTO 0);  -- sfix29_En24
  SIGNAL Sum4_add_cast                    : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Sum4_add_cast_1                  : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Sum4_out1                        : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Delay1_out1_re                   : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Delay1_out1_im                   : signed(29 DOWNTO 0);  -- sfix30_En24
  SIGNAL Data_Type_Conversion_out1_re     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Data_Type_Conversion_out1_im     : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay2_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Delay2_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En12

BEGIN
  -- A
  -- 
  -- B
  -- 
  -- explicitly model filter running at 61.44MHz (32 x 1.92MHz)
  -- to enable resource sharing

  u_C_D : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D_block
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn => dataIn_im,  -- ufix16
              validIn => validIn,
              dataOut => C_D_out1  -- ufix29
              );

  u_C : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn => std_logic_vector(Sum2_out1),  -- ufix17
              validIn => validIn,
              dataOut => C_out1  -- ufix29
              );

  u_C_D_1 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_C_D
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn => dataIn_re,  -- ufix16
              validIn => validIn,
              dataOut => C_D_out1_1  -- ufix29
              );

  C_D_out1_signed <= signed(C_D_out1);

  dataIn_im_signed <= signed(dataIn_im);

  dataIn_re_signed <= signed(dataIn_re);

  Sum2_sub_cast <= resize(dataIn_im_signed, 17);
  Sum2_sub_cast_1 <= resize(dataIn_re_signed, 17);
  Sum2_out1 <= Sum2_sub_cast - Sum2_sub_cast_1;

  C_out1_signed <= signed(C_out1);

  Sum3_sub_cast <= resize(C_D_out1_signed, 30);
  Sum3_sub_cast_1 <= resize(C_out1_signed, 30);
  Sum3_out1 <= Sum3_sub_cast - Sum3_sub_cast_1;

  C_D_out1_signed_1 <= signed(C_D_out1_1);

  Sum4_add_cast <= resize(C_out1_signed, 30);
  Sum4_add_cast_1 <= resize(C_D_out1_signed_1, 30);
  Sum4_out1 <= Sum4_add_cast + Sum4_add_cast_1;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1_re <= to_signed(16#00000000#, 30);
        Delay1_out1_im <= to_signed(16#00000000#, 30);
      ELSIF enb = '1' THEN
        Delay1_out1_re <= Sum3_out1;
        Delay1_out1_im <= Sum4_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Data_Type_Conversion_out1_re <= Delay1_out1_re(27 DOWNTO 12) + ('0' & (Delay1_out1_re(11) AND (( NOT Delay1_out1_re(29)) OR (Delay1_out1_re(10) OR Delay1_out1_re(9) OR Delay1_out1_re(8) OR Delay1_out1_re(7) OR Delay1_out1_re(6) OR Delay1_out1_re(5) OR Delay1_out1_re(4) OR Delay1_out1_re(3) OR Delay1_out1_re(2) OR Delay1_out1_re(1) OR Delay1_out1_re(0)))));
  Data_Type_Conversion_out1_im <= Delay1_out1_im(27 DOWNTO 12) + ('0' & (Delay1_out1_im(11) AND (( NOT Delay1_out1_im(29)) OR (Delay1_out1_im(10) OR Delay1_out1_im(9) OR Delay1_out1_im(8) OR Delay1_out1_im(7) OR Delay1_out1_im(6) OR Delay1_out1_im(5) OR Delay1_out1_im(4) OR Delay1_out1_im(3) OR Delay1_out1_im(2) OR Delay1_out1_im(1) OR Delay1_out1_im(0)))));

  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1_re <= to_signed(16#0000#, 16);
        Delay2_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay2_out1_re <= Data_Type_Conversion_out1_re;
        Delay2_out1_im <= Data_Type_Conversion_out1_im;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  dataOut_re <= std_logic_vector(Delay2_out1_re);

  dataOut_im <= std_logic_vector(Delay2_out1_im);

END rtl;

