-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\ltehdlPBCHDecoder\LTE_MIB_H_ip_src_ltehdlPBCHDecoder_Sign_Extend_by_2.vhd
-- Created: 2022-05-23 17:26:45
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ltehdlPBCHDecoder_Sign_Extend_by_2
-- Source Path: ltehdlPBCHDecoder/BCH Decoder/softBitScalingUnit/Apply Scaling/Sign Extend by 2
-- Hierarchy Level: 7
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ltehdlPBCHDecoder_pac.ALL;

ENTITY LTE_MIB_H_ip_src_ltehdlPBCHDecoder_Sign_Extend_by_2 IS
  PORT( x_0                               :   IN    std_logic_vector(19 DOWNTO 0);  -- ufix20
        x_1                               :   IN    std_logic_vector(19 DOWNTO 0);  -- ufix20
        x_2                               :   IN    std_logic_vector(19 DOWNTO 0);  -- ufix20
        y_0                               :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En17
        y_1                               :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En17
        y_2                               :   OUT   std_logic_vector(21 DOWNTO 0)  -- sfix22_En17
        );
END LTE_MIB_H_ip_src_ltehdlPBCHDecoder_Sign_Extend_by_2;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ltehdlPBCHDecoder_Sign_Extend_by_2 IS

  -- Signals
  SIGNAL x                                : vector_of_signed20(0 TO 2);  -- sfix20_En17 [3]
  SIGNAL y                                : vector_of_signed22(0 TO 2);  -- sfix22_En17 [3]

BEGIN
  x(0) <= signed(x_0);
  x(1) <= signed(x_1);
  x(2) <= signed(x_2);

  Sign_Extend_by_2_output : PROCESS (x)
  BEGIN

    FOR t_0 IN 0 TO 2 LOOP
      y(t_0) <= resize(x(t_0), 22);
    END LOOP;

  END PROCESS Sign_Extend_by_2_output;


  y_0 <= std_logic_vector(y(0));

  y_1 <= std_logic_vector(y(1));

  y_2 <= std_logic_vector(y(2));

END rtl;

