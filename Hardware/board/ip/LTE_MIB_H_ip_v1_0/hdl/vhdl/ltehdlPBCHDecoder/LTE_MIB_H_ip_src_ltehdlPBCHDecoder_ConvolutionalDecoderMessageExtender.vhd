-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\ltehdlPBCHDecoder\LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ConvolutionalDecoderMessageExtender.vhd
-- Created: 2022-05-23 17:26:45
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ConvolutionalDecoderMessageExtender
-- Source Path: 
-- Hierarchy Level: 6
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
LIBRARY work_ltehdlPBCHDecoder;
USE work.LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ltehdlPBCHDecoder_pac.ALL;

ENTITY LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ConvolutionalDecoderMessageExtender IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        data_0                            :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        data_1                            :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        data_2                            :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        ctrl_start                        :   IN    std_logic;
        ctrl_end                          :   IN    std_logic;
        ctrl_valid                        :   IN    std_logic;
        varargout_1_0                     :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        varargout_1_1                     :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        varargout_1_2                     :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        varargout_2                       :   OUT   std_logic;
        varargout_3                       :   OUT   std_logic;
        varargout_4                       :   OUT   std_logic;
        varargout_5                       :   OUT   std_logic
        );
END LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ConvolutionalDecoderMessageExtender;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ltehdlPBCHDecoder_ConvolutionalDecoderMessageExtender IS

  -- Component Declarations
  COMPONENT LTE_MIB_H_ip_src_ltehdlPBCHDecoder_SinglePortRAM_generic
    GENERIC( AddrWidth                    : integer;
             DataWidth                    : integer
             );
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          din                             :   IN    std_logic_vector(DataWidth - 1 DOWNTO 0);  -- generic width
          addr                            :   IN    std_logic_vector(AddrWidth - 1 DOWNTO 0);  -- generic width
          we                              :   IN    std_logic;
          dout                            :   OUT   std_logic_vector(DataWidth - 1 DOWNTO 0)  -- generic width
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : LTE_MIB_H_ip_src_ltehdlPBCHDecoder_SinglePortRAM_generic
    USE ENTITY work_ltehdlPBCHDecoder.LTE_MIB_H_ip_src_ltehdlPBCHDecoder_SinglePortRAM_generic(rtl);

  -- Signals
  SIGNAL data                             : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL obj_messageExtender_dataIn       : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL obj_messageExtender_dataIn_1     : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL dataIn                           : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL dataIn_1                         : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL ramDataIn                        : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL tmp                              : std_logic;
  SIGNAL tmp_1                            : std_logic;
  SIGNAL fsmNext_state                    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL fsmNext_state_1                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL fsmNext_state_2                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_2                            : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_3                            : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_4                            : std_logic;
  SIGNAL fsmNext_state_3                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL fsmNext_state_4                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL fsmNext_state_5                  : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL obj_messageExtender_fsm_extCount : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL tmp_5                            : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL obj_messageExtender_fsm_state    : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_7                            : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL tmp_8                            : unsigned(6 DOWNTO 0);  -- ufix7
  SIGNAL tmp_9                            : std_logic;
  SIGNAL tmp_10                           : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_12                           : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_13                           : unsigned(1 DOWNTO 0);  -- ufix2
  SIGNAL tmp_14                           : std_logic;
  SIGNAL fsmNext_addr                     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL fsmNext_addr_1                   : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_messageExtender_fsm_addr     : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_15                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL obj_messageExtender_fsm_endAddr  : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_17                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_18                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_19                           : std_logic;
  SIGNAL tmp_20                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_21                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_22                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_24                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_25                           : unsigned(7 DOWNTO 0);  -- ufix8
  SIGNAL tmp_26                           : std_logic;
  SIGNAL fsmNext_wrEn                     : std_logic;
  SIGNAL fsmNext_wrEn_1                   : std_logic;
  SIGNAL tmp_27                           : std_logic;
  SIGNAL tmp_29                           : std_logic;
  SIGNAL fsmNext_wrEn_2                   : std_logic;
  SIGNAL tmp_30                           : std_logic;
  SIGNAL obj_messageExtender_fsm_wrEn     : std_logic;
  SIGNAL xfi_stripped                     : vector_of_unsigned4(0 TO 2);  -- ufix4 [3]
  SIGNAL ramDataOut                       : std_logic_vector(11 DOWNTO 0);  -- ufix12
  SIGNAL ramDataOut_unsigned              : unsigned(11 DOWNTO 0);  -- ufix12
  SIGNAL xfi_stripped_1                   : vector_of_unsigned4(0 TO 2);  -- ufix4 [3]
  SIGNAL xfi_trivial_scaling              : vector_of_unsigned4(0 TO 2);  -- ufix4 [3]
  SIGNAL xfi_trivial_scaling_1            : vector_of_unsigned4(0 TO 2);  -- ufix4 [3]
  SIGNAL yfi_trivial_scaling              : vector_of_signed4(0 TO 2);  -- sfix4 [3]
  SIGNAL yfi_trivial_scaling_1            : vector_of_signed4(0 TO 2);  -- sfix4 [3]
  SIGNAL dataSplit                        : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL dataSplit_1                      : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL obj_messageExtender_dataOut      : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL obj_messageExtender_dataOut_1    : vector_of_signed4(0 TO 2);  -- sfix4_En1 [3]
  SIGNAL tmp_31                           : std_logic;
  SIGNAL fsmNext_startOut                 : std_logic;
  SIGNAL fsmNext_startOut_1               : std_logic;
  SIGNAL tmp_32                           : std_logic;
  SIGNAL tmp_34                           : std_logic;
  SIGNAL fsmNext_startOut_2               : std_logic;
  SIGNAL tmp_35                           : std_logic;
  SIGNAL obj_messageExtender_fsm_startOut : std_logic;
  SIGNAL tmp_36                           : std_logic;
  SIGNAL fsmNext_endExtOut                : std_logic;
  SIGNAL fsmNext_endExtOut_1              : std_logic;
  SIGNAL tmp_37                           : std_logic;
  SIGNAL tmp_38                           : std_logic;
  SIGNAL fsmNext_endExtOut_2              : std_logic;
  SIGNAL fsmNext_endExtOut_3              : std_logic;
  SIGNAL tmp_39                           : std_logic;
  SIGNAL tmp_41                           : std_logic;
  SIGNAL fsmNext_endExtOut_4              : std_logic;
  SIGNAL tmp_42                           : std_logic;
  SIGNAL obj_messageExtender_fsm_endExtOut : std_logic;
  SIGNAL tmp_43                           : std_logic;
  SIGNAL fsmNext_validOut                 : std_logic;
  SIGNAL fsmNext_validOut_1               : std_logic;
  SIGNAL tmp_44                           : std_logic;
  SIGNAL tmp_46                           : std_logic;
  SIGNAL fsmNext_validOut_2               : std_logic;
  SIGNAL tmp_47                           : std_logic;
  SIGNAL obj_messageExtender_fsm_validOut : std_logic;
  SIGNAL tmp_48                           : std_logic;
  SIGNAL fsmNext_endMsgOut                : std_logic;
  SIGNAL fsmNext_endMsgOut_1              : std_logic;
  SIGNAL fsmNext_endMsgOut_2              : std_logic;
  SIGNAL tmp_49                           : std_logic;
  SIGNAL tmp_50                           : std_logic;
  SIGNAL tmp_51                           : std_logic;
  SIGNAL tmp_53                           : std_logic;
  SIGNAL fsmNext_endMsgOut_3              : std_logic;
  SIGNAL tmp_54                           : std_logic;
  SIGNAL obj_messageExtender_fsm_endMsgOut : std_logic;
  SIGNAL obj_messageExtender_ctrlDelay    : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL tmp_55                           : std_logic_vector(0 TO 3);  -- boolean [4]
  SIGNAL tmp_56                           : std_logic;
  SIGNAL obj_messageExtender_startOut     : std_logic;
  SIGNAL tmp_57                           : std_logic;
  SIGNAL obj_messageExtender_endExtOut    : std_logic;
  SIGNAL tmp_58                           : std_logic;
  SIGNAL obj_messageExtender_validOut     : std_logic;
  SIGNAL tmp_59                           : std_logic;
  SIGNAL obj_messageExtender_endMsgOut    : std_logic;

BEGIN
  u_singlePortRam : LTE_MIB_H_ip_src_ltehdlPBCHDecoder_SinglePortRAM_generic
    GENERIC MAP( AddrWidth => 8,
                 DataWidth => 12
                 )
    PORT MAP( clk => clk,
              enb => enb,
              din => std_logic_vector(ramDataIn),
              addr => std_logic_vector(obj_messageExtender_fsm_addr),
              we => obj_messageExtender_fsm_wrEn,
              dout => ramDataOut
              );

  data(0) <= signed(data_0);
  data(1) <= signed(data_1);
  data(2) <= signed(data_2);

  obj_messageExtender_dataIn_1 <= data;

  obj_messageExtender_dataIn_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_dataIn <= (OTHERS => to_signed(16#0#, 4));
      ELSIF enb = '1' THEN
        obj_messageExtender_dataIn <= obj_messageExtender_dataIn_1;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_dataIn_reg_process;


  dataIn <= (OTHERS => to_signed(16#0#, 4));

  dataIn_1 <= obj_messageExtender_dataIn;

  ramDataIn <= unsigned(dataIn_1(0)) & unsigned(dataIn_1(1)) & unsigned(dataIn_1(2));

  tmp <= ctrl_valid AND ctrl_start;

  tmp_1 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp88
  fsmNext_state <= to_unsigned(16#1#, 2);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp161
  fsmNext_state_1 <= to_unsigned(16#1#, 2);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp161
  fsmNext_state_2 <= to_unsigned(16#2#, 2);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl
  -- 
  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp88
  
  tmp_2 <= fsmNext_state_1 WHEN ctrl_end = '0' ELSE
      fsmNext_state_2;

  
  tmp_3 <= fsmNext_state WHEN ctrl_valid = '0' ELSE
      tmp_2;

  tmp_4 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp152
  fsmNext_state_3 <= to_unsigned(16#3#, 2);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp152
  fsmNext_state_4 <= to_unsigned(16#0#, 2);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp59
  fsmNext_state_5 <= to_unsigned(16#1#, 2);

  tmp_5 <= obj_messageExtender_fsm_extCount + to_unsigned(16#01#, 7);

  p75_output : PROCESS (obj_messageExtender_fsm_extCount, obj_messageExtender_fsm_state, tmp_5)
    VARIABLE tmp6 : unsigned(6 DOWNTO 0);
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp6 := obj_messageExtender_fsm_extCount;
      WHEN "10" =>
        tmp6 := to_unsigned(16#00#, 7);
      WHEN "11" =>
        tmp6 := tmp_5;
      WHEN OTHERS => 
        tmp6 := to_unsigned(16#00#, 7);
    END CASE;
    tmp_7 <= tmp6;
  END PROCESS p75_output;


  
  tmp_8 <= tmp_7 WHEN tmp_4 = '0' ELSE
      obj_messageExtender_fsm_extCount;

  obj_messageExtender_fsm_extCount_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_extCount <= to_unsigned(16#00#, 7);
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_extCount <= tmp_8;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_extCount_reg_process;


  
  tmp_9 <= '1' WHEN obj_messageExtender_fsm_extCount = to_unsigned(16#4E#, 7) ELSE
      '0';

  
  tmp_10 <= fsmNext_state_3 WHEN tmp_9 = '0' ELSE
      fsmNext_state_4;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp59
  p81_output : PROCESS (obj_messageExtender_fsm_state, tmp_10, tmp_3)
    VARIABLE tmp11 : unsigned(1 DOWNTO 0);
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp11 := tmp_3;
      WHEN "10" =>
        tmp11 := to_unsigned(16#3#, 2);
      WHEN "11" =>
        tmp11 := tmp_10;
      WHEN OTHERS => 
        tmp11 := to_unsigned(16#0#, 2);
    END CASE;
    tmp_12 <= tmp11;
  END PROCESS p81_output;


  
  tmp_13 <= tmp_12 WHEN tmp_1 = '0' ELSE
      fsmNext_state_5;

  obj_messageExtender_fsm_state_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_state <= to_unsigned(16#0#, 2);
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_state <= tmp_13;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_state_reg_process;


  tmp_14 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp143
  fsmNext_addr <= to_unsigned(16#00#, 8);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp54
  fsmNext_addr_1 <= to_unsigned(16#00#, 8);

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp143
  tmp_15 <= obj_messageExtender_fsm_addr + to_unsigned(16#01#, 8);

  p77_output : PROCESS (obj_messageExtender_fsm_addr, obj_messageExtender_fsm_endAddr,
       obj_messageExtender_fsm_state)
    VARIABLE tmp16 : unsigned(7 DOWNTO 0);
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp16 := obj_messageExtender_fsm_endAddr;
      WHEN "10" =>
        tmp16 := obj_messageExtender_fsm_addr;
      WHEN "11" =>
        tmp16 := obj_messageExtender_fsm_endAddr;
      WHEN OTHERS => 
        tmp16 := obj_messageExtender_fsm_endAddr;
    END CASE;
    tmp_17 <= tmp16;
  END PROCESS p77_output;


  
  tmp_18 <= tmp_17 WHEN tmp_14 = '0' ELSE
      obj_messageExtender_fsm_endAddr;

  obj_messageExtender_fsm_endAddr_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_endAddr <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_endAddr <= tmp_18;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_endAddr_reg_process;


  
  tmp_19 <= '1' WHEN obj_messageExtender_fsm_addr = obj_messageExtender_fsm_endAddr ELSE
      '0';

  
  tmp_20 <= tmp_15 WHEN tmp_19 = '0' ELSE
      fsmNext_addr;

  tmp_21 <= obj_messageExtender_fsm_addr + to_unsigned(16#01#, 8);

  
  tmp_22 <= obj_messageExtender_fsm_addr WHEN ctrl_valid = '0' ELSE
      tmp_21;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp54
  p79_output : PROCESS (obj_messageExtender_fsm_addr, obj_messageExtender_fsm_state, tmp_20, tmp_22)
    VARIABLE tmp23 : unsigned(7 DOWNTO 0);
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp23 := tmp_22;
      WHEN "10" =>
        tmp23 := to_unsigned(16#00#, 8);
      WHEN "11" =>
        tmp23 := tmp_20;
      WHEN OTHERS => 
        tmp23 := obj_messageExtender_fsm_addr;
    END CASE;
    tmp_24 <= tmp23;
  END PROCESS p79_output;


  
  tmp_25 <= tmp_24 WHEN tmp = '0' ELSE
      fsmNext_addr_1;

  obj_messageExtender_fsm_addr_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_addr <= to_unsigned(16#00#, 8);
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_addr <= tmp_25;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_addr_reg_process;


  tmp_26 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp91
  fsmNext_wrEn <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp91
  fsmNext_wrEn_1 <= '1';

  
  tmp_27 <= fsmNext_wrEn WHEN ctrl_valid = '0' ELSE
      fsmNext_wrEn_1;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp23
  p65_output : PROCESS (obj_messageExtender_fsm_state, tmp_27)
    VARIABLE tmp28 : std_logic;
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp28 := tmp_27;
      WHEN "10" =>
        tmp28 := '0';
      WHEN "11" =>
        tmp28 := '0';
      WHEN OTHERS => 
        tmp28 := '0';
    END CASE;
    tmp_29 <= tmp28;
  END PROCESS p65_output;


  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp23
  fsmNext_wrEn_2 <= '1';

  
  tmp_30 <= tmp_29 WHEN tmp_26 = '0' ELSE
      fsmNext_wrEn_2;

  obj_messageExtender_fsm_wrEn_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_wrEn <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_wrEn <= tmp_30;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_wrEn_reg_process;


  xfi_stripped <= (OTHERS => to_unsigned(16#0#, 4));

  ramDataOut_unsigned <= unsigned(ramDataOut);

  p123xfi_stripped_output : PROCESS (ramDataOut_unsigned, xfi_stripped)
  BEGIN
    xfi_stripped_1 <= xfi_stripped;
    xfi_stripped_1(0) <= ramDataOut_unsigned(11 DOWNTO 8);
    xfi_stripped_1(1) <= ramDataOut_unsigned(7 DOWNTO 4);
    xfi_stripped_1(2) <= ramDataOut_unsigned(3 DOWNTO 0);
  END PROCESS p123xfi_stripped_output;


  xfi_trivial_scaling <= (OTHERS => to_unsigned(16#0#, 4));

  xfi_trivial_scaling_1 <= xfi_stripped_1;

  yfi_trivial_scaling <= (OTHERS => to_signed(16#0#, 4));


  yfi_trivial_scaling_1_gen: FOR t_0 IN 0 TO 2 GENERATE
    yfi_trivial_scaling_1(t_0) <= signed(xfi_trivial_scaling_1(t_0));
  END GENERATE yfi_trivial_scaling_1_gen;


  dataSplit <= (OTHERS => to_signed(16#0#, 4));

  dataSplit_1 <= yfi_trivial_scaling_1;

  obj_messageExtender_dataOut_1 <= dataSplit_1;

  obj_messageExtender_dataOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_dataOut <= (OTHERS => to_signed(16#0#, 4));
      ELSIF enb = '1' THEN
        obj_messageExtender_dataOut <= obj_messageExtender_dataOut_1;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_dataOut_reg_process;


  varargout_1_0 <= std_logic_vector(obj_messageExtender_dataOut(0));

  varargout_1_1 <= std_logic_vector(obj_messageExtender_dataOut(1));

  varargout_1_2 <= std_logic_vector(obj_messageExtender_dataOut(2));

  tmp_31 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp100
  fsmNext_startOut <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp100
  fsmNext_startOut_1 <= '0';

  
  tmp_32 <= fsmNext_startOut WHEN ctrl_valid = '0' ELSE
      fsmNext_startOut_1;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp43
  p73_output : PROCESS (obj_messageExtender_fsm_state, tmp_32)
    VARIABLE tmp33 : std_logic;
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp33 := tmp_32;
      WHEN "10" =>
        tmp33 := '0';
      WHEN "11" =>
        tmp33 := '0';
      WHEN OTHERS => 
        tmp33 := '0';
    END CASE;
    tmp_34 <= tmp33;
  END PROCESS p73_output;


  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp43
  fsmNext_startOut_2 <= '1';

  
  tmp_35 <= tmp_34 WHEN tmp_31 = '0' ELSE
      fsmNext_startOut_2;

  obj_messageExtender_fsm_startOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_startOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_startOut <= tmp_35;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_startOut_reg_process;


  tmp_36 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp97
  fsmNext_endExtOut <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp97
  fsmNext_endExtOut_1 <= '0';

  
  tmp_37 <= fsmNext_endExtOut WHEN ctrl_valid = '0' ELSE
      fsmNext_endExtOut_1;

  
  tmp_38 <= '1' WHEN obj_messageExtender_fsm_extCount = to_unsigned(16#4E#, 7) ELSE
      '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp148
  fsmNext_endExtOut_2 <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp148
  fsmNext_endExtOut_3 <= '1';

  
  tmp_39 <= fsmNext_endExtOut_2 WHEN tmp_38 = '0' ELSE
      fsmNext_endExtOut_3;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp38
  p71_output : PROCESS (obj_messageExtender_fsm_state, tmp_37, tmp_39)
    VARIABLE tmp40 : std_logic;
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp40 := tmp_37;
      WHEN "10" =>
        tmp40 := '0';
      WHEN "11" =>
        tmp40 := tmp_39;
      WHEN OTHERS => 
        tmp40 := '0';
    END CASE;
    tmp_41 <= tmp40;
  END PROCESS p71_output;


  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp38
  fsmNext_endExtOut_4 <= '0';

  
  tmp_42 <= tmp_41 WHEN tmp_36 = '0' ELSE
      fsmNext_endExtOut_4;

  obj_messageExtender_fsm_endExtOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_endExtOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_endExtOut <= tmp_42;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_endExtOut_reg_process;


  tmp_43 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp94
  fsmNext_validOut <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp94
  fsmNext_validOut_1 <= '1';

  
  tmp_44 <= fsmNext_validOut WHEN ctrl_valid = '0' ELSE
      fsmNext_validOut_1;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp33
  p69_output : PROCESS (obj_messageExtender_fsm_state, tmp_44)
    VARIABLE tmp45 : std_logic;
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp45 := tmp_44;
      WHEN "10" =>
        tmp45 := '1';
      WHEN "11" =>
        tmp45 := '1';
      WHEN OTHERS => 
        tmp45 := '0';
    END CASE;
    tmp_46 <= tmp45;
  END PROCESS p69_output;


  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp33
  fsmNext_validOut_2 <= '1';

  
  tmp_47 <= tmp_46 WHEN tmp_43 = '0' ELSE
      fsmNext_validOut_2;

  obj_messageExtender_fsm_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_validOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_validOut <= tmp_47;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_validOut_reg_process;


  tmp_48 <= ctrl_valid AND ctrl_start;

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp85
  fsmNext_endMsgOut <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp158
  fsmNext_endMsgOut_1 <= '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp158
  fsmNext_endMsgOut_2 <= '1';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp85
  
  tmp_49 <= fsmNext_endMsgOut_1 WHEN ctrl_end = '0' ELSE
      fsmNext_endMsgOut_2;

  
  tmp_50 <= fsmNext_endMsgOut WHEN ctrl_valid = '0' ELSE
      tmp_49;

  
  tmp_51 <= '1' WHEN resize(obj_messageExtender_fsm_addr, 9) = (resize(obj_messageExtender_fsm_endAddr, 9) - to_unsigned(16#001#, 9)) ELSE
      '0';

  -- HDL code generation from MATLAB function: SystemCore_stepImpl_falseregionp28
  p67_output : PROCESS (obj_messageExtender_fsm_state, tmp_50, tmp_51)
    VARIABLE tmp52 : std_logic;
  BEGIN
    CASE obj_messageExtender_fsm_state IS
      WHEN "01" =>
        tmp52 := tmp_50;
      WHEN "10" =>
        tmp52 := '0';
      WHEN "11" =>
        tmp52 := tmp_51;
      WHEN OTHERS => 
        tmp52 := '0';
    END CASE;
    tmp_53 <= tmp52;
  END PROCESS p67_output;


  -- HDL code generation from MATLAB function: SystemCore_stepImpl_trueregionp28
  fsmNext_endMsgOut_3 <= '0';

  
  tmp_54 <= tmp_53 WHEN tmp_48 = '0' ELSE
      fsmNext_endMsgOut_3;

  obj_messageExtender_fsm_endMsgOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_fsm_endMsgOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_fsm_endMsgOut <= tmp_54;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_fsm_endMsgOut_reg_process;


  p109tmp_output : PROCESS (obj_messageExtender_ctrlDelay, obj_messageExtender_fsm_endExtOut,
       obj_messageExtender_fsm_endMsgOut, obj_messageExtender_fsm_startOut,
       obj_messageExtender_fsm_validOut)
  BEGIN
    tmp_55 <= obj_messageExtender_ctrlDelay;
    tmp_55(0) <= obj_messageExtender_fsm_startOut;
    tmp_55(1) <= obj_messageExtender_fsm_endExtOut;
    tmp_55(2) <= obj_messageExtender_fsm_validOut;
    tmp_55(3) <= obj_messageExtender_fsm_endMsgOut;
  END PROCESS p109tmp_output;


  obj_messageExtender_ctrlDelay_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_ctrlDelay <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        obj_messageExtender_ctrlDelay <= tmp_55;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_ctrlDelay_reg_process;


  tmp_56 <= obj_messageExtender_ctrlDelay(0);

  obj_messageExtender_startOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_startOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_startOut <= tmp_56;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_startOut_reg_process;


  tmp_57 <= obj_messageExtender_ctrlDelay(1);

  obj_messageExtender_endExtOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_endExtOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_endExtOut <= tmp_57;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_endExtOut_reg_process;


  tmp_58 <= obj_messageExtender_ctrlDelay(2);

  obj_messageExtender_validOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_validOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_validOut <= tmp_58;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_validOut_reg_process;


  tmp_59 <= obj_messageExtender_ctrlDelay(3);

  obj_messageExtender_endMsgOut_reg_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        obj_messageExtender_endMsgOut <= '0';
      ELSIF enb = '1' THEN
        obj_messageExtender_endMsgOut <= tmp_59;
      END IF;
    END IF;
  END PROCESS obj_messageExtender_endMsgOut_reg_process;


  varargout_2 <= obj_messageExtender_startOut;

  varargout_3 <= obj_messageExtender_endExtOut;

  varargout_4 <= obj_messageExtender_validOut;

  varargout_5 <= obj_messageExtender_endMsgOut;

END rtl;

