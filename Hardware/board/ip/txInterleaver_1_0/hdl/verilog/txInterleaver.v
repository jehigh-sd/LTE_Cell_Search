// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="txInterleaver_txInterleaver,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=16.299999,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=0.000000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=8,HLS_SYN_LUT=120,HLS_VERSION=2020_2}" *)

module txInterleaver (
        ap_clk,
        ap_rst_n,
        IN_AC_TDATA,
        IN_AC_TVALID,
        IN_AC_TREADY,
        IN_AC_TKEEP,
        IN_AC_TSTRB,
        IN_AC_TLAST,
        IN_GEN_TDATA,
        IN_GEN_TVALID,
        IN_GEN_TREADY,
        IN_GEN_TKEEP,
        IN_GEN_TSTRB,
        IN_GEN_TLAST,
        OUT_DAC_TDATA,
        OUT_DAC_TVALID,
        OUT_DAC_TREADY,
        OUT_DAC_TKEEP,
        OUT_DAC_TSTRB,
        OUT_DAC_TLAST
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst_n;
input  [255:0] IN_AC_TDATA;
input   IN_AC_TVALID;
output   IN_AC_TREADY;
input  [31:0] IN_AC_TKEEP;
input  [31:0] IN_AC_TSTRB;
input  [0:0] IN_AC_TLAST;
input  [255:0] IN_GEN_TDATA;
input   IN_GEN_TVALID;
output   IN_GEN_TREADY;
input  [31:0] IN_GEN_TKEEP;
input  [31:0] IN_GEN_TSTRB;
input  [0:0] IN_GEN_TLAST;
output  [255:0] OUT_DAC_TDATA;
output   OUT_DAC_TVALID;
input   OUT_DAC_TREADY;
output  [31:0] OUT_DAC_TKEEP;
output  [31:0] OUT_DAC_TSTRB;
output  [0:0] OUT_DAC_TLAST;

 reg    ap_rst_n_inv;
wire    grp_interleave_samples_fu_52_IN_AC_TDATA_blk_n;
reg    IN_AC_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
wire    grp_interleave_samples_fu_52_IN_GEN_TDATA_blk_n;
reg    IN_GEN_TDATA_blk_n;
wire    grp_interleave_samples_fu_52_OUT_DAC_TDATA_blk_n;
reg    OUT_DAC_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter0;
wire    ap_CS_fsm_state1;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    grp_interleave_samples_fu_52_ap_start;
wire    grp_interleave_samples_fu_52_ap_done;
wire    grp_interleave_samples_fu_52_ap_idle;
wire    grp_interleave_samples_fu_52_ap_ready;
wire    grp_interleave_samples_fu_52_OUT_DAC_TREADY;
reg    grp_interleave_samples_fu_52_ap_ce;
wire    grp_interleave_samples_fu_52_IN_AC_TREADY;
wire    grp_interleave_samples_fu_52_IN_GEN_TREADY;
wire   [255:0] grp_interleave_samples_fu_52_OUT_DAC_TDATA;
wire    grp_interleave_samples_fu_52_OUT_DAC_TVALID;
wire   [31:0] grp_interleave_samples_fu_52_OUT_DAC_TKEEP;
wire   [31:0] grp_interleave_samples_fu_52_OUT_DAC_TSTRB;
wire   [0:0] grp_interleave_samples_fu_52_OUT_DAC_TLAST;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call2;
wire    ap_block_state3_pp0_stage0_iter1_ignore_call2;
wire    ap_block_state4_pp0_stage0_iter2_ignore_call2;
wire    ap_block_pp0_stage0_11001_ignoreCallOp23;
reg    grp_interleave_samples_fu_52_ap_start_reg;
reg    ap_block_pp0_stage0_11001;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_IN_AC_V_data_V_U_apdone_blk;
wire   [255:0] IN_AC_TDATA_int_regslice;
wire    IN_AC_TVALID_int_regslice;
reg    IN_AC_TREADY_int_regslice;
wire    regslice_both_IN_AC_V_data_V_U_ack_in;
wire    regslice_both_IN_AC_V_keep_V_U_apdone_blk;
wire   [31:0] IN_AC_TKEEP_int_regslice;
wire    regslice_both_IN_AC_V_keep_V_U_vld_out;
wire    regslice_both_IN_AC_V_keep_V_U_ack_in;
wire    regslice_both_IN_AC_V_strb_V_U_apdone_blk;
wire   [31:0] IN_AC_TSTRB_int_regslice;
wire    regslice_both_IN_AC_V_strb_V_U_vld_out;
wire    regslice_both_IN_AC_V_strb_V_U_ack_in;
wire    regslice_both_IN_AC_V_last_V_U_apdone_blk;
wire   [0:0] IN_AC_TLAST_int_regslice;
wire    regslice_both_IN_AC_V_last_V_U_vld_out;
wire    regslice_both_IN_AC_V_last_V_U_ack_in;
wire    regslice_both_IN_GEN_V_data_V_U_apdone_blk;
wire   [255:0] IN_GEN_TDATA_int_regslice;
wire    IN_GEN_TVALID_int_regslice;
reg    IN_GEN_TREADY_int_regslice;
wire    regslice_both_IN_GEN_V_data_V_U_ack_in;
wire    regslice_both_IN_GEN_V_keep_V_U_apdone_blk;
wire   [31:0] IN_GEN_TKEEP_int_regslice;
wire    regslice_both_IN_GEN_V_keep_V_U_vld_out;
wire    regslice_both_IN_GEN_V_keep_V_U_ack_in;
wire    regslice_both_IN_GEN_V_strb_V_U_apdone_blk;
wire   [31:0] IN_GEN_TSTRB_int_regslice;
wire    regslice_both_IN_GEN_V_strb_V_U_vld_out;
wire    regslice_both_IN_GEN_V_strb_V_U_ack_in;
wire    regslice_both_IN_GEN_V_last_V_U_apdone_blk;
wire   [0:0] IN_GEN_TLAST_int_regslice;
wire    regslice_both_IN_GEN_V_last_V_U_vld_out;
wire    regslice_both_IN_GEN_V_last_V_U_ack_in;
wire    regslice_both_OUT_DAC_V_data_V_U_apdone_blk;
wire    OUT_DAC_TREADY_int_regslice;
wire    regslice_both_OUT_DAC_V_data_V_U_vld_out;
wire    regslice_both_OUT_DAC_V_keep_V_U_apdone_blk;
wire    regslice_both_OUT_DAC_V_keep_V_U_ack_in_dummy;
wire    regslice_both_OUT_DAC_V_keep_V_U_vld_out;
wire    regslice_both_OUT_DAC_V_strb_V_U_apdone_blk;
wire    regslice_both_OUT_DAC_V_strb_V_U_ack_in_dummy;
wire    regslice_both_OUT_DAC_V_strb_V_U_vld_out;
wire    regslice_both_OUT_DAC_V_last_V_U_apdone_blk;
wire    regslice_both_OUT_DAC_V_last_V_U_ack_in_dummy;
wire    regslice_both_OUT_DAC_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_interleave_samples_fu_52_ap_start_reg = 1'b0;
end

txInterleaver_interleave_samples grp_interleave_samples_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_interleave_samples_fu_52_ap_start),
    .ap_done(grp_interleave_samples_fu_52_ap_done),
    .ap_idle(grp_interleave_samples_fu_52_ap_idle),
    .ap_ready(grp_interleave_samples_fu_52_ap_ready),
    .IN_AC_TVALID(IN_AC_TVALID_int_regslice),
    .IN_GEN_TVALID(IN_GEN_TVALID_int_regslice),
    .OUT_DAC_TREADY(grp_interleave_samples_fu_52_OUT_DAC_TREADY),
    .ap_ce(grp_interleave_samples_fu_52_ap_ce),
    .IN_AC_TDATA(IN_AC_TDATA_int_regslice),
    .IN_AC_TREADY(grp_interleave_samples_fu_52_IN_AC_TREADY),
    .IN_AC_TKEEP(IN_AC_TKEEP_int_regslice),
    .IN_AC_TSTRB(IN_AC_TSTRB_int_regslice),
    .IN_AC_TLAST(IN_AC_TLAST_int_regslice),
    .IN_GEN_TDATA(IN_GEN_TDATA_int_regslice),
    .IN_GEN_TREADY(grp_interleave_samples_fu_52_IN_GEN_TREADY),
    .IN_GEN_TKEEP(IN_GEN_TKEEP_int_regslice),
    .IN_GEN_TSTRB(IN_GEN_TSTRB_int_regslice),
    .IN_GEN_TLAST(IN_GEN_TLAST_int_regslice),
    .OUT_DAC_TDATA(grp_interleave_samples_fu_52_OUT_DAC_TDATA),
    .OUT_DAC_TVALID(grp_interleave_samples_fu_52_OUT_DAC_TVALID),
    .OUT_DAC_TKEEP(grp_interleave_samples_fu_52_OUT_DAC_TKEEP),
    .OUT_DAC_TSTRB(grp_interleave_samples_fu_52_OUT_DAC_TSTRB),
    .OUT_DAC_TLAST(grp_interleave_samples_fu_52_OUT_DAC_TLAST),
    .IN_AC_TDATA_blk_n(grp_interleave_samples_fu_52_IN_AC_TDATA_blk_n),
    .IN_GEN_TDATA_blk_n(grp_interleave_samples_fu_52_IN_GEN_TDATA_blk_n),
    .OUT_DAC_TDATA_blk_n(grp_interleave_samples_fu_52_OUT_DAC_TDATA_blk_n)
);

txInterleaver_regslice_both #(
    .DataWidth( 256 ))
regslice_both_IN_AC_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_AC_TDATA),
    .vld_in(IN_AC_TVALID),
    .ack_in(regslice_both_IN_AC_V_data_V_U_ack_in),
    .data_out(IN_AC_TDATA_int_regslice),
    .vld_out(IN_AC_TVALID_int_regslice),
    .ack_out(IN_AC_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_AC_V_data_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 32 ))
regslice_both_IN_AC_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_AC_TKEEP),
    .vld_in(IN_AC_TVALID),
    .ack_in(regslice_both_IN_AC_V_keep_V_U_ack_in),
    .data_out(IN_AC_TKEEP_int_regslice),
    .vld_out(regslice_both_IN_AC_V_keep_V_U_vld_out),
    .ack_out(IN_AC_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_AC_V_keep_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 32 ))
regslice_both_IN_AC_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_AC_TSTRB),
    .vld_in(IN_AC_TVALID),
    .ack_in(regslice_both_IN_AC_V_strb_V_U_ack_in),
    .data_out(IN_AC_TSTRB_int_regslice),
    .vld_out(regslice_both_IN_AC_V_strb_V_U_vld_out),
    .ack_out(IN_AC_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_AC_V_strb_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 1 ))
regslice_both_IN_AC_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_AC_TLAST),
    .vld_in(IN_AC_TVALID),
    .ack_in(regslice_both_IN_AC_V_last_V_U_ack_in),
    .data_out(IN_AC_TLAST_int_regslice),
    .vld_out(regslice_both_IN_AC_V_last_V_U_vld_out),
    .ack_out(IN_AC_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_AC_V_last_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 256 ))
regslice_both_IN_GEN_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_GEN_TDATA),
    .vld_in(IN_GEN_TVALID),
    .ack_in(regslice_both_IN_GEN_V_data_V_U_ack_in),
    .data_out(IN_GEN_TDATA_int_regslice),
    .vld_out(IN_GEN_TVALID_int_regslice),
    .ack_out(IN_GEN_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_GEN_V_data_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 32 ))
regslice_both_IN_GEN_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_GEN_TKEEP),
    .vld_in(IN_GEN_TVALID),
    .ack_in(regslice_both_IN_GEN_V_keep_V_U_ack_in),
    .data_out(IN_GEN_TKEEP_int_regslice),
    .vld_out(regslice_both_IN_GEN_V_keep_V_U_vld_out),
    .ack_out(IN_GEN_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_GEN_V_keep_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 32 ))
regslice_both_IN_GEN_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_GEN_TSTRB),
    .vld_in(IN_GEN_TVALID),
    .ack_in(regslice_both_IN_GEN_V_strb_V_U_ack_in),
    .data_out(IN_GEN_TSTRB_int_regslice),
    .vld_out(regslice_both_IN_GEN_V_strb_V_U_vld_out),
    .ack_out(IN_GEN_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_GEN_V_strb_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 1 ))
regslice_both_IN_GEN_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_GEN_TLAST),
    .vld_in(IN_GEN_TVALID),
    .ack_in(regslice_both_IN_GEN_V_last_V_U_ack_in),
    .data_out(IN_GEN_TLAST_int_regslice),
    .vld_out(regslice_both_IN_GEN_V_last_V_U_vld_out),
    .ack_out(IN_GEN_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_GEN_V_last_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 256 ))
regslice_both_OUT_DAC_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_interleave_samples_fu_52_OUT_DAC_TDATA),
    .vld_in(grp_interleave_samples_fu_52_OUT_DAC_TVALID),
    .ack_in(OUT_DAC_TREADY_int_regslice),
    .data_out(OUT_DAC_TDATA),
    .vld_out(regslice_both_OUT_DAC_V_data_V_U_vld_out),
    .ack_out(OUT_DAC_TREADY),
    .apdone_blk(regslice_both_OUT_DAC_V_data_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 32 ))
regslice_both_OUT_DAC_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_interleave_samples_fu_52_OUT_DAC_TKEEP),
    .vld_in(grp_interleave_samples_fu_52_OUT_DAC_TVALID),
    .ack_in(regslice_both_OUT_DAC_V_keep_V_U_ack_in_dummy),
    .data_out(OUT_DAC_TKEEP),
    .vld_out(regslice_both_OUT_DAC_V_keep_V_U_vld_out),
    .ack_out(OUT_DAC_TREADY),
    .apdone_blk(regslice_both_OUT_DAC_V_keep_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 32 ))
regslice_both_OUT_DAC_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_interleave_samples_fu_52_OUT_DAC_TSTRB),
    .vld_in(grp_interleave_samples_fu_52_OUT_DAC_TVALID),
    .ack_in(regslice_both_OUT_DAC_V_strb_V_U_ack_in_dummy),
    .data_out(OUT_DAC_TSTRB),
    .vld_out(regslice_both_OUT_DAC_V_strb_V_U_vld_out),
    .ack_out(OUT_DAC_TREADY),
    .apdone_blk(regslice_both_OUT_DAC_V_strb_V_U_apdone_blk)
);

txInterleaver_regslice_both #(
    .DataWidth( 1 ))
regslice_both_OUT_DAC_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_interleave_samples_fu_52_OUT_DAC_TLAST),
    .vld_in(grp_interleave_samples_fu_52_OUT_DAC_TVALID),
    .ack_in(regslice_both_OUT_DAC_V_last_V_U_ack_in_dummy),
    .data_out(OUT_DAC_TLAST),
    .vld_out(regslice_both_OUT_DAC_V_last_V_U_vld_out),
    .ack_out(OUT_DAC_TREADY),
    .apdone_blk(regslice_both_OUT_DAC_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state1)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_interleave_samples_fu_52_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_interleave_samples_fu_52_ap_start_reg <= 1'b1;
        end else if ((grp_interleave_samples_fu_52_ap_ready == 1'b1)) begin
            grp_interleave_samples_fu_52_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IN_AC_TDATA_blk_n = grp_interleave_samples_fu_52_IN_AC_TDATA_blk_n;
    end else begin
        IN_AC_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IN_AC_TREADY_int_regslice = grp_interleave_samples_fu_52_IN_AC_TREADY;
    end else begin
        IN_AC_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IN_GEN_TDATA_blk_n = grp_interleave_samples_fu_52_IN_GEN_TDATA_blk_n;
    end else begin
        IN_GEN_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        IN_GEN_TREADY_int_regslice = grp_interleave_samples_fu_52_IN_GEN_TREADY;
    end else begin
        IN_GEN_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        OUT_DAC_TDATA_blk_n = grp_interleave_samples_fu_52_OUT_DAC_TDATA_blk_n;
    end else begin
        OUT_DAC_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp23) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_interleave_samples_fu_52_ap_ce = 1'b1;
    end else begin
        grp_interleave_samples_fu_52_ap_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IN_AC_TREADY = regslice_both_IN_AC_V_data_V_U_ack_in;

assign IN_GEN_TREADY = regslice_both_IN_GEN_V_data_V_U_ack_in;

assign OUT_DAC_TVALID = regslice_both_OUT_DAC_V_data_V_U_vld_out;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((grp_interleave_samples_fu_52_OUT_DAC_TDATA_blk_n == 1'b0) | (grp_interleave_samples_fu_52_IN_GEN_TDATA_blk_n == 1'b0) | (grp_interleave_samples_fu_52_IN_AC_TDATA_blk_n == 1'b0)));
end

assign ap_block_pp0_stage0_11001_ignoreCallOp23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((grp_interleave_samples_fu_52_OUT_DAC_TDATA_blk_n == 1'b0) | (grp_interleave_samples_fu_52_IN_GEN_TDATA_blk_n == 1'b0) | (grp_interleave_samples_fu_52_IN_AC_TDATA_blk_n == 1'b0)));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((grp_interleave_samples_fu_52_OUT_DAC_TDATA_blk_n == 1'b0) | (grp_interleave_samples_fu_52_IN_GEN_TDATA_blk_n == 1'b0) | (grp_interleave_samples_fu_52_IN_AC_TDATA_blk_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter1_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2_ignore_call2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_interleave_samples_fu_52_OUT_DAC_TREADY = (ap_CS_fsm_pp0_stage0 & OUT_DAC_TREADY_int_regslice);

assign grp_interleave_samples_fu_52_ap_start = grp_interleave_samples_fu_52_ap_start_reg;

endmodule //txInterleaver
