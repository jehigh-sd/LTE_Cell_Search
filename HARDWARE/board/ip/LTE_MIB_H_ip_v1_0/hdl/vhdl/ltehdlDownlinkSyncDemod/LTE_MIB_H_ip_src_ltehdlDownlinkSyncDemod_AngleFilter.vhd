-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\ltehdlDownlinkSyncDemod\LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_AngleFilter.vhd
-- Created: 2022-05-23 17:26:44
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_AngleFilter
-- Source Path: ltehdlDownlinkSyncDemod/FrequencyEstimation/AngleFilter
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_AngleFilter IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        angleIn                           :   IN    std_logic_vector(13 DOWNTO 0);  -- sfix14_En14
        slotValidIn                       :   IN    std_logic;
        sampleValidIn                     :   IN    std_logic;
        angleOut                          :   OUT   std_logic_vector(13 DOWNTO 0);  -- sfix14_En14
        sampleValidOut                    :   OUT   std_logic
        );
END LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_AngleFilter;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_AngleFilter IS

  -- Signals
  SIGNAL Delay6_out1                      : std_logic;
  SIGNAL Delay17_out1                     : std_logic;
  SIGNAL Delay3_out1                      : std_logic;
  SIGNAL angleIn_signed                   : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay5_out1                      : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut                   : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl                    : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_1                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_1                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_2                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_2                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_3                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_3                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_4                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_4                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_5                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_5                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_6                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_6                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_7                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_7                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_8                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_8                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_9                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_9                  : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_10                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_10                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_11                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_11                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_12                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_12                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_13                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_13                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_14                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_14                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_15                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_15                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_16                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_16                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_17                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_17                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_delOut_18                : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_18                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_out1                     : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay13_ectrl_19                 : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Add2_sub_cast                    : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL Add2_sub_cast_1                  : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL Add2_out1                        : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL Delay14_out1                     : signed(14 DOWNTO 0);  -- sfix15_En14
  SIGNAL Delay15_out1                     : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL Add3_out1                        : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL Delay15_ectrl                    : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL Add3_add_cast                    : signed(19 DOWNTO 0);  -- sfix20_En14
  SIGNAL Gain1_out1                       : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Delay1_out1                      : signed(37 DOWNTO 0);  -- sfix38_En35
  SIGNAL Data_Type_Conversion2_out1       : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay7_out1                      : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay7_ectrl                     : signed(13 DOWNTO 0);  -- sfix14_En14
  SIGNAL Delay20_out1                     : std_logic;
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL Delay8_out1                      : std_logic;
  SIGNAL Delay4_out1                      : std_logic;

BEGIN
  -- 20 tap moving average filter.
  -- This averages the frequency estimates across one frame.

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay6_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay6_out1 <= slotValidIn;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  Delay17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay17_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay17_out1 <= Delay6_out1;
      END IF;
    END IF;
  END PROCESS Delay17_process;


  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay3_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay3_out1 <= Delay17_out1;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  angleIn_signed <= signed(angleIn);

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay5_out1 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay5_out1 <= angleIn_signed;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  
  Delay13_ectrl <= Delay13_delOut WHEN Delay6_out1 = '0' ELSE
      Delay5_out1;

  Delay13_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut <= Delay13_ectrl;
      END IF;
    END IF;
  END PROCESS Delay13_lowered_process;


  
  Delay13_ectrl_1 <= Delay13_delOut_1 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut;

  Delay13_lowered1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_1 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_1 <= Delay13_ectrl_1;
      END IF;
    END IF;
  END PROCESS Delay13_lowered1_process;


  
  Delay13_ectrl_2 <= Delay13_delOut_2 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_1;

  Delay13_lowered2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_2 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_2 <= Delay13_ectrl_2;
      END IF;
    END IF;
  END PROCESS Delay13_lowered2_process;


  
  Delay13_ectrl_3 <= Delay13_delOut_3 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_2;

  Delay13_lowered3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_3 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_3 <= Delay13_ectrl_3;
      END IF;
    END IF;
  END PROCESS Delay13_lowered3_process;


  
  Delay13_ectrl_4 <= Delay13_delOut_4 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_3;

  Delay13_lowered4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_4 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_4 <= Delay13_ectrl_4;
      END IF;
    END IF;
  END PROCESS Delay13_lowered4_process;


  
  Delay13_ectrl_5 <= Delay13_delOut_5 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_4;

  Delay13_lowered5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_5 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_5 <= Delay13_ectrl_5;
      END IF;
    END IF;
  END PROCESS Delay13_lowered5_process;


  
  Delay13_ectrl_6 <= Delay13_delOut_6 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_5;

  Delay13_lowered6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_6 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_6 <= Delay13_ectrl_6;
      END IF;
    END IF;
  END PROCESS Delay13_lowered6_process;


  
  Delay13_ectrl_7 <= Delay13_delOut_7 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_6;

  Delay13_lowered7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_7 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_7 <= Delay13_ectrl_7;
      END IF;
    END IF;
  END PROCESS Delay13_lowered7_process;


  
  Delay13_ectrl_8 <= Delay13_delOut_8 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_7;

  Delay13_lowered8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_8 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_8 <= Delay13_ectrl_8;
      END IF;
    END IF;
  END PROCESS Delay13_lowered8_process;


  
  Delay13_ectrl_9 <= Delay13_delOut_9 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_8;

  Delay13_lowered9_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_9 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_9 <= Delay13_ectrl_9;
      END IF;
    END IF;
  END PROCESS Delay13_lowered9_process;


  
  Delay13_ectrl_10 <= Delay13_delOut_10 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_9;

  Delay13_lowered10_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_10 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_10 <= Delay13_ectrl_10;
      END IF;
    END IF;
  END PROCESS Delay13_lowered10_process;


  
  Delay13_ectrl_11 <= Delay13_delOut_11 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_10;

  Delay13_lowered11_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_11 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_11 <= Delay13_ectrl_11;
      END IF;
    END IF;
  END PROCESS Delay13_lowered11_process;


  
  Delay13_ectrl_12 <= Delay13_delOut_12 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_11;

  Delay13_lowered12_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_12 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_12 <= Delay13_ectrl_12;
      END IF;
    END IF;
  END PROCESS Delay13_lowered12_process;


  
  Delay13_ectrl_13 <= Delay13_delOut_13 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_12;

  Delay13_lowered13_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_13 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_13 <= Delay13_ectrl_13;
      END IF;
    END IF;
  END PROCESS Delay13_lowered13_process;


  
  Delay13_ectrl_14 <= Delay13_delOut_14 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_13;

  Delay13_lowered14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_14 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_14 <= Delay13_ectrl_14;
      END IF;
    END IF;
  END PROCESS Delay13_lowered14_process;


  
  Delay13_ectrl_15 <= Delay13_delOut_15 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_14;

  Delay13_lowered15_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_15 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_15 <= Delay13_ectrl_15;
      END IF;
    END IF;
  END PROCESS Delay13_lowered15_process;


  
  Delay13_ectrl_16 <= Delay13_delOut_16 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_15;

  Delay13_lowered16_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_16 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_16 <= Delay13_ectrl_16;
      END IF;
    END IF;
  END PROCESS Delay13_lowered16_process;


  
  Delay13_ectrl_17 <= Delay13_delOut_17 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_16;

  Delay13_lowered17_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_17 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_17 <= Delay13_ectrl_17;
      END IF;
    END IF;
  END PROCESS Delay13_lowered17_process;


  
  Delay13_ectrl_18 <= Delay13_delOut_18 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_17;

  Delay13_lowered18_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_delOut_18 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_delOut_18 <= Delay13_ectrl_18;
      END IF;
    END IF;
  END PROCESS Delay13_lowered18_process;


  
  Delay13_ectrl_19 <= Delay13_out1 WHEN Delay6_out1 = '0' ELSE
      Delay13_delOut_18;

  Delay13_lowered19_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay13_out1 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay13_out1 <= Delay13_ectrl_19;
      END IF;
    END IF;
  END PROCESS Delay13_lowered19_process;


  Add2_sub_cast <= resize(Delay5_out1, 15);
  Add2_sub_cast_1 <= resize(Delay13_out1, 15);
  Add2_out1 <= Add2_sub_cast - Add2_sub_cast_1;

  Delay14_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay14_out1 <= to_signed(16#0000#, 15);
      ELSIF enb = '1' THEN
        Delay14_out1 <= Add2_out1;
      END IF;
    END IF;
  END PROCESS Delay14_process;


  
  Delay15_ectrl <= Delay15_out1 WHEN Delay17_out1 = '0' ELSE
      Add3_out1;

  Delay15_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay15_out1 <= to_signed(16#00000#, 20);
      ELSIF enb = '1' THEN
        Delay15_out1 <= Delay15_ectrl;
      END IF;
    END IF;
  END PROCESS Delay15_lowered_process;


  Add3_add_cast <= resize(Delay14_out1, 20);
  Add3_out1 <= Delay15_out1 + Add3_add_cast;

  Gain1_out1 <= to_signed(16#1999A#, 18) * Add3_out1;

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1 <= to_signed(0, 38);
      ELSIF enb = '1' THEN
        Delay1_out1 <= Gain1_out1;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  Data_Type_Conversion2_out1 <= Delay1_out1(34 DOWNTO 21) + ('0' & (Delay1_out1(20) AND (( NOT Delay1_out1(37)) OR (Delay1_out1(19) OR Delay1_out1(18) OR Delay1_out1(17) OR Delay1_out1(16) OR Delay1_out1(15) OR Delay1_out1(14) OR Delay1_out1(13) OR Delay1_out1(12) OR Delay1_out1(11) OR Delay1_out1(10) OR Delay1_out1(9) OR Delay1_out1(8) OR Delay1_out1(7) OR Delay1_out1(6) OR Delay1_out1(5) OR Delay1_out1(4) OR Delay1_out1(3) OR Delay1_out1(2) OR Delay1_out1(1) OR Delay1_out1(0)))));

  
  Delay7_ectrl <= Delay7_out1 WHEN Delay3_out1 = '0' ELSE
      Data_Type_Conversion2_out1;

  Delay7_lowered_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay7_out1 <= to_signed(16#0000#, 14);
      ELSIF enb = '1' THEN
        Delay7_out1 <= Delay7_ectrl;
      END IF;
    END IF;
  END PROCESS Delay7_lowered_process;


  angleOut <= std_logic_vector(Delay7_out1);

  Delay20_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay20_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay20_out1 <= sampleValidIn;
      END IF;
    END IF;
  END PROCESS Delay20_process;


  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= Delay20_out1;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Delay8_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay8_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay8_out1 <= Delay2_out1;
      END IF;
    END IF;
  END PROCESS Delay8_process;


  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay4_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay4_out1 <= Delay8_out1;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  sampleValidOut <= Delay4_out1;

END rtl;

