-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\ltehdlDownlinkSyncDemod\LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Correlators.vhd
-- Created: 2022-05-23 17:26:44
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Correlators
-- Source Path: ltehdlDownlinkSyncDemod/Sync Signal Search/PSS Searcher/Correlators
-- Hierarchy Level: 5
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
LIBRARY work_ltehdlDownlinkSyncDemod;

ENTITY LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Correlators IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        enb                               :   IN    std_logic;
        dataIn_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        dataIn_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        validIn                           :   IN    std_logic;
        correlation_0                     :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
        correlation_1                     :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
        correlation_2                     :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
        threshold                         :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
        validOut                          :   OUT   std_logic
        );
END LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Correlators;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_Correlators IS

  -- Component Declarations
  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared0
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataOut                         :   OUT   std_logic_vector(29 DOWNTO 0)  -- ufix30_En24
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr1
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En12
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared1
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataOut                         :   OUT   std_logic_vector(29 DOWNTO 0)  -- ufix30_En24
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr2
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared2
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdPrescaling
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En30
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MovingAverage_block
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(29 DOWNTO 0);  -- ufix30_En30
          validIn                         :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter
    PORT( x                               :   IN    std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
          y                               :   OUT   std_logic_vector(29 DOWNTO 0)  -- ufix30_En24
          );
  END COMPONENT;

  COMPONENT LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_StreamSyncronizer
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb                             :   IN    std_logic;
          pop                             :   IN    std_logic;
          dataIn                          :   IN    std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
          push                            :   IN    std_logic;
          dataOut                         :   OUT   std_logic_vector(29 DOWNTO 0);  -- ufix30_En24
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared0
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared0(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr1
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr1(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared1
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared1(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr2
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr2(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared2
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared2(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdPrescaling
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdPrescaling(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MovingAverage_block
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MovingAverage_block(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter(rtl);

  FOR ALL : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_StreamSyncronizer
    USE ENTITY work_ltehdlDownlinkSyncDemod.LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_StreamSyncronizer(rtl);

  -- Signals
  SIGNAL dataIn_re_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL dataIn_im_signed                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay3_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay3_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay2_out1                      : std_logic;
  SIGNAL PSSXCorr0_out1_re                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL PSSXCorr0_out1_im                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL MagnitudeSquared0_out1           : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL MagnitudeSquared0_out1_unsigned  : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL Delay1_out1                      : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL PSSXCorr1_out1_re                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL PSSXCorr1_out1_im                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL MagnitudeSquared1_out1           : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL MagnitudeSquared1_out1_unsigned  : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL Delay5_out1                      : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL PSSXCorr2_out1_re                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL PSSXCorr2_out1_im                : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL PSSXCorr2_out2                   : std_logic;
  SIGNAL MagnitudeSquared2_out1           : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL pop                              : std_logic;
  SIGNAL MagnitudeSquared2_out1_unsigned  : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL Delay4_out1                      : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL ThresholdPrescaling_out1_re      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ThresholdPrescaling_out1_im      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL ThresholdPrescaling_out2         : std_logic;
  SIGNAL MagnitudeSquared_out1            : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL MagnitudeSquared_out2            : std_logic;
  SIGNAL dataIn                           : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL push                             : std_logic;
  SIGNAL y                                : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL y_unsigned                       : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL Delay6_out1                      : unsigned(29 DOWNTO 0);  -- ufix30_En24
  SIGNAL Delay7_out1                      : std_logic;
  SIGNAL dataOut                          : std_logic_vector(29 DOWNTO 0);  -- ufix30

BEGIN
  -- Measure the energy in the signal across a 128 sample window, which is equivalent to the PSS correlation window. 
  -- This will be used later to generate a threshold
  -- 
  -- Use a simple circular buffer to synchronize the streams, given that the correlators have greater latency than the 
  -- signal power measurement
  -- 
  -- Scale the signal by the square root of the threshold scaling factor before measuring the energy. This leads to 
  -- a more efficient implementation than applying the scaling factor afterwards
  -- 
  -- Apply a lower limit to the threshold to prevent small signals from triggering detection.

  u_PSSXCorr0 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr0
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => std_logic_vector(Delay3_out1_re),  -- sfix16_En15
              dataIn_im => std_logic_vector(Delay3_out1_im),  -- sfix16_En15
              validIn => Delay2_out1,
              dataOut_re => PSSXCorr0_out1_re,  -- sfix16_En12
              dataOut_im => PSSXCorr0_out1_im  -- sfix16_En12
              );

  u_MagnitudeSquared0 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared0
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => PSSXCorr0_out1_re,  -- sfix16_En12
              dataIn_im => PSSXCorr0_out1_im,  -- sfix16_En12
              dataOut => MagnitudeSquared0_out1  -- ufix30_En24
              );

  u_PSSXCorr1 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr1
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => std_logic_vector(Delay3_out1_re),  -- sfix16_En15
              dataIn_im => std_logic_vector(Delay3_out1_im),  -- sfix16_En15
              validIn => Delay2_out1,
              dataOut_re => PSSXCorr1_out1_re,  -- sfix16_En12
              dataOut_im => PSSXCorr1_out1_im  -- sfix16_En12
              );

  u_MagnitudeSquared1 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared1
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => PSSXCorr1_out1_re,  -- sfix16_En12
              dataIn_im => PSSXCorr1_out1_im,  -- sfix16_En12
              dataOut => MagnitudeSquared1_out1  -- ufix30_En24
              );

  u_PSSXCorr2 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_PSSXCorr2
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => std_logic_vector(Delay3_out1_re),  -- sfix16_En15
              dataIn_im => std_logic_vector(Delay3_out1_im),  -- sfix16_En15
              validIn => Delay2_out1,
              dataOut_re => PSSXCorr2_out1_re,  -- sfix16_En12
              dataOut_im => PSSXCorr2_out1_im,  -- sfix16_En12
              validOut => PSSXCorr2_out2
              );

  u_MagnitudeSquared2 : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared2
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => PSSXCorr2_out1_re,  -- sfix16_En12
              dataIn_im => PSSXCorr2_out1_im,  -- sfix16_En12
              validIn => PSSXCorr2_out2,
              dataOut => MagnitudeSquared2_out1,  -- ufix30_En24
              validOut => pop
              );

  u_ThresholdPrescaling : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdPrescaling
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => std_logic_vector(Delay3_out1_re),  -- sfix16_En15
              dataIn_im => std_logic_vector(Delay3_out1_im),  -- sfix16_En15
              validIn => Delay2_out1,
              dataOut_re => ThresholdPrescaling_out1_re,  -- sfix16_En15
              dataOut_im => ThresholdPrescaling_out1_im,  -- sfix16_En15
              validOut => ThresholdPrescaling_out2
              );

  u_MagnitudeSquared : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MagnitudeSquared
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn_re => ThresholdPrescaling_out1_re,  -- sfix16_En15
              dataIn_im => ThresholdPrescaling_out1_im,  -- sfix16_En15
              validIn => ThresholdPrescaling_out2,
              dataOut => MagnitudeSquared_out1,  -- ufix30_En30
              validOut => MagnitudeSquared_out2
              );

  u_MovingAverage : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_MovingAverage_block
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              dataIn => MagnitudeSquared_out1,  -- ufix30_En30
              validIn => MagnitudeSquared_out2,
              dataOut => dataIn,  -- ufix30_En24
              validOut => push
              );

  u_ThresholdLimiter : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_ThresholdLimiter
    PORT MAP( x => dataIn,  -- ufix30_En24
              y => y  -- ufix30_En24
              );

  u_StreamSyncronizer : LTE_MIB_H_ip_src_ltehdlDownlinkSyncDemod_StreamSyncronizer
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb => enb,
              pop => pop,
              dataIn => std_logic_vector(Delay6_out1),  -- ufix30_En24
              push => Delay7_out1,
              dataOut => dataOut,  -- ufix30_En24
              validOut => validOut
              );

  dataIn_re_signed <= signed(dataIn_re);

  dataIn_im_signed <= signed(dataIn_im);

  Delay3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay3_out1_re <= to_signed(16#0000#, 16);
        Delay3_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Delay3_out1_re <= dataIn_re_signed;
        Delay3_out1_im <= dataIn_im_signed;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Delay2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay2_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay2_out1 <= validIn;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  MagnitudeSquared0_out1_unsigned <= unsigned(MagnitudeSquared0_out1);

  Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay1_out1 <= to_unsigned(16#00000000#, 30);
      ELSIF enb = '1' THEN
        Delay1_out1 <= MagnitudeSquared0_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay1_process;


  correlation_0 <= std_logic_vector(Delay1_out1);

  MagnitudeSquared1_out1_unsigned <= unsigned(MagnitudeSquared1_out1);

  Delay5_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay5_out1 <= to_unsigned(16#00000000#, 30);
      ELSIF enb = '1' THEN
        Delay5_out1 <= MagnitudeSquared1_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay5_process;


  correlation_1 <= std_logic_vector(Delay5_out1);

  MagnitudeSquared2_out1_unsigned <= unsigned(MagnitudeSquared2_out1);

  Delay4_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay4_out1 <= to_unsigned(16#00000000#, 30);
      ELSIF enb = '1' THEN
        Delay4_out1 <= MagnitudeSquared2_out1_unsigned;
      END IF;
    END IF;
  END PROCESS Delay4_process;


  correlation_2 <= std_logic_vector(Delay4_out1);

  y_unsigned <= unsigned(y);

  Delay6_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay6_out1 <= to_unsigned(16#00000000#, 30);
      ELSIF enb = '1' THEN
        Delay6_out1 <= y_unsigned;
      END IF;
    END IF;
  END PROCESS Delay6_process;


  Delay7_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        Delay7_out1 <= '0';
      ELSIF enb = '1' THEN
        Delay7_out1 <= push;
      END IF;
    END IF;
  END PROCESS Delay7_process;


  threshold <= dataOut;

END rtl;

