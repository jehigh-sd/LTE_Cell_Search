-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEMIBDetectorRFSoC2x2\LTE_MIB_H_ip_src_ADC_To_Vector_Q.vhd
-- Created: 2022-05-23 17:26:55
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_MIB_H_ip_src_ADC_To_Vector_Q
-- Source Path: zynqRadioHWSWLTEMIBDetectorRFSoC2x2/LTE_MIB_HDL/Preprocessor/Vector Decimator/ADC To Vector Q
-- Hierarchy Level: 3
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.LTE_MIB_H_ip_src_LTE_MIB_HDL_pac.ALL;

ENTITY LTE_MIB_H_ip_src_ADC_To_Vector_Q IS
  PORT( packed_in                         :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        Out1_0                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_1                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_2                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_3                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_4                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_5                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_6                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_7                            :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END LTE_MIB_H_ip_src_ADC_To_Vector_Q;


ARCHITECTURE rtl OF LTE_MIB_H_ip_src_ADC_To_Vector_Q IS

  -- Component Declarations
  COMPONENT LTE_MIB_H_ip_src_Unpack_into_vector_v2_block
    PORT( packed_in                       :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          vector_out_0                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_1                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_2                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_3                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_4                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_5                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_6                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
          vector_out_7                    :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : LTE_MIB_H_ip_src_Unpack_into_vector_v2_block
    USE ENTITY work.LTE_MIB_H_ip_src_Unpack_into_vector_v2_block(rtl);

  -- Signals
  SIGNAL vector_out_0                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_1                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_2                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_3                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_4                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_5                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_6                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out_7                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL vector_out                       : vector_of_signed16(0 TO 7);  -- int16 [8]
  SIGNAL Data_Type_Conversion_out1        : vector_of_signed16(0 TO 7);  -- sfix16_En15 [8]

BEGIN
  u_Unpack_into_vector_v2 : LTE_MIB_H_ip_src_Unpack_into_vector_v2_block
    PORT MAP( packed_in => packed_in,  -- ufix128
              vector_out_0 => vector_out_0,  -- int16
              vector_out_1 => vector_out_1,  -- int16
              vector_out_2 => vector_out_2,  -- int16
              vector_out_3 => vector_out_3,  -- int16
              vector_out_4 => vector_out_4,  -- int16
              vector_out_5 => vector_out_5,  -- int16
              vector_out_6 => vector_out_6,  -- int16
              vector_out_7 => vector_out_7  -- int16
              );

  vector_out(0) <= signed(vector_out_0);
  vector_out(1) <= signed(vector_out_1);
  vector_out(2) <= signed(vector_out_2);
  vector_out(3) <= signed(vector_out_3);
  vector_out(4) <= signed(vector_out_4);
  vector_out(5) <= signed(vector_out_5);
  vector_out(6) <= signed(vector_out_6);
  vector_out(7) <= signed(vector_out_7);

  Data_Type_Conversion_out1 <= vector_out;

  Out1_0 <= std_logic_vector(Data_Type_Conversion_out1(0));

  Out1_1 <= std_logic_vector(Data_Type_Conversion_out1(1));

  Out1_2 <= std_logic_vector(Data_Type_Conversion_out1(2));

  Out1_3 <= std_logic_vector(Data_Type_Conversion_out1(3));

  Out1_4 <= std_logic_vector(Data_Type_Conversion_out1(4));

  Out1_5 <= std_logic_vector(Data_Type_Conversion_out1(5));

  Out1_6 <= std_logic_vector(Data_Type_Conversion_out1(6));

  Out1_7 <= std_logic_vector(Data_Type_Conversion_out1(7));

END rtl;

