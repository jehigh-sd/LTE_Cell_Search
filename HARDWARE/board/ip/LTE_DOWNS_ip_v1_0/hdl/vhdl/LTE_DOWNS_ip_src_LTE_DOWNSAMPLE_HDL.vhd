-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\zynqRadioHWSWLTEDecimatorRFSoC2x2\LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL.vhd
-- Created: 2022-05-25 15:55:22
-- 
-- Generated by MATLAB 9.12 and HDL Coder 3.20
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1.6276e-08
-- Target subsystem base rate: 1.6276e-08
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out_1      1.6276e-08
-- ce_out_0      5.20833e-07
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- txI_data                      ce_out_0      5.20833e-07
-- txQ_data                      ce_out_0      5.20833e-07
-- txI_valid                     ce_out_0      5.20833e-07
-- txQ_valid                     ce_out_0      5.20833e-07
-- rxI_ready                     ce_out_1      1.6276e-08
-- rxQ_ready                     ce_out_1      1.6276e-08
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL
-- Source Path: zynqRadioHWSWLTEDecimatorRFSoC2x2/LTE_DOWNSAMPLE_HDL
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL IS
  PORT( clk                               :   IN    std_logic;
        reset_x                           :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        rxdatai_in                        :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        rxdataq_in                        :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
        rxdatai_valid                     :   IN    std_logic;
        rxdataq_valid                     :   IN    std_logic;
        txdatai_ready                     :   IN    std_logic;
        txdataq_ready                     :   IN    std_logic;
        extdatasel_in                     :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        ce_out_0                          :   OUT   std_logic;
        ce_out_1                          :   OUT   std_logic;
        txI_data                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
        txQ_data                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
        txI_valid                         :   OUT   std_logic;
        txQ_valid                         :   OUT   std_logic;
        rxI_ready                         :   OUT   std_logic;
        rxQ_ready                         :   OUT   std_logic
        );
END LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL;


ARCHITECTURE rtl OF LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL IS

  -- Component Declarations
  COMPONENT LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL_tc
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          clk_enable                      :   IN    std_logic;
          enb                             :   OUT   std_logic;
          enb_1_1_1                       :   OUT   std_logic;
          enb_1_2_0                       :   OUT   std_logic;
          enb_1_2_1                       :   OUT   std_logic;
          enb_1_8_0                       :   OUT   std_logic;
          enb_1_8_1                       :   OUT   std_logic;
          enb_1_32_0                      :   OUT   std_logic;
          enb_1_32_1                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT LTE_DOWNS_ip_src_DOWNSAMPLE
    PORT( clk                             :   IN    std_logic;
          reset_x                         :   IN    std_logic;
          enb_1_32_0                      :   IN    std_logic;
          enb                             :   IN    std_logic;
          enb_1_32_1                      :   IN    std_logic;
          enb_1_1_1                       :   IN    std_logic;
          enb_1_8_1                       :   IN    std_logic;
          enb_1_2_1                       :   IN    std_logic;
          enb_1_2_0                       :   IN    std_logic;
          enb_1_8_0                       :   IN    std_logic;
          RxI_dataIn                      :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          RxQ_dataIn                      :   IN    std_logic_vector(127 DOWNTO 0);  -- ufix128
          RxI_validIn                     :   IN    std_logic;
          RxQ_validIn                     :   IN    std_logic;
          Data_Select                     :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
          txDataI_Out                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
          txDataQ_Out                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
          txValidI_Out                    :   OUT   std_logic;
          txValidQ_Out                    :   OUT   std_logic;
          rxReadyI_Out                    :   OUT   std_logic;
          rxReadyQ_Out                    :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL_tc
    USE ENTITY work.LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL_tc(rtl);

  FOR ALL : LTE_DOWNS_ip_src_DOWNSAMPLE
    USE ENTITY work.LTE_DOWNS_ip_src_DOWNSAMPLE(rtl);

  -- Signals
  SIGNAL enb_1_32_0                       : std_logic;
  SIGNAL enb                              : std_logic;
  SIGNAL enb_1_32_1                       : std_logic;
  SIGNAL enb_1_1_1                        : std_logic;
  SIGNAL enb_1_8_1                        : std_logic;
  SIGNAL enb_1_2_1                        : std_logic;
  SIGNAL enb_1_2_0                        : std_logic;
  SIGNAL enb_1_8_0                        : std_logic;
  SIGNAL DOWNSAMPLE_out1                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL DOWNSAMPLE_out2                  : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL DOWNSAMPLE_out3                  : std_logic;
  SIGNAL DOWNSAMPLE_out4                  : std_logic;
  SIGNAL DOWNSAMPLE_out5                  : std_logic;
  SIGNAL DOWNSAMPLE_out6                  : std_logic;
  SIGNAL delayMatch_reg                   : std_logic_vector(0 TO 5);  -- ufix1 [6]
  SIGNAL DOWNSAMPLE_out3_1                : std_logic;
  SIGNAL delayMatch1_reg                  : std_logic_vector(0 TO 5);  -- ufix1 [6]
  SIGNAL DOWNSAMPLE_out4_1                : std_logic;
  SIGNAL delayMatch2_reg                  : std_logic_vector(0 TO 191);  -- ufix1 [192]
  SIGNAL DOWNSAMPLE_out5_1                : std_logic;
  SIGNAL delayMatch3_reg                  : std_logic_vector(0 TO 191);  -- ufix1 [192]
  SIGNAL DOWNSAMPLE_out6_1                : std_logic;

BEGIN
  u_LTE_DOWNSAMPLE_HDL_tc : LTE_DOWNS_ip_src_LTE_DOWNSAMPLE_HDL_tc
    PORT MAP( clk => clk,
              reset_x => reset_x,
              clk_enable => clk_enable,
              enb => enb,
              enb_1_1_1 => enb_1_1_1,
              enb_1_2_0 => enb_1_2_0,
              enb_1_2_1 => enb_1_2_1,
              enb_1_8_0 => enb_1_8_0,
              enb_1_8_1 => enb_1_8_1,
              enb_1_32_0 => enb_1_32_0,
              enb_1_32_1 => enb_1_32_1
              );

  u_DOWNSAMPLE : LTE_DOWNS_ip_src_DOWNSAMPLE
    PORT MAP( clk => clk,
              reset_x => reset_x,
              enb_1_32_0 => enb_1_32_0,
              enb => enb,
              enb_1_32_1 => enb_1_32_1,
              enb_1_1_1 => enb_1_1_1,
              enb_1_8_1 => enb_1_8_1,
              enb_1_2_1 => enb_1_2_1,
              enb_1_2_0 => enb_1_2_0,
              enb_1_8_0 => enb_1_8_0,
              RxI_dataIn => rxdatai_in,  -- ufix128
              RxQ_dataIn => rxdataq_in,  -- ufix128
              RxI_validIn => rxdatai_valid,
              RxQ_validIn => rxdataq_valid,
              Data_Select => extdatasel_in,  -- int32
              txDataI_Out => DOWNSAMPLE_out1,  -- uint16
              txDataQ_Out => DOWNSAMPLE_out2,  -- uint16
              txValidI_Out => DOWNSAMPLE_out3,
              txValidQ_Out => DOWNSAMPLE_out4,
              rxReadyI_Out => DOWNSAMPLE_out5,
              rxReadyQ_Out => DOWNSAMPLE_out6
              );

  delayMatch_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch_reg <= (OTHERS => '0');
      ELSIF enb_1_32_0 = '1' THEN
        delayMatch_reg(0) <= DOWNSAMPLE_out3;
        delayMatch_reg(1 TO 5) <= delayMatch_reg(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch_process;

  DOWNSAMPLE_out3_1 <= delayMatch_reg(5);

  delayMatch1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch1_reg <= (OTHERS => '0');
      ELSIF enb_1_32_0 = '1' THEN
        delayMatch1_reg(0) <= DOWNSAMPLE_out4;
        delayMatch1_reg(1 TO 5) <= delayMatch1_reg(0 TO 4);
      END IF;
    END IF;
  END PROCESS delayMatch1_process;

  DOWNSAMPLE_out4_1 <= delayMatch1_reg(5);

  delayMatch2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch2_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch2_reg(0) <= DOWNSAMPLE_out5;
        delayMatch2_reg(1 TO 191) <= delayMatch2_reg(0 TO 190);
      END IF;
    END IF;
  END PROCESS delayMatch2_process;

  DOWNSAMPLE_out5_1 <= delayMatch2_reg(191);

  delayMatch3_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset_x = '1' THEN
        delayMatch3_reg <= (OTHERS => '0');
      ELSIF enb = '1' THEN
        delayMatch3_reg(0) <= DOWNSAMPLE_out6;
        delayMatch3_reg(1 TO 191) <= delayMatch3_reg(0 TO 190);
      END IF;
    END IF;
  END PROCESS delayMatch3_process;

  DOWNSAMPLE_out6_1 <= delayMatch3_reg(191);

  ce_out_0 <= enb_1_32_1;

  ce_out_1 <= enb_1_1_1;

  txI_data <= DOWNSAMPLE_out1;

  txQ_data <= DOWNSAMPLE_out2;

  txI_valid <= DOWNSAMPLE_out3_1;

  txQ_valid <= DOWNSAMPLE_out4_1;

  rxI_ready <= DOWNSAMPLE_out5_1;

  rxQ_ready <= DOWNSAMPLE_out6_1;

END rtl;

