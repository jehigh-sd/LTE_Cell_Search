// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="lteCellSearch_lteCellSearch,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=16.299999,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.898999,HLS_SYN_LAT=32544017,HLS_SYN_TPT=none,HLS_SYN_MEM=461,HLS_SYN_DSP=0,HLS_SYN_FF=4873,HLS_SYN_LUT=24375,HLS_VERSION=2020_2}" *)

module lteCellSearch (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        IN_R_TDATA,
        IN_R_TVALID,
        IN_R_TREADY,
        IN_R_TKEEP,
        IN_R_TSTRB,
        IN_R_TLAST,
        IN_I_TDATA,
        IN_I_TVALID,
        IN_I_TREADY,
        IN_I_TKEEP,
        IN_I_TSTRB,
        IN_I_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_pp2_stage0 = 13'd128;
parameter    ap_ST_fsm_state11 = 13'd256;
parameter    ap_ST_fsm_state12 = 13'd512;
parameter    ap_ST_fsm_state13 = 13'd1024;
parameter    ap_ST_fsm_state14 = 13'd2048;
parameter    ap_ST_fsm_state15 = 13'd4096;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
input  [15:0] IN_R_TDATA;
input   IN_R_TVALID;
output   IN_R_TREADY;
input  [1:0] IN_R_TKEEP;
input  [1:0] IN_R_TSTRB;
input  [0:0] IN_R_TLAST;
input  [15:0] IN_I_TDATA;
input   IN_I_TVALID;
output   IN_I_TREADY;
input  [1:0] IN_I_TKEEP;
input  [1:0] IN_I_TSTRB;
input  [0:0] IN_I_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
reg    OUT_PSS_ID_ap_vld;
reg    OUT_PEAK_INDEX_ap_vld;
wire   [63:0] OUT_RSLT;
reg    gmem0_blk_n_AW;
wire    ap_CS_fsm_state5;
reg    gmem0_blk_n_W;
reg    ap_enable_reg_pp2_iter2;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln878_1_reg_562;
reg   [0:0] icmp_ln878_1_reg_562_pp2_iter1_reg;
reg    gmem0_blk_n_B;
wire    ap_CS_fsm_state15;
reg    IN_R_TDATA_blk_n;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln878_fu_389_p2;
reg    IN_I_TDATA_blk_n;
reg    gmem0_AWVALID;
wire    gmem0_AWREADY;
reg    gmem0_WVALID;
wire    gmem0_WREADY;
wire   [31:0] gmem0_WDATA;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
wire   [31:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
reg    gmem0_BREADY;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg   [16:0] i_V_1_reg_308;
reg   [63:0] OUT_RSLT_read_reg_501;
wire   [18:0] empty_84_fu_366_p2;
wire    ap_CS_fsm_state2;
wire   [16:0] add_ln691_fu_383_p2;
reg    ap_block_state4;
wire   [18:0] mul_ln203_fu_454_p2;
reg   [18:0] mul_ln203_reg_542;
wire    ap_CS_fsm_state7;
wire   [31:0] zext_ln239_fu_460_p1;
reg   [31:0] zext_ln239_reg_547;
wire   [31:0] zext_ln196_fu_467_p1;
reg   [31:0] zext_ln196_reg_552;
wire   [16:0] add_ln691_1_fu_471_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state9_pp2_stage0_iter1;
wire    ap_block_state10_pp2_stage0_iter2;
reg    ap_block_state10_io;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln878_1_fu_477_p2;
wire   [11:0] pss_rslt_temp_q0;
reg   [11:0] pss_rslt_temp_load_reg_571;
reg    ap_enable_reg_pp2_iter1;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state8;
reg   [18:0] pss_rslt_temp_address0;
reg    pss_rslt_temp_ce0;
reg    pss_rslt_temp_we0;
reg   [11:0] pss_rslt_temp_d0;
reg    pss_rslt_temp_ce1;
reg    pss_rslt_temp_we1;
reg   [16:0] IN_real_V_address0;
reg    IN_real_V_ce0;
reg    IN_real_V_we0;
wire   [22:0] IN_real_V_d0;
wire   [22:0] IN_real_V_q0;
reg    IN_real_V_ce1;
wire   [22:0] IN_real_V_q1;
reg   [16:0] IN_imag_V_address0;
reg    IN_imag_V_ce0;
reg    IN_imag_V_we0;
wire   [22:0] IN_imag_V_d0;
wire   [22:0] IN_imag_V_q0;
reg    IN_imag_V_ce1;
wire   [22:0] IN_imag_V_q1;
wire   [16:0] grp_dataflow_parent_loop_proc_fu_319_IN_real_V_address0;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_real_V_ce0;
wire   [22:0] grp_dataflow_parent_loop_proc_fu_319_IN_real_V_d0;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_real_V_we0;
wire   [16:0] grp_dataflow_parent_loop_proc_fu_319_IN_real_V_address1;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_real_V_ce1;
wire   [22:0] grp_dataflow_parent_loop_proc_fu_319_IN_real_V_d1;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_real_V_we1;
wire   [16:0] grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_address0;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_ce0;
wire   [22:0] grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_d0;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_we0;
wire   [16:0] grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_address1;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_ce1;
wire   [22:0] grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_d1;
wire    grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_we1;
wire   [1:0] grp_dataflow_parent_loop_proc_fu_319_pss_id_temp;
wire   [16:0] grp_dataflow_parent_loop_proc_fu_319_peak_id_temp;
wire   [18:0] grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_address0;
wire    grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_ce0;
wire   [11:0] grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_d0;
wire    grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_we0;
wire   [18:0] grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_address1;
wire    grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_ce1;
wire   [11:0] grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_d1;
wire    grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_we1;
wire    grp_dataflow_parent_loop_proc_fu_319_pss_id_temp_ap_vld;
wire    grp_dataflow_parent_loop_proc_fu_319_peak_id_temp_ap_vld;
wire    grp_dataflow_parent_loop_proc_fu_319_ap_start;
wire    grp_dataflow_parent_loop_proc_fu_319_ap_done;
wire    grp_dataflow_parent_loop_proc_fu_319_ap_ready;
wire    grp_dataflow_parent_loop_proc_fu_319_ap_idle;
reg    grp_dataflow_parent_loop_proc_fu_319_ap_continue;
reg   [18:0] empty_reg_286;
wire   [0:0] exitcond894_i_i_fu_372_p2;
reg   [16:0] i_V_reg_297;
wire    ap_CS_fsm_state3;
reg    grp_dataflow_parent_loop_proc_fu_319_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_ready;
wire    ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_done;
reg    ap_block_state6_on_subcall_done;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_ready;
reg    ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_done;
reg   [1:0] pss_id_temp_fu_162;
reg   [16:0] peak_id_temp_fu_166;
wire   [63:0] p_cast_fu_378_p1;
wire   [63:0] zext_ln878_fu_395_p1;
wire   [63:0] zext_ln203_3_fu_492_p1;
wire   [63:0] sext_ln203_fu_436_p1;
wire    ap_block_pp2_stage0_01001;
wire    ap_CS_fsm_state11;
wire   [61:0] trunc_ln_fu_427_p4;
wire   [1:0] mul_ln203_fu_454_p0;
wire   [17:0] mul_ln203_fu_454_p1;
wire   [18:0] zext_ln203_2_fu_483_p1;
wire   [18:0] add_ln203_fu_487_p2;
reg   [12:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    regslice_both_IN_R_V_data_V_U_apdone_blk;
wire   [15:0] IN_R_TDATA_int_regslice;
wire    IN_R_TVALID_int_regslice;
reg    IN_R_TREADY_int_regslice;
wire    regslice_both_IN_R_V_data_V_U_ack_in;
wire    regslice_both_IN_R_V_keep_V_U_apdone_blk;
wire   [1:0] IN_R_TKEEP_int_regslice;
wire    regslice_both_IN_R_V_keep_V_U_vld_out;
wire    regslice_both_IN_R_V_keep_V_U_ack_in;
wire    regslice_both_IN_R_V_strb_V_U_apdone_blk;
wire   [1:0] IN_R_TSTRB_int_regslice;
wire    regslice_both_IN_R_V_strb_V_U_vld_out;
wire    regslice_both_IN_R_V_strb_V_U_ack_in;
wire    regslice_both_IN_R_V_last_V_U_apdone_blk;
wire   [0:0] IN_R_TLAST_int_regslice;
wire    regslice_both_IN_R_V_last_V_U_vld_out;
wire    regslice_both_IN_R_V_last_V_U_ack_in;
wire    regslice_both_IN_I_V_data_V_U_apdone_blk;
wire   [15:0] IN_I_TDATA_int_regslice;
wire    IN_I_TVALID_int_regslice;
reg    IN_I_TREADY_int_regslice;
wire    regslice_both_IN_I_V_data_V_U_ack_in;
wire    regslice_both_IN_I_V_keep_V_U_apdone_blk;
wire   [1:0] IN_I_TKEEP_int_regslice;
wire    regslice_both_IN_I_V_keep_V_U_vld_out;
wire    regslice_both_IN_I_V_keep_V_U_ack_in;
wire    regslice_both_IN_I_V_strb_V_U_apdone_blk;
wire   [1:0] IN_I_TSTRB_int_regslice;
wire    regslice_both_IN_I_V_strb_V_U_vld_out;
wire    regslice_both_IN_I_V_strb_V_U_ack_in;
wire    regslice_both_IN_I_V_last_V_U_apdone_blk;
wire   [0:0] IN_I_TLAST_int_regslice;
wire    regslice_both_IN_I_V_last_V_U_vld_out;
wire    regslice_both_IN_I_V_last_V_U_ack_in;
wire   [18:0] mul_ln203_fu_454_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 13'd1;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 grp_dataflow_parent_loop_proc_fu_319_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_ready = 1'b0;
#0 ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_done = 1'b0;
end

lteCellSearch_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .OUT_PSS_ID(zext_ln239_reg_547),
    .OUT_PSS_ID_ap_vld(OUT_PSS_ID_ap_vld),
    .OUT_PEAK_INDEX(zext_ln196_reg_552),
    .OUT_PEAK_INDEX_ap_vld(OUT_PEAK_INDEX_ap_vld),
    .OUT_RSLT(OUT_RSLT),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

lteCellSearch_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(gmem0_AWVALID),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(sext_ln203_fu_436_p1),
    .I_AWID(1'd0),
    .I_AWLEN(32'd96000),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem0_WVALID),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(gmem0_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd15),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(gmem0_BREADY),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

lteCellSearch_pss_rslt_temp #(
    .DataWidth( 12 ),
    .AddressRange( 288000 ),
    .AddressWidth( 19 ))
pss_rslt_temp_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pss_rslt_temp_address0),
    .ce0(pss_rslt_temp_ce0),
    .we0(pss_rslt_temp_we0),
    .d0(pss_rslt_temp_d0),
    .q0(pss_rslt_temp_q0),
    .address1(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_address1),
    .ce1(pss_rslt_temp_ce1),
    .we1(pss_rslt_temp_we1),
    .d1(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_d1)
);

lteCellSearch_IN_real_V #(
    .DataWidth( 23 ),
    .AddressRange( 96000 ),
    .AddressWidth( 17 ))
IN_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(IN_real_V_address0),
    .ce0(IN_real_V_ce0),
    .we0(IN_real_V_we0),
    .d0(IN_real_V_d0),
    .q0(IN_real_V_q0),
    .address1(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_address1),
    .ce1(IN_real_V_ce1),
    .q1(IN_real_V_q1)
);

lteCellSearch_IN_real_V #(
    .DataWidth( 23 ),
    .AddressRange( 96000 ),
    .AddressWidth( 17 ))
IN_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(IN_imag_V_address0),
    .ce0(IN_imag_V_ce0),
    .we0(IN_imag_V_we0),
    .d0(IN_imag_V_d0),
    .q0(IN_imag_V_q0),
    .address1(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_address1),
    .ce1(IN_imag_V_ce1),
    .q1(IN_imag_V_q1)
);

lteCellSearch_dataflow_parent_loop_proc grp_dataflow_parent_loop_proc_fu_319(
    .IN_real_V_address0(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_address0),
    .IN_real_V_ce0(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_ce0),
    .IN_real_V_d0(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_d0),
    .IN_real_V_q0(IN_real_V_q0),
    .IN_real_V_we0(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_we0),
    .IN_real_V_address1(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_address1),
    .IN_real_V_ce1(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_ce1),
    .IN_real_V_d1(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_d1),
    .IN_real_V_q1(IN_real_V_q1),
    .IN_real_V_we1(grp_dataflow_parent_loop_proc_fu_319_IN_real_V_we1),
    .IN_imag_V_address0(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_address0),
    .IN_imag_V_ce0(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_ce0),
    .IN_imag_V_d0(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_d0),
    .IN_imag_V_q0(IN_imag_V_q0),
    .IN_imag_V_we0(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_we0),
    .IN_imag_V_address1(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_address1),
    .IN_imag_V_ce1(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_ce1),
    .IN_imag_V_d1(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_d1),
    .IN_imag_V_q1(IN_imag_V_q1),
    .IN_imag_V_we1(grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_we1),
    .pss_id_temp(grp_dataflow_parent_loop_proc_fu_319_pss_id_temp),
    .peak_id_temp(grp_dataflow_parent_loop_proc_fu_319_peak_id_temp),
    .pss_rslt_temp_address0(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_address0),
    .pss_rslt_temp_ce0(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_ce0),
    .pss_rslt_temp_d0(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_d0),
    .pss_rslt_temp_q0(12'd0),
    .pss_rslt_temp_we0(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_we0),
    .pss_rslt_temp_address1(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_address1),
    .pss_rslt_temp_ce1(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_ce1),
    .pss_rslt_temp_d1(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_d1),
    .pss_rslt_temp_q1(12'd0),
    .pss_rslt_temp_we1(grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_we1),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .pss_id_temp_ap_vld(grp_dataflow_parent_loop_proc_fu_319_pss_id_temp_ap_vld),
    .peak_id_temp_ap_vld(grp_dataflow_parent_loop_proc_fu_319_peak_id_temp_ap_vld),
    .ap_start(grp_dataflow_parent_loop_proc_fu_319_ap_start),
    .ap_done(grp_dataflow_parent_loop_proc_fu_319_ap_done),
    .ap_ready(grp_dataflow_parent_loop_proc_fu_319_ap_ready),
    .ap_idle(grp_dataflow_parent_loop_proc_fu_319_ap_idle),
    .ap_continue(grp_dataflow_parent_loop_proc_fu_319_ap_continue)
);

lteCellSearch_mul_2ns_18ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 19 ))
mul_2ns_18ns_19_1_1_U83(
    .din0(mul_ln203_fu_454_p0),
    .din1(mul_ln203_fu_454_p1),
    .dout(mul_ln203_fu_454_p2)
);

lteCellSearch_regslice_both #(
    .DataWidth( 16 ))
regslice_both_IN_R_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_R_TDATA),
    .vld_in(IN_R_TVALID),
    .ack_in(regslice_both_IN_R_V_data_V_U_ack_in),
    .data_out(IN_R_TDATA_int_regslice),
    .vld_out(IN_R_TVALID_int_regslice),
    .ack_out(IN_R_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_R_V_data_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 2 ))
regslice_both_IN_R_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_R_TKEEP),
    .vld_in(IN_R_TVALID),
    .ack_in(regslice_both_IN_R_V_keep_V_U_ack_in),
    .data_out(IN_R_TKEEP_int_regslice),
    .vld_out(regslice_both_IN_R_V_keep_V_U_vld_out),
    .ack_out(IN_R_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_R_V_keep_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 2 ))
regslice_both_IN_R_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_R_TSTRB),
    .vld_in(IN_R_TVALID),
    .ack_in(regslice_both_IN_R_V_strb_V_U_ack_in),
    .data_out(IN_R_TSTRB_int_regslice),
    .vld_out(regslice_both_IN_R_V_strb_V_U_vld_out),
    .ack_out(IN_R_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_R_V_strb_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 1 ))
regslice_both_IN_R_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_R_TLAST),
    .vld_in(IN_R_TVALID),
    .ack_in(regslice_both_IN_R_V_last_V_U_ack_in),
    .data_out(IN_R_TLAST_int_regslice),
    .vld_out(regslice_both_IN_R_V_last_V_U_vld_out),
    .ack_out(IN_R_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_R_V_last_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 16 ))
regslice_both_IN_I_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_I_TDATA),
    .vld_in(IN_I_TVALID),
    .ack_in(regslice_both_IN_I_V_data_V_U_ack_in),
    .data_out(IN_I_TDATA_int_regslice),
    .vld_out(IN_I_TVALID_int_regslice),
    .ack_out(IN_I_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_I_V_data_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 2 ))
regslice_both_IN_I_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_I_TKEEP),
    .vld_in(IN_I_TVALID),
    .ack_in(regslice_both_IN_I_V_keep_V_U_ack_in),
    .data_out(IN_I_TKEEP_int_regslice),
    .vld_out(regslice_both_IN_I_V_keep_V_U_vld_out),
    .ack_out(IN_I_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_I_V_keep_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 2 ))
regslice_both_IN_I_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_I_TSTRB),
    .vld_in(IN_I_TVALID),
    .ack_in(regslice_both_IN_I_V_strb_V_U_ack_in),
    .data_out(IN_I_TSTRB_int_regslice),
    .vld_out(regslice_both_IN_I_V_strb_V_U_vld_out),
    .ack_out(IN_I_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_I_V_strb_V_U_apdone_blk)
);

lteCellSearch_regslice_both #(
    .DataWidth( 1 ))
regslice_both_IN_I_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IN_I_TLAST),
    .vld_in(IN_I_TVALID),
    .ack_in(regslice_both_IN_I_V_last_V_U_ack_in),
    .data_out(IN_I_TLAST_int_regslice),
    .vld_out(regslice_both_IN_I_V_last_V_U_vld_out),
    .ack_out(IN_I_TREADY_int_regslice),
    .apdone_blk(regslice_both_IN_I_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state8)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_done <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_done <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc_fu_319_ap_done == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_ready <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_ready <= 1'b0;
        end else if ((grp_dataflow_parent_loop_proc_fu_319_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_dataflow_parent_loop_proc_fu_319_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state5) & (gmem0_AWREADY == 1'b1)))) begin
            grp_dataflow_parent_loop_proc_fu_319_ap_start_reg <= 1'b1;
        end else if ((grp_dataflow_parent_loop_proc_fu_319_ap_ready == 1'b1)) begin
            grp_dataflow_parent_loop_proc_fu_319_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond894_i_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_286 <= empty_84_fu_366_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_286 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_V_1_reg_308 <= 17'd0;
    end else if (((icmp_ln878_1_fu_477_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_V_1_reg_308 <= add_ln691_1_fu_471_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_V_reg_297 <= 17'd0;
    end else if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        i_V_reg_297 <= add_ln691_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        peak_id_temp_fu_166 <= 17'd0;
    end else if (((grp_dataflow_parent_loop_proc_fu_319_peak_id_temp_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        peak_id_temp_fu_166 <= grp_dataflow_parent_loop_proc_fu_319_peak_id_temp;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        pss_id_temp_fu_162 <= 2'd0;
    end else if (((grp_dataflow_parent_loop_proc_fu_319_pss_id_temp_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        pss_id_temp_fu_162 <= grp_dataflow_parent_loop_proc_fu_319_pss_id_temp;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        OUT_RSLT_read_reg_501 <= OUT_RSLT;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln878_1_reg_562 <= icmp_ln878_1_fu_477_p2;
        icmp_ln878_1_reg_562_pp2_iter1_reg <= icmp_ln878_1_reg_562;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        mul_ln203_reg_542 <= mul_ln203_fu_454_p2;
        zext_ln196_reg_552[16 : 0] <= zext_ln196_fu_467_p1[16 : 0];
        zext_ln239_reg_547[1 : 0] <= zext_ln239_fu_460_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln878_1_reg_562 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        pss_rslt_temp_load_reg_571 <= pss_rslt_temp_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        IN_I_TDATA_blk_n = IN_I_TVALID_int_regslice;
    end else begin
        IN_I_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        IN_I_TREADY_int_regslice = 1'b1;
    end else begin
        IN_I_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        IN_R_TDATA_blk_n = IN_R_TVALID_int_regslice;
    end else begin
        IN_R_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        IN_R_TREADY_int_regslice = 1'b1;
    end else begin
        IN_R_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        IN_imag_V_address0 = zext_ln878_fu_395_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        IN_imag_V_address0 = grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_address0;
    end else begin
        IN_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4))) begin
        IN_imag_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        IN_imag_V_ce0 = grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_ce0;
    end else begin
        IN_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        IN_imag_V_ce1 = grp_dataflow_parent_loop_proc_fu_319_IN_imag_V_ce1;
    end else begin
        IN_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        IN_imag_V_we0 = 1'b1;
    end else begin
        IN_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        IN_real_V_address0 = zext_ln878_fu_395_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        IN_real_V_address0 = grp_dataflow_parent_loop_proc_fu_319_IN_real_V_address0;
    end else begin
        IN_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4))) begin
        IN_real_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        IN_real_V_ce0 = grp_dataflow_parent_loop_proc_fu_319_IN_real_V_ce0;
    end else begin
        IN_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        IN_real_V_ce1 = grp_dataflow_parent_loop_proc_fu_319_IN_real_V_ce1;
    end else begin
        IN_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
        IN_real_V_we0 = 1'b1;
    end else begin
        IN_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OUT_PEAK_INDEX_ap_vld = 1'b1;
    end else begin
        OUT_PEAK_INDEX_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        OUT_PSS_ID_ap_vld = 1'b1;
    end else begin
        OUT_PSS_ID_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln878_1_fu_477_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (gmem0_AWREADY == 1'b1))) begin
        gmem0_AWVALID = 1'b1;
    end else begin
        gmem0_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        gmem0_BREADY = 1'b1;
    end else begin
        gmem0_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln878_1_reg_562_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        gmem0_WVALID = 1'b1;
    end else begin
        gmem0_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        gmem0_blk_n_AW = m_axi_gmem0_AWREADY;
    end else begin
        gmem0_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        gmem0_blk_n_B = m_axi_gmem0_BVALID;
    end else begin
        gmem0_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln878_1_reg_562_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        gmem0_blk_n_W = m_axi_gmem0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
        grp_dataflow_parent_loop_proc_fu_319_ap_continue = 1'b1;
    end else begin
        grp_dataflow_parent_loop_proc_fu_319_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0))) begin
        pss_rslt_temp_address0 = zext_ln203_3_fu_492_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        pss_rslt_temp_address0 = p_cast_fu_378_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pss_rslt_temp_address0 = grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_address0;
    end else begin
        pss_rslt_temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        pss_rslt_temp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pss_rslt_temp_ce0 = grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_ce0;
    end else begin
        pss_rslt_temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pss_rslt_temp_ce1 = grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_ce1;
    end else begin
        pss_rslt_temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        pss_rslt_temp_d0 = 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pss_rslt_temp_d0 = grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_d0;
    end else begin
        pss_rslt_temp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((exitcond894_i_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        pss_rslt_temp_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        pss_rslt_temp_we0 = grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_we0;
    end else begin
        pss_rslt_temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        pss_rslt_temp_we1 = grp_dataflow_parent_loop_proc_fu_319_pss_rslt_temp_we1;
    end else begin
        pss_rslt_temp_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond894_i_i_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state4) & (icmp_ln878_fu_389_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (gmem0_AWREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b0 == ap_block_state6_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln878_1_fu_477_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) & ~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln878_1_fu_477_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((gmem0_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IN_I_TREADY = regslice_both_IN_I_V_data_V_U_ack_in;

assign IN_R_TREADY = regslice_both_IN_R_V_data_V_U_ack_in;

assign IN_imag_V_d0 = {{IN_I_TDATA_int_regslice}, {7'd0}};

assign IN_real_V_d0 = {{IN_R_TDATA_int_regslice}, {7'd0}};

assign add_ln203_fu_487_p2 = (mul_ln203_reg_542 + zext_ln203_2_fu_483_p1);

assign add_ln691_1_fu_471_p2 = (i_V_1_reg_308 + 17'd1);

assign add_ln691_fu_383_p2 = (i_V_reg_297 + 17'd1);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b1 == ap_block_state10_io) & (ap_enable_reg_pp2_iter2 == 1'b1));
end

always @ (*) begin
    ap_block_state10_io = ((gmem0_WREADY == 1'b0) & (icmp_ln878_1_reg_562_pp2_iter1_reg == 1'd0));
end

assign ap_block_state10_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4 = (((1'b0 == IN_I_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)) | ((1'b0 == IN_R_TVALID_int_regslice) & (icmp_ln878_fu_389_p2 == 1'd0)));
end

always @ (*) begin
    ap_block_state6_on_subcall_done = ((ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_ready & ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_done) == 1'b0);
end

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_done = (grp_dataflow_parent_loop_proc_fu_319_ap_done | ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_done);

assign ap_sync_grp_dataflow_parent_loop_proc_fu_319_ap_ready = (grp_dataflow_parent_loop_proc_fu_319_ap_ready | ap_sync_reg_grp_dataflow_parent_loop_proc_fu_319_ap_ready);

assign empty_84_fu_366_p2 = (empty_reg_286 + 19'd1);

assign exitcond894_i_i_fu_372_p2 = ((empty_reg_286 == 19'd288000) ? 1'b1 : 1'b0);

assign gmem0_WDATA = pss_rslt_temp_load_reg_571;

assign grp_dataflow_parent_loop_proc_fu_319_ap_start = grp_dataflow_parent_loop_proc_fu_319_ap_start_reg;

assign icmp_ln878_1_fu_477_p2 = ((i_V_1_reg_308 == 17'd96000) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_389_p2 = ((i_V_reg_297 == 17'd96000) ? 1'b1 : 1'b0);

assign mul_ln203_fu_454_p0 = mul_ln203_fu_454_p00;

assign mul_ln203_fu_454_p00 = pss_id_temp_fu_162;

assign mul_ln203_fu_454_p1 = 19'd96000;

assign p_cast_fu_378_p1 = empty_reg_286;

assign sext_ln203_fu_436_p1 = $signed(trunc_ln_fu_427_p4);

assign trunc_ln_fu_427_p4 = {{OUT_RSLT_read_reg_501[63:2]}};

assign zext_ln196_fu_467_p1 = peak_id_temp_fu_166;

assign zext_ln203_2_fu_483_p1 = i_V_1_reg_308;

assign zext_ln203_3_fu_492_p1 = add_ln203_fu_487_p2;

assign zext_ln239_fu_460_p1 = pss_id_temp_fu_162;

assign zext_ln878_fu_395_p1 = i_V_reg_297;

always @ (posedge ap_clk) begin
    zext_ln239_reg_547[31:2] <= 30'b000000000000000000000000000000;
    zext_ln196_reg_552[31:17] <= 15'b000000000000000;
end


// synthesis translate_off
`include "lteCellSearch_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //lteCellSearch

