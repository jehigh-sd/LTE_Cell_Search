// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module lteCellSearch_dataflow_in_loop_lteCellSearch (
        IN_real_V_address0,
        IN_real_V_ce0,
        IN_real_V_d0,
        IN_real_V_q0,
        IN_real_V_we0,
        IN_real_V_address1,
        IN_real_V_ce1,
        IN_real_V_d1,
        IN_real_V_q1,
        IN_real_V_we1,
        trunc_ln264,
        IN_imag_V_address0,
        IN_imag_V_ce0,
        IN_imag_V_d0,
        IN_imag_V_q0,
        IN_imag_V_we0,
        IN_imag_V_address1,
        IN_imag_V_ce1,
        IN_imag_V_d1,
        IN_imag_V_q1,
        IN_imag_V_we1,
        pss_id_temp,
        peak_id_temp,
        pss_rslt_temp_address0,
        pss_rslt_temp_ce0,
        pss_rslt_temp_d0,
        pss_rslt_temp_q0,
        pss_rslt_temp_we0,
        pss_rslt_temp_address1,
        pss_rslt_temp_ce1,
        pss_rslt_temp_d1,
        pss_rslt_temp_q1,
        pss_rslt_temp_we1,
        ap_clk,
        ap_rst,
        trunc_ln264_ap_vld,
        ap_start,
        pss_id_temp_ap_vld,
        peak_id_temp_ap_vld,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [16:0] IN_real_V_address0;
output   IN_real_V_ce0;
output  [22:0] IN_real_V_d0;
input  [22:0] IN_real_V_q0;
output   IN_real_V_we0;
output  [16:0] IN_real_V_address1;
output   IN_real_V_ce1;
output  [22:0] IN_real_V_d1;
input  [22:0] IN_real_V_q1;
output   IN_real_V_we1;
input  [16:0] trunc_ln264;
output  [16:0] IN_imag_V_address0;
output   IN_imag_V_ce0;
output  [22:0] IN_imag_V_d0;
input  [22:0] IN_imag_V_q0;
output   IN_imag_V_we0;
output  [16:0] IN_imag_V_address1;
output   IN_imag_V_ce1;
output  [22:0] IN_imag_V_d1;
input  [22:0] IN_imag_V_q1;
output   IN_imag_V_we1;
output  [1:0] pss_id_temp;
output  [16:0] peak_id_temp;
output  [18:0] pss_rslt_temp_address0;
output   pss_rslt_temp_ce0;
output  [11:0] pss_rslt_temp_d0;
input  [11:0] pss_rslt_temp_q0;
output   pss_rslt_temp_we0;
output  [18:0] pss_rslt_temp_address1;
output   pss_rslt_temp_ce1;
output  [11:0] pss_rslt_temp_d1;
input  [11:0] pss_rslt_temp_q1;
output   pss_rslt_temp_we1;
input   ap_clk;
input   ap_rst;
input   trunc_ln264_ap_vld;
input   ap_start;
output   pss_id_temp_ap_vld;
output   peak_id_temp_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    dataflow_in_loop_lteCellSearch_entry25_U0_ap_start;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_ap_done;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_ap_continue;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_ap_idle;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready;
wire   [16:0] dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out_din;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out_write;
wire   [16:0] dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out1_din;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out1_write;
wire    compute_threshold_U0_ap_start;
wire    compute_threshold_U0_ap_done;
wire    compute_threshold_U0_ap_continue;
wire    compute_threshold_U0_ap_idle;
wire    compute_threshold_U0_ap_ready;
wire   [16:0] compute_threshold_U0_IN_real_V_address0;
wire    compute_threshold_U0_IN_real_V_ce0;
wire    compute_threshold_U0_trunc_ln264_read;
wire   [16:0] compute_threshold_U0_IN_imag_V_address0;
wire    compute_threshold_U0_IN_imag_V_ce0;
wire   [16:0] compute_threshold_U0_trunc_ln264_out_din;
wire    compute_threshold_U0_trunc_ln264_out_write;
wire   [31:0] compute_threshold_U0_ap_return;
wire    ap_channel_done_thresh_V;
wire    thresh_V_full_n;
wire    compute_pss_U0_ap_start;
wire    compute_pss_U0_ap_done;
wire    compute_pss_U0_ap_continue;
wire    compute_pss_U0_ap_idle;
wire    compute_pss_U0_ap_ready;
wire   [16:0] compute_pss_U0_IN_real_V_address1;
wire    compute_pss_U0_IN_real_V_ce1;
wire    compute_pss_U0_trunc_ln264_read;
wire   [16:0] compute_pss_U0_IN_imag_V_address1;
wire    compute_pss_U0_IN_imag_V_ce1;
wire   [19:0] compute_pss_U0_ap_return_0;
wire   [19:0] compute_pss_U0_ap_return_1;
wire   [19:0] compute_pss_U0_ap_return_2;
wire    ap_channel_done_pss_rslt_2_V;
wire    pss_rslt_2_V_full_n;
reg    ap_sync_reg_channel_write_pss_rslt_2_V;
wire    ap_sync_channel_write_pss_rslt_2_V;
wire    ap_channel_done_pss_rslt_1_V;
wire    pss_rslt_1_V_full_n;
reg    ap_sync_reg_channel_write_pss_rslt_1_V;
wire    ap_sync_channel_write_pss_rslt_1_V;
wire    ap_channel_done_pss_rslt_0_V;
wire    pss_rslt_0_V_full_n;
reg    ap_sync_reg_channel_write_pss_rslt_0_V;
wire    ap_sync_channel_write_pss_rslt_0_V;
wire    track_pss_peak_U0_ap_start;
wire    track_pss_peak_U0_ap_done;
wire    track_pss_peak_U0_ap_continue;
wire    track_pss_peak_U0_ap_idle;
wire    track_pss_peak_U0_ap_ready;
wire   [1:0] track_pss_peak_U0_pss_id_temp;
wire    track_pss_peak_U0_pss_id_temp_ap_vld;
wire   [16:0] track_pss_peak_U0_peak_id_temp;
wire    track_pss_peak_U0_peak_id_temp_ap_vld;
wire    track_pss_peak_U0_trunc_ln264_read;
wire   [18:0] track_pss_peak_U0_pss_rslt_temp_address0;
wire    track_pss_peak_U0_pss_rslt_temp_ce0;
wire    track_pss_peak_U0_pss_rslt_temp_we0;
wire   [11:0] track_pss_peak_U0_pss_rslt_temp_d0;
wire   [18:0] track_pss_peak_U0_pss_rslt_temp_address1;
wire    track_pss_peak_U0_pss_rslt_temp_ce1;
wire    track_pss_peak_U0_pss_rslt_temp_we1;
wire   [11:0] track_pss_peak_U0_pss_rslt_temp_d1;
wire    ap_sync_continue;
wire    trunc_ln264_c_full_n;
wire   [16:0] trunc_ln264_c_dout;
wire    trunc_ln264_c_empty_n;
wire    trunc_ln264_c1_full_n;
wire   [16:0] trunc_ln264_c1_dout;
wire    trunc_ln264_c1_empty_n;
wire    trunc_ln264_c2_full_n;
wire   [16:0] trunc_ln264_c2_dout;
wire    trunc_ln264_c2_empty_n;
wire   [31:0] thresh_V_dout;
wire    thresh_V_empty_n;
wire   [19:0] pss_rslt_0_V_dout;
wire    pss_rslt_0_V_empty_n;
wire   [19:0] pss_rslt_1_V_dout;
wire    pss_rslt_1_V_empty_n;
wire   [19:0] pss_rslt_2_V_dout;
wire    pss_rslt_2_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready;
wire    ap_sync_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready;
reg    ap_sync_reg_compute_threshold_U0_ap_ready;
wire    ap_sync_compute_threshold_U0_ap_ready;
reg    ap_sync_reg_compute_pss_U0_ap_ready;
wire    ap_sync_compute_pss_U0_ap_ready;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_start_full_n;
wire    dataflow_in_loop_lteCellSearch_entry25_U0_start_write;
wire    compute_threshold_U0_start_full_n;
wire    compute_threshold_U0_start_write;
wire    compute_pss_U0_start_full_n;
wire    compute_pss_U0_start_write;
wire    track_pss_peak_U0_start_full_n;
wire    track_pss_peak_U0_start_write;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_pss_rslt_2_V = 1'b0;
#0 ap_sync_reg_channel_write_pss_rslt_1_V = 1'b0;
#0 ap_sync_reg_channel_write_pss_rslt_0_V = 1'b0;
#0 ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready = 1'b0;
#0 ap_sync_reg_compute_threshold_U0_ap_ready = 1'b0;
#0 ap_sync_reg_compute_pss_U0_ap_ready = 1'b0;
end

lteCellSearch_dataflow_in_loop_lteCellSearch_entry25 dataflow_in_loop_lteCellSearch_entry25_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dataflow_in_loop_lteCellSearch_entry25_U0_ap_start),
    .ap_done(dataflow_in_loop_lteCellSearch_entry25_U0_ap_done),
    .ap_continue(dataflow_in_loop_lteCellSearch_entry25_U0_ap_continue),
    .ap_idle(dataflow_in_loop_lteCellSearch_entry25_U0_ap_idle),
    .ap_ready(dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready),
    .trunc_ln264(trunc_ln264),
    .trunc_ln264_out_din(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out_din),
    .trunc_ln264_out_full_n(trunc_ln264_c_full_n),
    .trunc_ln264_out_write(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out_write),
    .trunc_ln264_out1_din(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out1_din),
    .trunc_ln264_out1_full_n(trunc_ln264_c1_full_n),
    .trunc_ln264_out1_write(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out1_write)
);

lteCellSearch_compute_threshold compute_threshold_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(compute_threshold_U0_ap_start),
    .ap_done(compute_threshold_U0_ap_done),
    .ap_continue(compute_threshold_U0_ap_continue),
    .ap_idle(compute_threshold_U0_ap_idle),
    .ap_ready(compute_threshold_U0_ap_ready),
    .IN_real_V_address0(compute_threshold_U0_IN_real_V_address0),
    .IN_real_V_ce0(compute_threshold_U0_IN_real_V_ce0),
    .IN_real_V_q0(IN_real_V_q0),
    .trunc_ln264_dout(trunc_ln264_c_dout),
    .trunc_ln264_empty_n(trunc_ln264_c_empty_n),
    .trunc_ln264_read(compute_threshold_U0_trunc_ln264_read),
    .IN_imag_V_address0(compute_threshold_U0_IN_imag_V_address0),
    .IN_imag_V_ce0(compute_threshold_U0_IN_imag_V_ce0),
    .IN_imag_V_q0(IN_imag_V_q0),
    .trunc_ln264_out_din(compute_threshold_U0_trunc_ln264_out_din),
    .trunc_ln264_out_full_n(trunc_ln264_c2_full_n),
    .trunc_ln264_out_write(compute_threshold_U0_trunc_ln264_out_write),
    .ap_return(compute_threshold_U0_ap_return)
);

lteCellSearch_compute_pss compute_pss_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(compute_pss_U0_ap_start),
    .ap_done(compute_pss_U0_ap_done),
    .ap_continue(compute_pss_U0_ap_continue),
    .ap_idle(compute_pss_U0_ap_idle),
    .ap_ready(compute_pss_U0_ap_ready),
    .IN_real_V_address1(compute_pss_U0_IN_real_V_address1),
    .IN_real_V_ce1(compute_pss_U0_IN_real_V_ce1),
    .IN_real_V_q1(IN_real_V_q1),
    .trunc_ln264_dout(trunc_ln264_c1_dout),
    .trunc_ln264_empty_n(trunc_ln264_c1_empty_n),
    .trunc_ln264_read(compute_pss_U0_trunc_ln264_read),
    .IN_imag_V_address1(compute_pss_U0_IN_imag_V_address1),
    .IN_imag_V_ce1(compute_pss_U0_IN_imag_V_ce1),
    .IN_imag_V_q1(IN_imag_V_q1),
    .ap_return_0(compute_pss_U0_ap_return_0),
    .ap_return_1(compute_pss_U0_ap_return_1),
    .ap_return_2(compute_pss_U0_ap_return_2)
);

lteCellSearch_track_pss_peak track_pss_peak_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(track_pss_peak_U0_ap_start),
    .ap_done(track_pss_peak_U0_ap_done),
    .ap_continue(track_pss_peak_U0_ap_continue),
    .ap_idle(track_pss_peak_U0_ap_idle),
    .ap_ready(track_pss_peak_U0_ap_ready),
    .p_read(pss_rslt_0_V_dout),
    .p_read1(pss_rslt_1_V_dout),
    .p_read2(pss_rslt_2_V_dout),
    .p_read3(thresh_V_dout),
    .pss_id_temp(track_pss_peak_U0_pss_id_temp),
    .pss_id_temp_ap_vld(track_pss_peak_U0_pss_id_temp_ap_vld),
    .peak_id_temp(track_pss_peak_U0_peak_id_temp),
    .peak_id_temp_ap_vld(track_pss_peak_U0_peak_id_temp_ap_vld),
    .trunc_ln264_dout(trunc_ln264_c2_dout),
    .trunc_ln264_empty_n(trunc_ln264_c2_empty_n),
    .trunc_ln264_read(track_pss_peak_U0_trunc_ln264_read),
    .pss_rslt_temp_address0(track_pss_peak_U0_pss_rslt_temp_address0),
    .pss_rslt_temp_ce0(track_pss_peak_U0_pss_rslt_temp_ce0),
    .pss_rslt_temp_we0(track_pss_peak_U0_pss_rslt_temp_we0),
    .pss_rslt_temp_d0(track_pss_peak_U0_pss_rslt_temp_d0),
    .pss_rslt_temp_address1(track_pss_peak_U0_pss_rslt_temp_address1),
    .pss_rslt_temp_ce1(track_pss_peak_U0_pss_rslt_temp_ce1),
    .pss_rslt_temp_we1(track_pss_peak_U0_pss_rslt_temp_we1),
    .pss_rslt_temp_d1(track_pss_peak_U0_pss_rslt_temp_d1)
);

lteCellSearch_fifo_w17_d2_S trunc_ln264_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out_din),
    .if_full_n(trunc_ln264_c_full_n),
    .if_write(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out_write),
    .if_dout(trunc_ln264_c_dout),
    .if_empty_n(trunc_ln264_c_empty_n),
    .if_read(compute_threshold_U0_trunc_ln264_read)
);

lteCellSearch_fifo_w17_d2_S trunc_ln264_c1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out1_din),
    .if_full_n(trunc_ln264_c1_full_n),
    .if_write(dataflow_in_loop_lteCellSearch_entry25_U0_trunc_ln264_out1_write),
    .if_dout(trunc_ln264_c1_dout),
    .if_empty_n(trunc_ln264_c1_empty_n),
    .if_read(compute_pss_U0_trunc_ln264_read)
);

lteCellSearch_fifo_w17_d2_S trunc_ln264_c2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_threshold_U0_trunc_ln264_out_din),
    .if_full_n(trunc_ln264_c2_full_n),
    .if_write(compute_threshold_U0_trunc_ln264_out_write),
    .if_dout(trunc_ln264_c2_dout),
    .if_empty_n(trunc_ln264_c2_empty_n),
    .if_read(track_pss_peak_U0_trunc_ln264_read)
);

lteCellSearch_fifo_w32_d2_S thresh_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_threshold_U0_ap_return),
    .if_full_n(thresh_V_full_n),
    .if_write(compute_threshold_U0_ap_done),
    .if_dout(thresh_V_dout),
    .if_empty_n(thresh_V_empty_n),
    .if_read(track_pss_peak_U0_ap_ready)
);

lteCellSearch_fifo_w20_d2_S pss_rslt_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_pss_U0_ap_return_0),
    .if_full_n(pss_rslt_0_V_full_n),
    .if_write(ap_channel_done_pss_rslt_0_V),
    .if_dout(pss_rslt_0_V_dout),
    .if_empty_n(pss_rslt_0_V_empty_n),
    .if_read(track_pss_peak_U0_ap_ready)
);

lteCellSearch_fifo_w20_d2_S pss_rslt_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_pss_U0_ap_return_1),
    .if_full_n(pss_rslt_1_V_full_n),
    .if_write(ap_channel_done_pss_rslt_1_V),
    .if_dout(pss_rslt_1_V_dout),
    .if_empty_n(pss_rslt_1_V_empty_n),
    .if_read(track_pss_peak_U0_ap_ready)
);

lteCellSearch_fifo_w20_d2_S pss_rslt_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(compute_pss_U0_ap_return_2),
    .if_full_n(pss_rslt_2_V_full_n),
    .if_write(ap_channel_done_pss_rslt_2_V),
    .if_dout(pss_rslt_2_V_dout),
    .if_empty_n(pss_rslt_2_V_empty_n),
    .if_read(track_pss_peak_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_pss_rslt_0_V <= 1'b0;
    end else begin
        if (((compute_pss_U0_ap_done & compute_pss_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pss_rslt_0_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pss_rslt_0_V <= ap_sync_channel_write_pss_rslt_0_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_pss_rslt_1_V <= 1'b0;
    end else begin
        if (((compute_pss_U0_ap_done & compute_pss_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pss_rslt_1_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pss_rslt_1_V <= ap_sync_channel_write_pss_rslt_1_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_pss_rslt_2_V <= 1'b0;
    end else begin
        if (((compute_pss_U0_ap_done & compute_pss_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_pss_rslt_2_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_pss_rslt_2_V <= ap_sync_channel_write_pss_rslt_2_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_compute_pss_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_compute_pss_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_compute_pss_U0_ap_ready <= ap_sync_compute_pss_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_compute_threshold_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_compute_threshold_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_compute_threshold_U0_ap_ready <= ap_sync_compute_threshold_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready <= ap_sync_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready;
        end
    end
end

assign IN_imag_V_address0 = compute_threshold_U0_IN_imag_V_address0;

assign IN_imag_V_address1 = compute_pss_U0_IN_imag_V_address1;

assign IN_imag_V_ce0 = compute_threshold_U0_IN_imag_V_ce0;

assign IN_imag_V_ce1 = compute_pss_U0_IN_imag_V_ce1;

assign IN_imag_V_d0 = 23'd0;

assign IN_imag_V_d1 = 23'd0;

assign IN_imag_V_we0 = 1'b0;

assign IN_imag_V_we1 = 1'b0;

assign IN_real_V_address0 = compute_threshold_U0_IN_real_V_address0;

assign IN_real_V_address1 = compute_pss_U0_IN_real_V_address1;

assign IN_real_V_ce0 = compute_threshold_U0_IN_real_V_ce0;

assign IN_real_V_ce1 = compute_pss_U0_IN_real_V_ce1;

assign IN_real_V_d0 = 23'd0;

assign IN_real_V_d1 = 23'd0;

assign IN_real_V_we0 = 1'b0;

assign IN_real_V_we1 = 1'b0;

assign ap_channel_done_pss_rslt_0_V = ((ap_sync_reg_channel_write_pss_rslt_0_V ^ 1'b1) & compute_pss_U0_ap_done);

assign ap_channel_done_pss_rslt_1_V = ((ap_sync_reg_channel_write_pss_rslt_1_V ^ 1'b1) & compute_pss_U0_ap_done);

assign ap_channel_done_pss_rslt_2_V = ((ap_sync_reg_channel_write_pss_rslt_2_V ^ 1'b1) & compute_pss_U0_ap_done);

assign ap_channel_done_thresh_V = compute_threshold_U0_ap_done;

assign ap_done = track_pss_peak_U0_ap_done;

assign ap_idle = (track_pss_peak_U0_ap_idle & (pss_rslt_2_V_empty_n ^ 1'b1) & (pss_rslt_1_V_empty_n ^ 1'b1) & (pss_rslt_0_V_empty_n ^ 1'b1) & (thresh_V_empty_n ^ 1'b1) & dataflow_in_loop_lteCellSearch_entry25_U0_ap_idle & compute_threshold_U0_ap_idle & compute_pss_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_pss_rslt_0_V = ((pss_rslt_0_V_full_n & ap_channel_done_pss_rslt_0_V) | ap_sync_reg_channel_write_pss_rslt_0_V);

assign ap_sync_channel_write_pss_rslt_1_V = ((pss_rslt_1_V_full_n & ap_channel_done_pss_rslt_1_V) | ap_sync_reg_channel_write_pss_rslt_1_V);

assign ap_sync_channel_write_pss_rslt_2_V = ((pss_rslt_2_V_full_n & ap_channel_done_pss_rslt_2_V) | ap_sync_reg_channel_write_pss_rslt_2_V);

assign ap_sync_compute_pss_U0_ap_ready = (compute_pss_U0_ap_ready | ap_sync_reg_compute_pss_U0_ap_ready);

assign ap_sync_compute_threshold_U0_ap_ready = (compute_threshold_U0_ap_ready | ap_sync_reg_compute_threshold_U0_ap_ready);

assign ap_sync_continue = ap_continue;

assign ap_sync_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready = (dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready | ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready);

assign ap_sync_done = track_pss_peak_U0_ap_done;

assign ap_sync_ready = (ap_sync_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready & ap_sync_compute_threshold_U0_ap_ready & ap_sync_compute_pss_U0_ap_ready);

assign compute_pss_U0_ap_continue = (ap_sync_channel_write_pss_rslt_2_V & ap_sync_channel_write_pss_rslt_1_V & ap_sync_channel_write_pss_rslt_0_V);

assign compute_pss_U0_ap_start = ((ap_sync_reg_compute_pss_U0_ap_ready ^ 1'b1) & ap_start);

assign compute_pss_U0_start_full_n = 1'b1;

assign compute_pss_U0_start_write = 1'b0;

assign compute_threshold_U0_ap_continue = thresh_V_full_n;

assign compute_threshold_U0_ap_start = ((ap_sync_reg_compute_threshold_U0_ap_ready ^ 1'b1) & ap_start);

assign compute_threshold_U0_start_full_n = 1'b1;

assign compute_threshold_U0_start_write = 1'b0;

assign dataflow_in_loop_lteCellSearch_entry25_U0_ap_continue = 1'b1;

assign dataflow_in_loop_lteCellSearch_entry25_U0_ap_start = ((ap_sync_reg_dataflow_in_loop_lteCellSearch_entry25_U0_ap_ready ^ 1'b1) & ap_start);

assign dataflow_in_loop_lteCellSearch_entry25_U0_start_full_n = 1'b1;

assign dataflow_in_loop_lteCellSearch_entry25_U0_start_write = 1'b0;

assign peak_id_temp = track_pss_peak_U0_peak_id_temp;

assign peak_id_temp_ap_vld = track_pss_peak_U0_peak_id_temp_ap_vld;

assign pss_id_temp = track_pss_peak_U0_pss_id_temp;

assign pss_id_temp_ap_vld = track_pss_peak_U0_pss_id_temp_ap_vld;

assign pss_rslt_temp_address0 = track_pss_peak_U0_pss_rslt_temp_address0;

assign pss_rslt_temp_address1 = track_pss_peak_U0_pss_rslt_temp_address1;

assign pss_rslt_temp_ce0 = track_pss_peak_U0_pss_rslt_temp_ce0;

assign pss_rslt_temp_ce1 = track_pss_peak_U0_pss_rslt_temp_ce1;

assign pss_rslt_temp_d0 = track_pss_peak_U0_pss_rslt_temp_d0;

assign pss_rslt_temp_d1 = track_pss_peak_U0_pss_rslt_temp_d1;

assign pss_rslt_temp_we0 = track_pss_peak_U0_pss_rslt_temp_we0;

assign pss_rslt_temp_we1 = track_pss_peak_U0_pss_rslt_temp_we1;

assign track_pss_peak_U0_ap_continue = ap_continue;

assign track_pss_peak_U0_ap_start = (thresh_V_empty_n & pss_rslt_2_V_empty_n & pss_rslt_1_V_empty_n & pss_rslt_0_V_empty_n);

assign track_pss_peak_U0_start_full_n = 1'b1;

assign track_pss_peak_U0_start_write = 1'b0;

endmodule //lteCellSearch_dataflow_in_loop_lteCellSearch
