-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity lteCellSearch_write_buffer_fft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    IN_real_V_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    IN_real_V_ce0 : OUT STD_LOGIC;
    IN_real_V_q0 : IN STD_LOGIC_VECTOR (22 downto 0);
    IN_imag_V_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    IN_imag_V_ce0 : OUT STD_LOGIC;
    IN_imag_V_q0 : IN STD_LOGIC_VECTOR (22 downto 0);
    OUT_FFT_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    OUT_FFT_TVALID : OUT STD_LOGIC;
    OUT_FFT_TREADY : IN STD_LOGIC;
    OUT_FFT_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_FFT_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    OUT_FFT_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    index : IN STD_LOGIC_VECTOR (16 downto 0);
    pss_id : IN STD_LOGIC_VECTOR (1 downto 0);
    pss_id_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    pss_id_TVALID : OUT STD_LOGIC;
    pss_id_TREADY : IN STD_LOGIC;
    pss_id_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    pss_id_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    pss_id_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of lteCellSearch_write_buffer_fft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv18_3FF77 : STD_LOGIC_VECTOR (17 downto 0) := "111111111101110111";
    constant ap_const_lv18_3FEF8 : STD_LOGIC_VECTOR (17 downto 0) := "111111111011111000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFE8 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111101000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv6_39 : STD_LOGIC_VECTOR (5 downto 0) := "111001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_FFFFFFE7 : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv17_1FF77 : STD_LOGIC_VECTOR (16 downto 0) := "11111111101110111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal OUT_FFT_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln216_reg_1225 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal pss_id_TDATA_blk_n : STD_LOGIC;
    signal i_reg_213 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_data_0_fu_238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_data_0_reg_1210 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_1_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_1_reg_1215 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln216_fu_262_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln216_fu_270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln216_1_fu_275_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal zext_ln225_fu_897_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln303_1_fu_883_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_i4_data_fu_1196_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal grp_fu_224_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_230_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal index_cast2_fu_242_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub3_fu_246_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln216_fu_256_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln216_fu_266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_cast_fu_281_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_cast_fu_281_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_230_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_fu_285_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal m_16_fu_291_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln937_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_13_fu_303_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_fu_313_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_fu_321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_fu_327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_333_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_fu_349_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_fu_353_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_fu_359_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_fu_363_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_fu_369_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_3_fu_375_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_fu_381_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_393_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_fu_407_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_fu_431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_2_fu_427_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_fu_343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_fu_455_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_fu_415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_fu_447_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_1_fu_421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_fu_465_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_fu_441_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_fu_471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_fu_479_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_fu_487_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_5_fu_491_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_17_fu_497_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_s_fu_511_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_fu_527_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln964_fu_531_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_fu_519_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_fu_537_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_543_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_15_fu_551_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal LD_fu_563_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_7_cast_fu_575_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln935_2_fu_579_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_16_fu_585_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_7_cast_fu_575_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_16_fu_585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_2_fu_593_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal m_18_fu_599_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln937_2_fu_607_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_17_fu_611_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_2_fu_621_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln944_2_fu_629_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_1_fu_635_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_641_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_1_fu_657_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_1_fu_661_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_1_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_1_fu_671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_2_fu_677_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_fu_683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_2_fu_689_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_fu_715_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_1_fu_709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_2_fu_739_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_4_fu_735_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_3_fu_745_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_1_fu_651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_1_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_2_fu_763_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_2_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_2_fu_723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_1_fu_755_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_3_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_2_fu_773_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_2_fu_749_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_2_fu_779_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_9_fu_787_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_2_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_10_fu_799_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_19_fu_805_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_5_fu_819_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln943_1_fu_835_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln964_1_fu_839_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln943_1_fu_827_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_1_fu_845_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_1_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_fu_851_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_19_fu_859_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln935_2_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal LD_1_fu_871_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_1_fu_875_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_fu_567_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln225_fu_892_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_Val2_2_cast_fu_902_p0 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Val2_2_cast_fu_902_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_4_fu_906_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal m_20_fu_912_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sext_ln937_1_fu_920_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_21_fu_924_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_1_fu_934_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln943_2_fu_942_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln944_1_fu_952_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal lsb_index_2_fu_958_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_964_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln947_2_fu_980_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln947_2_fu_984_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln947_2_fu_990_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal lshr_ln947_2_fu_994_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln949_1_fu_1000_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln949_4_fu_1006_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln949_4_fu_1012_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1024_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_22_fu_1038_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln949_2_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln959_1_fu_1062_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln959_5_fu_1058_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln959_1_fu_1068_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln946_2_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln949_2_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln958_1_fu_1086_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln958_1_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln958_1_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln946_2_fu_1078_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln949_5_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln958_1_fu_1096_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln959_1_fu_1072_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln958_4_fu_1102_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal m_13_fu_1110_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln961_1_fu_1118_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_14_fu_1122_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal m_21_fu_1128_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal p_Result_10_fu_1142_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln943_fu_946_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln964_fu_1150_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln964_2_fu_1158_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln962_2_fu_1138_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1164_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_23_fu_1172_p5 : STD_LOGIC_VECTOR (63 downto 0);
    signal LD_2_fu_1184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln935_2_fu_1188_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_213_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln216_fu_270_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_reg_213 <= add_ln216_1_fu_275_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_213 <= sext_ln216_fu_262_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln216_reg_1225 <= icmp_ln216_fu_270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sext_ln216_1_reg_1215 <= sext_ln216_1_fu_252_p1;
                    tmp_i_data_0_reg_1210(1 downto 0) <= tmp_i_data_0_fu_238_p1(1 downto 0);
            end if;
        end if;
    end process;
    tmp_i_data_0_reg_1210(31 downto 2) <= "000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, OUT_FFT_TREADY, pss_id_TREADY, ap_CS_fsm_state5, icmp_ln216_fu_270_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_state5_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln216_fu_270_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln216_fu_270_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if ((not(((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY) or (ap_const_boolean_1 = ap_block_state5_io))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    IN_imag_V_address0 <= i_reg_213(17 - 1 downto 0);

    IN_imag_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            IN_imag_V_ce0 <= ap_const_logic_1;
        else 
            IN_imag_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    IN_real_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_reg_213, ap_enable_reg_pp0_iter0, ap_CS_fsm_state4, zext_ln225_fu_897_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            IN_real_V_address0 <= zext_ln225_fu_897_p1(17 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            IN_real_V_address0 <= i_reg_213(17 - 1 downto 0);
        else 
            IN_real_V_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    IN_real_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            IN_real_V_ce0 <= ap_const_logic_1;
        else 
            IN_real_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    LD_1_fu_871_p1 <= p_Result_19_fu_859_p5(32 - 1 downto 0);
    LD_2_fu_1184_p1 <= p_Result_23_fu_1172_p5(32 - 1 downto 0);
    LD_fu_563_p1 <= p_Result_15_fu_551_p5(32 - 1 downto 0);

    OUT_FFT_TDATA_assign_proc : process(OUT_FFT_TREADY, pss_id_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln216_reg_1225, ap_CS_fsm_state5, or_ln303_1_fu_883_p3, ap_block_pp0_stage0_01001, tmp_i4_data_fu_1196_p3)
    begin
        if ((not(((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            OUT_FFT_TDATA <= tmp_i4_data_fu_1196_p3;
        elsif (((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUT_FFT_TDATA <= or_ln303_1_fu_883_p3;
        else 
            OUT_FFT_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    OUT_FFT_TDATA_blk_n_assign_proc : process(OUT_FFT_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln216_reg_1225, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            OUT_FFT_TDATA_blk_n <= OUT_FFT_TREADY;
        else 
            OUT_FFT_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OUT_FFT_TKEEP <= ap_const_lv8_FF;

    OUT_FFT_TLAST_assign_proc : process(OUT_FFT_TREADY, pss_id_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln216_reg_1225, ap_CS_fsm_state5, ap_block_pp0_stage0_01001)
    begin
        if ((not(((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            OUT_FFT_TLAST <= ap_const_lv1_1;
        elsif (((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            OUT_FFT_TLAST <= ap_const_lv1_0;
        else 
            OUT_FFT_TLAST <= "X";
        end if; 
    end process;

    OUT_FFT_TSTRB <= ap_const_lv8_1;

    OUT_FFT_TVALID_assign_proc : process(OUT_FFT_TREADY, pss_id_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln216_reg_1225, ap_CS_fsm_state5, ap_block_pp0_stage0_11001, ap_block_state5_io)
    begin
        if ((((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or (not(((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY) or (ap_const_boolean_1 = ap_block_state5_io))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            OUT_FFT_TVALID <= ap_const_logic_1;
        else 
            OUT_FFT_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    add_ln216_1_fu_275_p2 <= std_logic_vector(unsigned(i_reg_213) + unsigned(ap_const_lv64_1));
    add_ln216_fu_256_p2 <= std_logic_vector(unsigned(index_cast2_fu_242_p1) + unsigned(ap_const_lv18_3FEF8));
    add_ln225_fu_892_p2 <= std_logic_vector(unsigned(index) + unsigned(ap_const_lv17_1FF77));
    add_ln958_1_fu_1086_p2 <= std_logic_vector(unsigned(sub_ln944_1_fu_952_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_2_fu_763_p2 <= std_logic_vector(unsigned(sub_ln944_2_fu_629_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln958_fu_455_p2 <= std_logic_vector(unsigned(sub_ln944_fu_321_p2) + unsigned(ap_const_lv32_FFFFFFE7));
    add_ln964_1_fu_845_p2 <= std_logic_vector(unsigned(sub_ln964_1_fu_839_p2) + unsigned(select_ln943_1_fu_827_p3));
    add_ln964_2_fu_1158_p2 <= std_logic_vector(unsigned(sub_ln943_fu_946_p2) + unsigned(select_ln964_fu_1150_p3));
    add_ln964_fu_537_p2 <= std_logic_vector(unsigned(sub_ln964_fu_531_p2) + unsigned(select_ln943_fu_519_p3));
    and_ln949_1_fu_421_p2 <= (xor_ln949_fu_401_p2 and p_Result_14_fu_407_p3);
    and_ln949_2_fu_689_p2 <= (sext_ln937_2_fu_607_p1 and or_ln949_fu_683_p2);
    and_ln949_3_fu_729_p2 <= (xor_ln949_1_fu_709_p2 and p_Result_18_fu_715_p3);
    and_ln949_4_fu_1012_p2 <= (sext_ln937_1_fu_920_p1 and or_ln949_4_fu_1006_p2);
    and_ln949_5_fu_1052_p2 <= (xor_ln949_2_fu_1032_p2 and p_Result_22_fu_1038_p3);
    and_ln949_fu_381_p2 <= (sext_ln937_fu_299_p1 and or_ln949_3_fu_375_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(OUT_FFT_TREADY, ap_enable_reg_pp0_iter1, icmp_ln216_reg_1225)
    begin
                ap_block_pp0_stage0_01001 <= ((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_0 = OUT_FFT_TREADY));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(OUT_FFT_TREADY, ap_enable_reg_pp0_iter1, icmp_ln216_reg_1225, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_logic_0 = OUT_FFT_TREADY))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(OUT_FFT_TREADY, ap_enable_reg_pp0_iter1, icmp_ln216_reg_1225, ap_block_state3_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or ((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_logic_0 = OUT_FFT_TREADY))));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(OUT_FFT_TREADY, icmp_ln216_reg_1225)
    begin
                ap_block_state3_io <= ((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_logic_0 = OUT_FFT_TREADY));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(OUT_FFT_TREADY, icmp_ln216_reg_1225)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln216_reg_1225 = ap_const_lv1_1) and (ap_const_logic_0 = OUT_FFT_TREADY));
    end process;


    ap_block_state5_assign_proc : process(OUT_FFT_TREADY, pss_id_TREADY)
    begin
                ap_block_state5 <= ((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY));
    end process;


    ap_block_state5_io_assign_proc : process(OUT_FFT_TREADY, pss_id_TREADY)
    begin
                ap_block_state5_io <= ((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln216_fu_270_p2)
    begin
        if ((icmp_ln216_fu_270_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_224_p0 <= IN_real_V_q0;
    grp_fu_224_p2 <= "1" when (grp_fu_224_p0 = ap_const_lv23_0) else "0";
    grp_fu_230_p1 <= IN_real_V_q0;
    grp_fu_230_p3 <= grp_fu_230_p1(22 downto 22);
    icmp_ln216_fu_270_p2 <= "1" when (signed(trunc_ln216_fu_266_p1) < signed(sext_ln216_1_reg_1215)) else "0";
    icmp_ln935_2_fu_579_p0 <= IN_imag_V_q0;
    icmp_ln935_2_fu_579_p2 <= "1" when (icmp_ln935_2_fu_579_p0 = ap_const_lv23_0) else "0";
    icmp_ln946_1_fu_651_p2 <= "1" when (signed(tmp_8_fu_641_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_2_fu_974_p2 <= "1" when (signed(tmp_12_fu_964_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln946_fu_343_p2 <= "1" when (signed(tmp_4_fu_333_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln949_1_fu_695_p2 <= "0" when (and_ln949_2_fu_689_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_2_fu_1018_p2 <= "0" when (and_ln949_4_fu_1012_p2 = ap_const_lv32_0) else "1";
    icmp_ln949_fu_387_p2 <= "0" when (and_ln949_fu_381_p2 = ap_const_lv32_0) else "1";
    icmp_ln958_1_fu_1046_p2 <= "1" when (signed(lsb_index_2_fu_958_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_2_fu_723_p2 <= "1" when (signed(lsb_index_1_fu_635_p2) > signed(ap_const_lv32_0)) else "0";
    icmp_ln958_fu_415_p2 <= "1" when (signed(lsb_index_fu_327_p2) > signed(ap_const_lv32_0)) else "0";
    index_cast2_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index),18));
    
    l_1_fu_934_p3_proc : process(p_Result_21_fu_924_p4)
    begin
        l_1_fu_934_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_21_fu_924_p4(i) = '1' then
                l_1_fu_934_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_2_fu_621_p3_proc : process(p_Result_17_fu_611_p4)
    begin
        l_2_fu_621_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_17_fu_611_p4(i) = '1' then
                l_2_fu_621_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    
    l_fu_313_p3_proc : process(p_Result_13_fu_303_p4)
    begin
        l_fu_313_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_13_fu_303_p4(i) = '1' then
                l_fu_313_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    lsb_index_1_fu_635_p2 <= std_logic_vector(unsigned(sub_ln944_2_fu_629_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_2_fu_958_p2 <= std_logic_vector(unsigned(sub_ln944_1_fu_952_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lsb_index_fu_327_p2 <= std_logic_vector(unsigned(sub_ln944_fu_321_p2) + unsigned(ap_const_lv32_FFFFFFE8));
    lshr_ln947_1_fu_671_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_1_fu_667_p1(31-1 downto 0)))));
    lshr_ln947_2_fu_994_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_2_fu_990_p1(31-1 downto 0)))));
    lshr_ln947_fu_363_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv32_FFFFFFFF),to_integer(unsigned('0' & zext_ln947_fu_359_p1(31-1 downto 0)))));
    lshr_ln958_1_fu_1096_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_5_fu_1058_p1),to_integer(unsigned('0' & zext_ln958_1_fu_1092_p1(31-1 downto 0)))));
    lshr_ln958_2_fu_773_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_4_fu_735_p1),to_integer(unsigned('0' & zext_ln958_2_fu_769_p1(31-1 downto 0)))));
    lshr_ln958_fu_465_p2 <= std_logic_vector(shift_right(unsigned(zext_ln959_2_fu_427_p1),to_integer(unsigned('0' & zext_ln958_fu_461_p1(31-1 downto 0)))));
    m_10_fu_799_p2 <= std_logic_vector(unsigned(m_9_fu_787_p3) + unsigned(zext_ln961_2_fu_795_p1));
    m_13_fu_1110_p3 <= 
        lshr_ln958_1_fu_1096_p2 when (icmp_ln958_1_fu_1046_p2(0) = '1') else 
        shl_ln959_1_fu_1072_p2;
    m_14_fu_1122_p2 <= std_logic_vector(unsigned(m_13_fu_1110_p3) + unsigned(zext_ln961_1_fu_1118_p1));
    m_16_fu_291_p3 <= 
        tmp_V_fu_285_p2 when (grp_fu_230_p3(0) = '1') else 
        p_Val2_cast_fu_281_p1;
    m_17_fu_497_p4 <= m_5_fu_491_p2(63 downto 1);
    m_18_fu_599_p3 <= 
        tmp_V_2_fu_593_p2 when (p_Result_16_fu_585_p3(0) = '1') else 
        p_Val2_7_cast_fu_575_p1;
    m_19_fu_805_p4 <= m_10_fu_799_p2(63 downto 1);
    m_20_fu_912_p3 <= 
        tmp_V_4_fu_906_p2 when (grp_fu_230_p3(0) = '1') else 
        p_Val2_2_cast_fu_902_p1;
    m_21_fu_1128_p4 <= m_14_fu_1122_p2(63 downto 1);
    m_5_fu_491_p2 <= std_logic_vector(unsigned(m_fu_479_p3) + unsigned(zext_ln961_fu_487_p1));
    m_9_fu_787_p3 <= 
        lshr_ln958_2_fu_773_p2 when (icmp_ln958_2_fu_723_p2(0) = '1') else 
        shl_ln959_2_fu_749_p2;
    m_fu_479_p3 <= 
        lshr_ln958_fu_465_p2 when (icmp_ln958_fu_415_p2(0) = '1') else 
        shl_ln959_fu_441_p2;
    or_ln303_1_fu_883_p3 <= (select_ln935_1_fu_875_p3 & select_ln935_fu_567_p3);
    or_ln949_3_fu_375_p2 <= (shl_ln949_fu_369_p2 or lshr_ln947_fu_363_p2);
    or_ln949_4_fu_1006_p2 <= (shl_ln949_1_fu_1000_p2 or lshr_ln947_2_fu_994_p2);
    or_ln949_fu_683_p2 <= (shl_ln949_2_fu_677_p2 or lshr_ln947_1_fu_671_p2);
    p_Result_10_fu_1142_p3 <= m_14_fu_1122_p2(25 downto 25);
    
    p_Result_13_fu_303_p4_proc : process(sext_ln937_fu_299_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_13_fu_303_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := sext_ln937_fu_299_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_13_fu_303_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_13_fu_303_p4_i) := sext_ln937_fu_299_p1(32-1-p_Result_13_fu_303_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_13_fu_303_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_14_fu_407_p3 <= sext_ln937_fu_299_p1(to_integer(unsigned(lsb_index_fu_327_p2)) downto to_integer(unsigned(lsb_index_fu_327_p2))) when (to_integer(unsigned(lsb_index_fu_327_p2))>= 0 and to_integer(unsigned(lsb_index_fu_327_p2))<=31) else "-";
    p_Result_15_fu_551_p5 <= (zext_ln962_fu_507_p1(63 downto 32) & tmp_fu_543_p3 & zext_ln962_fu_507_p1(22 downto 0));
    p_Result_16_fu_585_p1 <= IN_imag_V_q0;
    p_Result_16_fu_585_p3 <= p_Result_16_fu_585_p1(22 downto 22);
    
    p_Result_17_fu_611_p4_proc : process(sext_ln937_2_fu_607_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_17_fu_611_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := sext_ln937_2_fu_607_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_17_fu_611_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_17_fu_611_p4_i) := sext_ln937_2_fu_607_p1(32-1-p_Result_17_fu_611_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_17_fu_611_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_18_fu_715_p3 <= sext_ln937_2_fu_607_p1(to_integer(unsigned(lsb_index_1_fu_635_p2)) downto to_integer(unsigned(lsb_index_1_fu_635_p2))) when (to_integer(unsigned(lsb_index_1_fu_635_p2))>= 0 and to_integer(unsigned(lsb_index_1_fu_635_p2))<=31) else "-";
    p_Result_19_fu_859_p5 <= (zext_ln962_1_fu_815_p1(63 downto 32) & tmp_3_fu_851_p3 & zext_ln962_1_fu_815_p1(22 downto 0));
    
    p_Result_21_fu_924_p4_proc : process(sext_ln937_1_fu_920_p1)
    variable vlo_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(32+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable p_Result_21_fu_924_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(32 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1F(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := sext_ln937_1_fu_920_p1;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(32-1-unsigned(ap_const_lv32_1F(5-1 downto 0)));
            for p_Result_21_fu_924_p4_i in 0 to 32-1 loop
                v0_cpy(p_Result_21_fu_924_p4_i) := sext_ln937_1_fu_920_p1(32-1-p_Result_21_fu_924_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(32-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_21_fu_924_p4 <= resvalue(32-1 downto 0);
    end process;

    p_Result_22_fu_1038_p3 <= sext_ln937_1_fu_920_p1(to_integer(unsigned(lsb_index_2_fu_958_p2)) downto to_integer(unsigned(lsb_index_2_fu_958_p2))) when (to_integer(unsigned(lsb_index_2_fu_958_p2))>= 0 and to_integer(unsigned(lsb_index_2_fu_958_p2))<=31) else "-";
    p_Result_23_fu_1172_p5 <= (zext_ln962_2_fu_1138_p1(63 downto 32) & tmp_1_fu_1164_p3 & zext_ln962_2_fu_1138_p1(22 downto 0));
    p_Result_5_fu_819_p3 <= m_10_fu_799_p2(25 downto 25);
    p_Result_s_fu_511_p3 <= m_5_fu_491_p2(25 downto 25);
    p_Val2_2_cast_fu_902_p0 <= IN_real_V_q0;
        p_Val2_2_cast_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_2_cast_fu_902_p0),24));

    p_Val2_7_cast_fu_575_p0 <= IN_imag_V_q0;
        p_Val2_7_cast_fu_575_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_7_cast_fu_575_p0),24));

    p_Val2_cast_fu_281_p0 <= IN_real_V_q0;
        p_Val2_cast_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_cast_fu_281_p0),24));

    pss_id_TDATA <= tmp_i_data_0_reg_1210;

    pss_id_TDATA_blk_n_assign_proc : process(pss_id_TREADY, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            pss_id_TDATA_blk_n <= pss_id_TREADY;
        else 
            pss_id_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    pss_id_TKEEP <= ap_const_lv4_F;
    pss_id_TLAST <= ap_const_lv1_1;
    pss_id_TSTRB <= ap_const_lv4_1;

    pss_id_TVALID_assign_proc : process(OUT_FFT_TREADY, pss_id_TREADY, ap_CS_fsm_state5, ap_block_state5_io)
    begin
        if ((not(((pss_id_TREADY = ap_const_logic_0) or (ap_const_logic_0 = OUT_FFT_TREADY) or (ap_const_boolean_1 = ap_block_state5_io))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            pss_id_TVALID <= ap_const_logic_1;
        else 
            pss_id_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    select_ln935_1_fu_875_p3 <= 
        ap_const_lv32_0 when (icmp_ln935_2_fu_579_p2(0) = '1') else 
        LD_1_fu_871_p1;
    select_ln935_2_fu_1188_p3 <= 
        ap_const_lv32_0 when (grp_fu_224_p2(0) = '1') else 
        LD_2_fu_1184_p1;
    select_ln935_fu_567_p3 <= 
        ap_const_lv32_0 when (grp_fu_224_p2(0) = '1') else 
        LD_fu_563_p1;
    select_ln943_1_fu_827_p3 <= 
        ap_const_lv8_7F when (p_Result_5_fu_819_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln943_fu_519_p3 <= 
        ap_const_lv8_7F when (p_Result_s_fu_511_p3(0) = '1') else 
        ap_const_lv8_7E;
    select_ln946_1_fu_755_p3 <= 
        icmp_ln949_1_fu_695_p2 when (icmp_ln946_1_fu_651_p2(0) = '1') else 
        p_Result_18_fu_715_p3;
    select_ln946_2_fu_1078_p3 <= 
        icmp_ln949_2_fu_1018_p2 when (icmp_ln946_2_fu_974_p2(0) = '1') else 
        p_Result_22_fu_1038_p3;
    select_ln946_fu_447_p3 <= 
        icmp_ln949_fu_387_p2 when (icmp_ln946_fu_343_p2(0) = '1') else 
        p_Result_14_fu_407_p3;
    select_ln958_2_fu_779_p3 <= 
        select_ln946_1_fu_755_p3 when (icmp_ln958_2_fu_723_p2(0) = '1') else 
        and_ln949_3_fu_729_p2;
    select_ln958_4_fu_1102_p3 <= 
        select_ln946_2_fu_1078_p3 when (icmp_ln958_1_fu_1046_p2(0) = '1') else 
        and_ln949_5_fu_1052_p2;
    select_ln958_fu_471_p3 <= 
        select_ln946_fu_447_p3 when (icmp_ln958_fu_415_p2(0) = '1') else 
        and_ln949_1_fu_421_p2;
    select_ln964_fu_1150_p3 <= 
        ap_const_lv8_7F when (p_Result_10_fu_1142_p3(0) = '1') else 
        ap_const_lv8_7E;
        sext_ln216_1_fu_252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub3_fu_246_p2),32));

        sext_ln216_fu_262_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln216_fu_256_p2),64));

        sext_ln937_1_fu_920_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_20_fu_912_p3),32));

        sext_ln937_2_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_18_fu_599_p3),32));

        sext_ln937_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(m_16_fu_291_p3),32));

    shl_ln949_1_fu_1000_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_2_fu_958_p2(31-1 downto 0)))));
    shl_ln949_2_fu_677_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_1_fu_635_p2(31-1 downto 0)))));
    shl_ln949_fu_369_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv32_1),to_integer(unsigned('0' & lsb_index_fu_327_p2(31-1 downto 0)))));
    shl_ln959_1_fu_1072_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_5_fu_1058_p1),to_integer(unsigned('0' & zext_ln959_1_fu_1068_p1(31-1 downto 0)))));
    shl_ln959_2_fu_749_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_4_fu_735_p1),to_integer(unsigned('0' & zext_ln959_3_fu_745_p1(31-1 downto 0)))));
    shl_ln959_fu_441_p2 <= std_logic_vector(shift_left(unsigned(zext_ln959_2_fu_427_p1),to_integer(unsigned('0' & zext_ln959_fu_437_p1(31-1 downto 0)))));
    sub3_fu_246_p2 <= std_logic_vector(unsigned(index_cast2_fu_242_p1) + unsigned(ap_const_lv18_3FF77));
    sub_ln943_fu_946_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_2_fu_942_p1));
    sub_ln944_1_fu_952_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_1_fu_934_p3));
    sub_ln944_2_fu_629_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_2_fu_621_p3));
    sub_ln944_fu_321_p2 <= std_logic_vector(unsigned(ap_const_lv32_20) - unsigned(l_fu_313_p3));
    sub_ln947_1_fu_661_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_1_fu_657_p1));
    sub_ln947_2_fu_984_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_2_fu_980_p1));
    sub_ln947_fu_353_p2 <= std_logic_vector(signed(ap_const_lv6_39) - signed(trunc_ln947_fu_349_p1));
    sub_ln959_1_fu_1062_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_1_fu_952_p2));
    sub_ln959_2_fu_739_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_2_fu_629_p2));
    sub_ln959_fu_431_p2 <= std_logic_vector(unsigned(ap_const_lv32_19) - unsigned(sub_ln944_fu_321_p2));
    sub_ln964_1_fu_839_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_1_fu_835_p1));
    sub_ln964_fu_531_p2 <= std_logic_vector(unsigned(ap_const_lv8_C) - unsigned(trunc_ln943_fu_527_p1));
    tmp_12_fu_964_p4 <= lsb_index_2_fu_958_p2(31 downto 1);
    tmp_13_fu_1024_p3 <= lsb_index_2_fu_958_p2(31 downto 31);
    tmp_1_fu_1164_p3 <= (grp_fu_230_p3 & add_ln964_2_fu_1158_p2);
    tmp_3_fu_851_p3 <= (p_Result_16_fu_585_p3 & add_ln964_1_fu_845_p2);
    tmp_4_fu_333_p4 <= lsb_index_fu_327_p2(31 downto 1);
    tmp_5_fu_393_p3 <= lsb_index_fu_327_p2(31 downto 31);
    tmp_8_fu_641_p4 <= lsb_index_1_fu_635_p2(31 downto 1);
    tmp_9_fu_701_p3 <= lsb_index_1_fu_635_p2(31 downto 31);
    tmp_V_2_fu_593_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(p_Val2_7_cast_fu_575_p1));
    tmp_V_4_fu_906_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(p_Val2_2_cast_fu_902_p1));
    tmp_V_fu_285_p2 <= std_logic_vector(unsigned(ap_const_lv24_0) - unsigned(p_Val2_cast_fu_281_p1));
    tmp_fu_543_p3 <= (grp_fu_230_p3 & add_ln964_fu_537_p2);
    tmp_i4_data_fu_1196_p3 <= (select_ln935_2_fu_1188_p3 & select_ln935_2_fu_1188_p3);
    tmp_i_data_0_fu_238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pss_id),32));
    trunc_ln216_fu_266_p1 <= i_reg_213(32 - 1 downto 0);
    trunc_ln943_1_fu_835_p1 <= l_2_fu_621_p3(8 - 1 downto 0);
    trunc_ln943_2_fu_942_p1 <= l_1_fu_934_p3(8 - 1 downto 0);
    trunc_ln943_fu_527_p1 <= l_fu_313_p3(8 - 1 downto 0);
    trunc_ln947_1_fu_657_p1 <= sub_ln944_2_fu_629_p2(6 - 1 downto 0);
    trunc_ln947_2_fu_980_p1 <= sub_ln944_1_fu_952_p2(6 - 1 downto 0);
    trunc_ln947_fu_349_p1 <= sub_ln944_fu_321_p2(6 - 1 downto 0);
    xor_ln949_1_fu_709_p2 <= (tmp_9_fu_701_p3 xor ap_const_lv1_1);
    xor_ln949_2_fu_1032_p2 <= (tmp_13_fu_1024_p3 xor ap_const_lv1_1);
    xor_ln949_fu_401_p2 <= (tmp_5_fu_393_p3 xor ap_const_lv1_1);
    zext_ln225_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln225_fu_892_p2),64));
    zext_ln947_1_fu_667_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_1_fu_661_p2),32));
    zext_ln947_2_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_2_fu_984_p2),32));
    zext_ln947_fu_359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln947_fu_353_p2),32));
    zext_ln958_1_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_1_fu_1086_p2),64));
    zext_ln958_2_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_2_fu_763_p2),64));
    zext_ln958_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln958_fu_455_p2),64));
    zext_ln959_1_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_1_fu_1062_p2),64));
    zext_ln959_2_fu_427_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln937_fu_299_p1),64));
    zext_ln959_3_fu_745_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_2_fu_739_p2),64));
    zext_ln959_4_fu_735_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln937_2_fu_607_p1),64));
    zext_ln959_5_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln937_1_fu_920_p1),64));
    zext_ln959_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln959_fu_431_p2),64));
    zext_ln961_1_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_4_fu_1102_p3),64));
    zext_ln961_2_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_2_fu_779_p3),64));
    zext_ln961_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln958_fu_471_p3),64));
    zext_ln962_1_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_19_fu_805_p4),64));
    zext_ln962_2_fu_1138_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_21_fu_1128_p4),64));
    zext_ln962_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(m_17_fu_497_p4),64));
end behav;
